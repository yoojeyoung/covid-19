{"version":3,"sources":["layout.css","layout.scss","../_src/_scss/_setting.scss"],"names":[],"mappings":"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","file":"../css_partials/layout.css","sourcesContent":["@charset \"UTF-8\";\n/*! pc & tablet 버전 - css */\n/*! mobile 버전 - css */\n/* [loading] layout.css이나 reset.css 둘중 아무 파일 하단에 추가  */\n/* Safari */\n/* // [loading] layout.css이나 reset.css 둘중 아무 파일 하단에 추가  */\n.page_wrap {\n  min-width: 1280px;\n  background: #f2f2f2; }\n\n.page_wrap.page_layout:after {\n  display: block;\n  content: '';\n  clear: both; }\n\n.front_body {\n  background: #f2f2f2; }\n\n.page_leftzone {\n  width: 250px;\n  width: 25rem;\n  position: relative;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: #511bb4;\n  height: 100%; }\n\n.page_leftzone:before {\n  display: block;\n  content: '';\n  width: 250px;\n  width: 25rem;\n  background: #511bb4;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0; }\n\n.page_leftzone > * {\n  position: relative;\n  z-index: 5; }\n\n.plz_layer {\n  position: relative;\n  z-index: 5;\n  height: 60px;\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #5d2bb9; }\n\n.plz_tit {\n  font-size: 21px;\n  font-size: 2.1rem;\n  color: #fff;\n  font-family: 'NanumSquare';\n  font-weight: 700;\n  line-height: 1; }\n\n.plz_cont_w {\n  position: relative;\n  z-index: 5; }\n\n.plm_list {\n  width: 250px;\n  width: 25rem; }\n\n.plm_list > li {\n  position: relative; }\n  .plm_list > li .plm_in {\n    position: relative;\n    font-size: 14px;\n    font-size: 1.4rem;\n    color: #94a5bb;\n    line-height: 1.3; }\n    .plm_list > li .plm_in::before {\n      content: \"\";\n      position: absolute;\n      top: -4px;\n      top: -0.4rem;\n      left: -30px;\n      left: -3rem;\n      width: 24px;\n      width: 2.4rem;\n      height: 25px;\n      height: 2.5rem; }\n  .plm_list > li:nth-child(1) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_situation.png); }\n  .plm_list > li:nth-child(2) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_status.png); }\n  .plm_list > li:nth-child(3) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_chart.png); }\n  .plm_list > li:nth-child(4) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_research.png); }\n  .plm_list > li:nth-child(5) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_notice.png); }\n  .plm_list > li:nth-child(6) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_confirmed.png); }\n  .plm_list > li:nth-child(7) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_inspection.png); }\n  .plm_list > li:nth-child(8) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_data.png); }\n  .plm_list > li:nth-child(9) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_kakao.png); }\n  .plm_list > li:nth-child(10) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_set.png); }\n  .plm_list > li:nth-child(11) .plm_in::before {\n    width: 24px;\n    width: 2.4rem;\n    height: 24px;\n    height: 2.4rem;\n    background: url(../images/menu/ico_user.png); }\n\n.plm_list > li.active .pltm_list li {\n  background: #0f1c49; }\n\n.plm_list > li.active .plm_in {\n  color: #fff; }\n\n.plm_list > li.active:nth-child(1) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_situation_on.png); }\n\n.plm_list > li.active:nth-child(2) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_status_on.png); }\n\n.plm_list > li.active:nth-child(3) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_chart_on.png); }\n\n.plm_list > li.active:nth-child(4) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_research_on.png); }\n\n.plm_list > li.active:nth-child(5) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_notice_on.png); }\n\n.plm_list > li.active:nth-child(6) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_confirmed_on.png); }\n\n.plm_list > li.active:nth-child(7) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_inspection_on.png); }\n\n.plm_list > li.active:nth-child(8) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_data_on.png); }\n\n.plm_list > li.active:nth-child(9) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_kakao_on.png); }\n\n.plm_list > li.active:nth-child(10) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_set_on.png); }\n\n.plm_list > li.active:nth-child(11) .plm_in::before {\n  width: 24px;\n  width: 2.4rem;\n  height: 24px;\n  height: 2.4rem;\n  background: url(../images/menu/ico_user_on.png); }\n\n.plm_list > li.active .plm.on:after {\n  transform: rotate(45deg); }\n\n.plm_list > li.active .plm_ico:before {\n  opacity: 1;\n  border-color: #13d5aa; }\n\n.touchmode .plm_list > li.active .plm_ico:before {\n  background-image: url(\"../images/admin/ico_lm_ratio_active.png\"); }\n\n.plm {\n  display: block;\n  position: relative;\n  padding: 13px 45px 13px 58px;\n  padding: 1.3rem 4.5rem 1.3rem 5.8rem;\n  overflow: hidden; }\n\n.plm.on:after {\n  display: block;\n  content: '';\n  width: 8px;\n  width: 0.8rem;\n  height: 8px;\n  height: 0.8rem;\n  opacity: .55;\n  position: absolute;\n  top: 15px;\n  top: 1.5rem;\n  right: 25px;\n  right: 2.5rem;\n  border-right: 1px solid rgba(255, 255, 255, 0.55);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.55);\n  transform: translateZ(0);\n  transform: rotate(-45deg);\n  transition: all ease .3s; }\n\n.pltm_list_w {\n  display: none; }\n\n.pltm_list > li {\n  position: relative;\n  padding: 13px 45px 13px 50px;\n  padding: 1.3rem 4.5rem 1.3rem 5rem; }\n\n.pltm_list > li.active .pltm {\n  color: #13d5aa; }\n\n.pltm_list > li:last-of-type {\n  margin-bottom: 0; }\n\n.pltm {\n  display: inline-block;\n  font-size: 12px;\n  font-size: 1.2rem;\n  color: #fff; }\n\n.page_rightzone {\n  margin-left: 250px;\n  margin-left: 25rem; }\n\n.page_rightzone > * {\n  position: relative;\n  z-index: 5; }\n\n.prz_maplow {\n  position: relative;\n  z-index: 10;\n  box-sizing: border-box;\n  background: #fff;\n  padding: 0 40px 0 30px;\n  padding: 0 4rem 0 3rem;\n  border-bottom: 1px solid #dcdcdc; }\n\n.prz_maptb_w {\n  height: 60px;\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: left; }\n\n.prz_maptb {\n  display: table;\n  width: 100%;\n  height: 60px;\n  height: 6rem; }\n\n.prz_maptd {\n  display: table-cell;\n  vertical-align: middle; }\n\n.prz_maptd:after {\n  display: block;\n  content: '';\n  clear: both; }\n\n.pgright_wrap .inner {\n  max-width: 1612px;\n  max-width: 161.2rem;\n  margin: 106px auto 0;\n  margin: 10.6rem auto 0;\n  padding: 0 24px;\n  padding: 0 2.4rem; }\n\n.pgright_wrap .inner .tit {\n  color: #1d2747;\n  font-size: 24px;\n  font-size: 2.4rem;\n  font-weight: bold; }\n\n.pmap_list {\n  display: table; }\n\n.pmap_list > li {\n  display: table-cell;\n  vertical-align: middle;\n  padding-right: 26px;\n  padding-right: 2.6rem;\n  position: relative; }\n\n.pmap_list > li:after {\n  display: block;\n  content: '';\n  width: 6px;\n  width: 0.6rem;\n  height: 6px;\n  height: 0.6rem;\n  position: absolute;\n  top: 3px;\n  top: 0.3rem;\n  right: 12px;\n  right: 1.2rem;\n  border-right: 1px solid #a4a4a4;\n  border-bottom: 1px solid #a4a4a4;\n  transform: translateZ(0);\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  -moz-transform: translateZ(0);\n  -webkit-transform: rotate(-45deg);\n  transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg); }\n\n.pmap_list > li.has_phome {\n  padding: 0 7px 0 0;\n  padding: 0 0.7rem 0 0; }\n\n.pmap_list > li.has_phome:after {\n  display: none; }\n\n.pmap_list > li:last-of-type {\n  padding-right: 0; }\n\n.pmap_list > li:last-of-type:after {\n  display: none; }\n\n.pgleft_wrap {\n  position: fixed;\n  top: 60px;\n  left: 0;\n  width: 250px;\n  height: calc(100% - 60px);\n  background: #283356;\n  z-index: 50;\n  transition: .4s;\n  overflow: hidden;\n  overflow-y: auto; }\n\n.pgright_wrap {\n  margin: 60px 0 0 250px;\n  transition: .4s;\n  background: #f5f5f7; }\n\n.page_wrap.fold .plm {\n  padding: 0;\n  height: 60px;\n  height: 6rem; }\n\n.page_wrap.fold .pgright_wrap {\n  margin-left: 60px;\n  margin-left: 6rem; }\n\n.page_wrap.fold .pgh_title,\n.page_wrap.fold .plm_in,\n.page_wrap.fold .plm:after,\n.page_wrap.fold .pltm_list_w {\n  display: none !important; }\n\n.page_wrap.fold .pgleft_wrap {\n  width: 60px;\n  width: 6rem; }\n\n.page_wrap.fold .pgh_title {\n  opacity: 0; }\n\n.page_wrap.fold .pghleft_w {\n  width: 60px;\n  width: 6rem;\n  padding-right: 0; }\n\n/* */\n.cform_body {\n  width: 100%;\n  height: 100%;\n  background: #f2f2f2; }\n\n.cform_wrap {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  overflow-y: auto;\n  background: #f5f6f7;\n  position: fixed;\n  top: 0;\n  left: 0; }\n\n.cform_box_tb {\n  display: table;\n  width: 100%;\n  height: 100%;\n  table-layout: fixed; }\n\n.cform_box_td {\n  display: table-cell;\n  vertical-align: middle;\n  padding: 40px;\n  padding: 4rem;\n  background: url(../images/login/img-visual-login.png) right center no-repeat; }\n\n.cform_box_w {\n  padding: 40px; }\n\n.cform_box {\n  background: #fff;\n  border: 1px solid #e2e2e2;\n  border-radius: 10px;\n  width: 584px;\n  width: 58.4rem;\n  text-align: center;\n  padding: 32px;\n  padding: 3.2rem;\n  box-sizing: border-box;\n  margin: 0 auto;\n  box-shadow: 0 0 22.3px 1.7px rgba(1, 71, 126, 0.19); }\n\n.cform_titlow {\n  text-align: left; }\n\n.cform_titlow .cform_tit_in {\n  font-size: 32px;\n  font-size: 3.2rem;\n  color: #2883c5;\n  font-family: 'NanumSquare';\n  font-weight: 500; }\n\n.cform_titlow .sub-title {\n  margin-top: 15px;\n  margin-top: 1.5rem;\n  font-size: 18px;\n  font-size: 1.8rem;\n  color: #5e5e5e;\n  line-height: 1.5; }\n\n.cform_tit.has_ico02:after {\n  background-image: url(\"../images/admin/ico_logpw.png\");\n  width: 70px;\n  width: 7rem;\n  height: 70px;\n  height: 7rem; }\n\n.cform_contlow {\n  margin-top: 47px;\n  margin-top: 4.7rem;\n  text-align: left; }\n\n/* login 페이지 컨텐츠 영역 */\n.cform_wrap.login-type .cform_box_tb {\n  display: flex; }\n\n.cform_wrap.login-type .cform_box_td {\n  display: flex;\n  width: 1200px;\n  margin: 0 auto;\n  padding: 0;\n  align-self: center; }\n  .cform_wrap.login-type .cform_box_td .cform_box {\n    margin: 0; }\n\n.cform_wrap.password .cform_box_td {\n  max-width: 1220px;\n  max-width: 122rem;\n  width: auto;\n  background: none; }\n\n.cform_wrap.password .cform_box {\n  max-width: 600px;\n  max-width: 60rem;\n  width: auto;\n  padding: 24px 48px 50px;\n  padding: 2.4rem 4.8rem 5rem;\n  margin: 0 24px;\n  margin: 0 2.4rem;\n  box-shadow: none;\n  border: none;\n  border-radius: 0; }\n  .cform_wrap.password .cform_box .tit-area {\n    padding: 0 64px 30px;\n    padding: 0 6.4rem 3rem;\n    border-bottom: 1px solid #b1b1b1; }\n  .cform_wrap.password .cform_box .content-area {\n    margin-top: 47px;\n    margin-top: 4.7rem; }\n    .cform_wrap.password .cform_box .content-area .tit {\n      font-size: 24px;\n      font-size: 2.4rem;\n      color: #2d2d2d; }\n    .cform_wrap.password .cform_box .content-area .column-group {\n      margin-top: 48px;\n      margin-top: 4.8rem;\n      padding: 0 98px;\n      padding: 0 9.8rem; }\n      .cform_wrap.password .cform_box .content-area .column-group li {\n        display: table;\n        width: 100%; }\n        .cform_wrap.password .cform_box .content-area .column-group li:not(:first-child) {\n          margin-top: 20px;\n          margin-top: 2rem; }\n      .cform_wrap.password .cform_box .content-area .column-group span {\n        display: table-cell;\n        text-align: left;\n        font-size: 18px;\n        font-size: 1.8rem;\n        color: #565656; }\n      .cform_wrap.password .cform_box .content-area .column-group .type01 {\n        width: 35%; }\n      .cform_wrap.password .cform_box .content-area .column-group .type02 {\n        width: 65%;\n        padding-left: 50px;\n        padding-left: 5rem;\n        color: #0181c9; }\n  .cform_wrap.password .cform_box .point-txt {\n    margin-top: 50px;\n    margin-top: 5rem; }\n    .cform_wrap.password .cform_box .point-txt .txt {\n      font-size: 14px;\n      font-size: 1.4rem;\n      color: #283356; }\n  .cform_wrap.password .cform_box .btn-group .txt {\n    font-size: 18px;\n    font-size: 1.8rem; }\n","@charset \"utf-8\";\n\n@import 'dev/_src/_scss/_setting';\n\n/*! pc & tablet 버전 - css */\n@media (min-width:1024px){\n}\n\n/*! mobile 버전 - css */\n@media (max-width:1023px){} \n\n/* [loading] layout.css이나 reset.css 둘중 아무 파일 하단에 추가  */\n\n\n/* Safari */\n\n/* // [loading] layout.css이나 reset.css 둘중 아무 파일 하단에 추가  */\n\n.page_wrap{min-width:1280px;background:#f2f2f2;}\n.page_wrap.page_layout{}\n.page_wrap.page_layout:after{display:block;content:'';clear:both;}\n.front_body{background:#f2f2f2;}\n.page_leftzone{@include rem(width, 250px);position:relative;overflow:hidden;position:absolute;top:0;left:0;background:#511bb4;height:100%;}\n.page_leftzone:before{display:block;content:'';@include rem(width, 250px);background:#511bb4;height:100%;position:fixed;top:0;left:0;}\n\n.page_leftzone > *{position:relative;z-index:5;}\n.plz_layer{position:relative;z-index:5;@include rem(height, 60px);display:flex;align-items: center;justify-content: center;background:#5d2bb9;}\n.plz_tit{@include rem(font-size, 21px);color:#fff;font-family: 'NanumSquare';font-weight:700;line-height:1;}\n.plz_cont_w{position:relative;z-index:5;}\n.plz_cont_in{}\n.plm_list{@include rem(width, 250px);}\n.plm_list > li{\n  position:relative;\n  .plm_in{\n    position: relative;\n    @include rem(font-size, 14px);\n    color:#94a5bb;\n    line-height:1.3;\n    &::before{\n      content: \"\";\n      position: absolute;\n      @include rem(top, -4px);\n      @include rem(left, -30px);\n      @include rem(width, 24px);\n      @include rem(height, 25px);\n    }\n  }\n  &:nth-child(1){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_situation.png);}\n  }\n  &:nth-child(2){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_status.png);}\n  }\n  &:nth-child(3){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_chart.png);}\n  }\n  &:nth-child(4){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_research.png);}\n  }\n  &:nth-child(5){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_notice.png);}\n  }\n  &:nth-child(6){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_confirmed.png);}\n  }\n  &:nth-child(7){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_inspection.png);}\n  }\n  &:nth-child(8){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_data.png);}\n  }\n  &:nth-child(9){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_kakao.png);}\n  }\n  &:nth-child(10){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_set.png);}\n  }\n  &:nth-child(11){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_user.png);}\n  }\n}\n.plm_list > li:last-of-type{}\n.plm_list > li.active .pltm_list li{background: #0f1c49;}\n.plm_list > li.active{\n  .plm_in{color: #fff;}\n  &:nth-child(1){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_situation_on.png);}\n  }\n  &:nth-child(2){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_status_on.png);}\n  }\n  &:nth-child(3){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_chart_on.png);}\n  }\n  &:nth-child(4){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_research_on.png);}\n  }\n  &:nth-child(5){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_notice_on.png);}\n  }\n  &:nth-child(6){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_confirmed_on.png);}\n  }\n  &:nth-child(7){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_inspection_on.png);}\n  }\n  &:nth-child(8){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_data_on.png);}\n  }\n  &:nth-child(9){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_kakao_on.png);}\n  }\n  &:nth-child(10){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_set_on.png);}\n  }\n  &:nth-child(11){\n    .plm_in::before{@include rem(width, 24px);@include rem(height, 24px);background: url(../images/menu/ico_user_on.png);}\n  }\n}\n.plm_list > li.active .plm.on:after{transform:rotate(45deg);}\n.plm_list > li.active .plm_ico:before{opacity:1;border-color:#13d5aa}\n.touchmode .plm_list > li.active .plm_ico:before{background-image:url(\"../images/admin/ico_lm_ratio_active.png\");}\n.plm{display:block;position:relative;@include rem(padding, 13px 45px 13px 58px);overflow:hidden;}\n.plm.on:after{\n    display:block;content:'';@include rem(width, 8px);@include rem(height, 8px);opacity:.55;position:absolute;@include rem(top, 15px);@include rem(right,25px);border-right:1px solid rgba(255,255,255,.55);border-bottom:1px solid rgba(255,255,255,.55);\n    transform: translateZ(0);transform:rotate(-45deg);transition: all ease .3s;\n}\n.pltm_list_w{display:none;}\n.pltm_list > li{position:relative;@include rem(padding, 13px 45px 13px 50px);}\n.pltm_list > li.active .pltm{color:#13d5aa;}\n.pltm_list > li:last-of-type{margin-bottom:0;}\n.pltm{display:inline-block;@include rem(font-size,12px);color:#fff;}\n.page_rightzone{@include rem(margin-left,250px);}\n.page_rightzone > *{position:relative;z-index:5;}\n.prz_maplow{position:relative;z-index:10;box-sizing:border-box;background:#fff;@include rem(padding, 0 40px 0 30px);border-bottom:1px solid #dcdcdc;}\n.prz_maptb_w{@include rem(height,60px);display:flex;align-items: center;justify-content: left;}\n.prz_maptb{display:table;width:100%;@include rem(height,60px);}\n.prz_maptd{display:table-cell;vertical-align: middle;}\n.prz_maptd:after{display:block;content:'';clear:both;}\n.pgright_wrap .inner{@include rem(max-width,1612px);@include rem(margin,106px auto 0);@include rem(padding,0 24px);}\n.pgright_wrap .inner .tit{color: #1d2747;@include rem(font-size,24px);font-weight: bold;}\n.pmap_list{display:table;}\n.pmap_list > li{display:table-cell;vertical-align: middle;@include rem(padding-right,26px);position:relative;}\n.pmap_list > li:after{\n    display:block;content:'';@include rem(width,6px);@include rem(height,6px);position:absolute;@include rem(top,3px);@include rem(right,12px);border-right:1px solid #a4a4a4;border-bottom:1px solid #a4a4a4;\n    transform: translateZ(0);-webkit-transform: translateZ(0);-ms-transform: translateZ(0);-moz-transform: translateZ(0);\n\t-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);\n}\n.pmap_list > li.has_phome{@include rem(padding, 0 7px 0 0);}\n.pmap_list > li.has_phome:after{display:none;}\n.pmap_list > li:last-of-type{padding-right:0;}\n.pmap_list > li:last-of-type:after{display:none;}\n\n.pgleft_wrap{position:fixed;top:60px;left:0;width:250px;height:calc(100% - 60px); background:#283356;z-index:50;transition:.4s;overflow:hidden;overflow-y:auto;}\n.pgright_wrap{margin:60px 0 0 250px;transition:.4s;background: #f5f5f7;}\n\n.page_wrap.fold{}\n.page_wrap.fold .plm{padding:0;@include rem(height,60px);}\n.page_wrap.fold .pgright_wrap{@include rem(margin-left,60px);}\n.page_wrap.fold .pgh_title,\n.page_wrap.fold .plm_in,\n.page_wrap.fold .plm:after,\n.page_wrap.fold .pltm_list_w{display:none !important;}\n.page_wrap.fold .pgleft_wrap{@include rem(width,60px);}\n.page_wrap.fold .pgh_title{opacity:0;}\n.page_wrap.fold .pghleft_w{@include rem(width,60px);padding-right:0;}\n\n\n/* */\n.cform_body{width:100%;height:100%;background:#f2f2f2;}\n.cform_wrap{width:100%;height:100%;overflow:hidden;overflow-y:auto;background:#f5f6f7;position:fixed;top:0;left:0;}\n.cform_box_tb{display:table;width:100%;height:100%;table-layout: fixed;}\n.cform_box_td{\n  display:table-cell;\n  vertical-align: middle;\n  @include rem(padding,40px);\n  background: url(../images/login/img-visual-login.png) right center no-repeat;\n}\n.cform_box_w{padding:40px;}\n.cform_box{background:#fff;border:1px solid #e2e2e2;border-radius:10px;@include rem(width,584px);text-align:center;@include rem(padding,32px);box-sizing:border-box;margin:0 auto;  box-shadow: 0 0 22.3px 1.7px rgba(1, 71, 126, 0.19);}\n.cform_titlow{text-align: left;}\n.cform_titlow .cform_tit{}\n.cform_titlow .cform_tit_in{@include rem(font-size,32px);color:#2883c5;font-family: 'NanumSquare';font-weight:500;}\n.cform_titlow .sub-title{@include rem(margin-top,15px);@include rem(font-size, 18px);color: #5e5e5e;line-height: 1.5;}\n.cform_tit.has_ico02:after{background-image:url(\"../images/admin/ico_logpw.png\");@include rem(width,70px);@include rem(height,70px);}\n.cform_contlow{@include rem(margin-top,47px);text-align:left;}\n\n/* login 페이지 컨텐츠 영역 */\n.cform_wrap{\n  &.login-type{\n    .cform_box_tb{\n      display: flex;\n    }\n    .cform_box_td{\n      display: flex;\n      width: 1200px;\n      margin: 0 auto;\n      padding: 0;\n      align-self: center;\n      .cform_box{margin: 0;}\n    }\n  }\n  &.password{\n    .cform_box_td{\n      @include rem(max-width,1220px);\n      width: auto;\n      background: none;\n    }\n    .cform_box{\n      @include rem(max-width,600px);\n      width: auto;\n      @include rem(padding, 24px 48px 50px);\n      @include rem(margin,0 24px);\n      box-shadow: none;\n      border: none;\n      border-radius: 0;\n      .tit-area{@include rem(padding,0 64px 30px);border-bottom: 1px solid #b1b1b1;}\n      .content-area{\n        @include rem(margin-top,47px);\n        .tit{@include rem(font-size,24px);color: #2d2d2d;}\n        .column-group{\n          @include rem(margin-top,48px);\n          @include rem(padding, 0 98px);\n          li{\n            display: table;width: 100%;\n            &:not(:first-child){@include rem(margin-top,20px);}\n          }\n          span{display: table-cell;text-align: left;@include rem(font-size,18px);color: #565656;}\n          .type01{width: 35%;}\n          .type02{width: 65%;@include rem(padding-left,50px);color: #0181c9;}\n        }\n      }\n      .point-txt{\n        @include rem(margin-top, 50px);\n        .txt{@include rem(font-size,14px);color: #283356;}\n      }\n      .btn-group{\n        .txt{@include rem(font-size,18px);}\n      }\n    }\n  }\n}\n\n// @media (max-width:1250px){\n//   .cform_wrap{\n//     .cform_box_td{\n\n//     }\n//   }\n// }","//$path_00: '/';\n//$path_01: '../';\n//$path_02: '../../';\n//$path_03: '../../../';\n//$path_04: '../../../../';\n//$path_05: '../../../../../';\n//$path_css: 'css/';\n//$path_js: 'js/';\n//$path_font: 'font/';\n//$path_images: 'images/';\n//$path_common: 'common/';\n//$path_html: 'html/';\n//$path_main: 'main/';\n//- 기본 경로 변수 세팅\n\n// ie10 ~ ie11 에만 적용되는 css 를 만들때 사용하는 미디어쿼리 소스\n//@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n//    // IE10+ CSS here\n//    .selectbox{\n//        // 텍스트 수직 중앙정렬을 위해서 ie10 ~ 11 속성 재정의\n//        select{\n//            padding:12px 0 10px 15px;\n//            height:auto;\n//        }\n//    }\n//}\n\n//- 변수 경로 사용하는 방법\n// background:url('#{$currentUrl}images/common/ko_bg_test01.jpg')\n\n\n// ******************** code comments ********************\n// 기본 변수 세팅\n// $global-background-color: #ffffff; - 기본 배경 컬러 설정\n// $global-font-color: #000000; - 기본 폰트 컬러 설정\n// $global-font-size: 10px !default; - 기본 폰트 크기 설정\n// ******************** code comments ********************\n$global-background-color: #ffffff;\n$global-font-color: #000000;\n$global-font-size: 10px !default;\n\n\n// ******************** code comments ********************\n// 언어별 설정 <html lang=\"\">\n// font-familu, line-height, word-break, word-wrap, letter-spacing\n// ******************** code comments ********************\n$global-font-family: (\n    'ko': ('Malgun Gothic', '맑은 고딕', Dotum, '돋움', arial, verdana, sans-serif),\n    'en': (Helvetica, Arial, sans-serif),\n    'ja': ('Meiryo', 'メイリオ', 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', sans-serif),\n    'zh': (Helvetica, Arial, 'Microsoft Yahei','微软雅黑', STXihei, '华文细黑', sans-serif)\n);\n$global-line-height: (\n    'ko': (1.15),\n    'en': (1.15),\n    'ja': (1.15),\n    'zh': (1.15)\n);\n$global-word-break: (\n    'ko': (keep-all),\n    'en': (break-all),\n    'ja': (break-all),\n    'zh': (break-all)\n);\n$global-word-wrap: (\n    'ko': (break-word),\n    'en': (break-word),\n    'ja': (break-word),\n    'zh': (break-word)\n);\n$global-letter-spacing: (\n    'ko': (0),\n    'en': (0),\n    'ja': (0),\n    'zh': (0)\n);\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// 폰트 굵기 참고용\n// Thin 100\n// Light 300\n// Regular 400\n// Medium 500\n// Bold 700\n// Black 900\n// 프로젝트내에서 사용되는 폰트 굵기를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// font size / line-height 참고\n// 24 / 36 - 1.5\n// 26 / 38 - 1.46\n// 28 / 40 - 1.42\n// 30 / 42 - 1.4\n// 32 / 44 - 1.375\n// 34 / 46 - 1.35\n// 42 / 54 - 1.28\n// 48 / 64 - 1.33\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// flex 사용 참고용\n// flex: 1 1 1; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본 값은 없음\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */\n// flex: 1 1 auto; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본값은 자동\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: auto; */\n// flex: 1 1 500px; - 500보다 늘어날 수 있고 500이하로 줄어 들 수 있음, 기본값은 500\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 500px; */\n\n// /* flex-grow: 0; */ /* 기본값 - flex-basis 이상으로 안 늘어남 */\n// /* flex-grow: 1; */ /* flex-basis 보다 늘어남 */\n// flex-shrink: 1; /* 기본값 - flex-basis 크기 보다 줄어듬 */\n// flex-shrink: 0; /* flex-basis 크기를 최소값으로 고정함 */\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// z-index 세팅 및 관리\n// 기본 z-index를 기준으로 +, - 하여 관리 한다\n// 변수명은 되도록 직관적으로 네이밍 한다\n// 프로젝트에서 사용되는 모든 z-index 값은 아래 정리 되어야 한다\n// 단, z-index:1, z-index:2 등의 10이하 단위들은 컨텐츠내 css 에서 관리한다\n// ******************** code comments ********************\n$base-z-index: 100; // 기본 z-index\n$mobile-mode-dimm-container: $base-z-index + 900; // 반응형 미지원 페이지 안내 컨텐츠 컨테이너 z-index 1000\n$popup-zindex: $base-z-index; // 팝업 z-index 100\n$global-dimm-zindex: $base-z-index - 10; // 딤드 영역 z-index 90\n\n\n// ******************** code comments ********************\n// 컬러값 변수 설정\n// 폰트컬러(color), 배경컬러(background-color), 라인컬러(border)으로 구분한다\n// 변수 네이밍에 컬러 코드 값을 사용하여 작성한다\n// 프로젝트 초반에 컬러값이 정리가 되지 않을 경우, 변수를 먼저 세팅하고 나중에 디자인팀에 현재 설정된 변수 컬러값을 전달하여 불필요한 컬러값들을 정리 하도록 한다\n// ******************** code comments ********************\n$font-333333: #333333;\n$bg-333333: #333333;\n$line-333333: #333333;\n\n\n// ******************** code comments ********************\n// box shadow 샘플\n// box-shadow: 8px 8px 8px 0 rgba(0,0,0,0.05);\n// PSD - box-shadow: 거리 거리 크기 스프레드 rgba(컬러,컬러,컬러,불투명도)\n// 박스 inset - 보더대신 서야 할 때\n// box-shadow: inset -1px 1px 0px 0px rgba(221,221,221,1);\n// 프로젝트내에서 사용하는 box shadow 를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// 공통 소스 인클루드 영역\n// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n//@import 'dev/_src/_scss/mixin';\n\n\n// ******************** code comments ********************\n// disabled 속성\n// ******************** code comments ********************\n@mixin ui-disabled(){\n    // disabled 속성 (모던 브라우저)\n    &.disabled{\n        opacity: 0.5;\n        pointer-events: none;\n        position: relative;\n        z-index: -1;\n        // disabled 속성 ie10 대응\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n            /* IE10+ CSS styles go here */\n            &:after{\n                content:'';\n                position: absolute;\n                width:100%;\n                height:100%;\n                top:0;left:0;\n                background:#ffffff;\n                opacity: 0;\n                z-index: 1;\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// 텍스트 말줄임\n// ******************** code comments ********************\n@mixin ellipsis($line: 1) { // 인자 값의 기본 값은 1\n    @if ($line == 1) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    } @else {\n        display: -webkit-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: $line;\n    }\n}\n\n\n// ******************** code comments ********************\n// 언어별 폰트 설정\n// /* 사용 예제 Languages */\n// @include languages();\n// ******************** code comments ********************\n@mixin languages() {\n    @each $type, $font-family in $global-font-family {\n        &:lang(#{$type}) {\n            font-family:$font-family;\n        }\n    }\n    @each $type, $line-height in $global-line-height {\n        &:lang(#{$type}) {\n            line-height:$line-height;\n        }\n    }\n    @each $type, $word-break in $global-word-break {\n        &:lang(#{$type}) {\n            word-break:$word-break;\n        }\n    }\n    @each $type, $word-wrap in $global-word-wrap {\n        &:lang(#{$type}) {\n            word-wrap:$word-wrap;\n        }\n    }\n    @each $type, $letter-spacing in $global-letter-spacing {\n        &:lang(#{$type}) {\n            letter-spacing:$letter-spacing;\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Computes a CSS calc function that betweens a value from\n// * A to B over viewport-width A to viewport-width B.\n// * Requires a media query to cap the value at B.\n// * vw 단위를 활용하여 미디어쿼리 분기의 중간 상태값을\n// * 계산해주는 SASS 함수.\n// * 간격이나 폰트사이즈에 적용하면 자연스러운\n// * 반응형 사이즈 처리가 가능 함.\n// * 참고사이트 http://dohoons.com/blog/1364\n// */\n// 소스 사용예제\n// @media (min-width: $small) {\n// \tpadding: between(16px, 32px, $small, $medium);\n// }\n// @media (min-width: $medium) {\n// \tpadding: between(32px, 90px, $medium, $large);\n// }\n// @media (min-width: $large) {\n// \tpadding: 90px;\n// }\n// ******************** code comments ********************\n$small: 400px;\n$large: 1000px;\n@function between($to, $from, $toWidth, $fromWidth) {\n    $slope: ($to - $from) / ($toWidth - $fromWidth);\n    $base: $from - $slope * $fromWidth;\n\n    @return calc(#{$base} + #{100vw * $slope});\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Read the article: http://sassbreak.com/viewport-relative-headings-with-sass\n// * px 를 vw 로 자동으로 바꿔 줌.\n// * max-breakpoint 를 설정하면 미디어쿼리 브레이크 포인트가 됨.\n// * 그래서 미디어쿼리 브레이크 포인트에 맞춰 px 가 vw 로 변환됨.\n// * 100% 보다 더 크게 적용 하고 싶으면 return 부분을 수정하면됨.\n// * 참고사이트 http://sassbreak.com/viewport-relative-headings-with-sass/\n// */\n// 예) width: get-vw(21px);\n// ******************** code comments ********************\n// Max breakpoint\n$max-breakpoint-main: 1400;\n$max-breakpoint-main-height: 720;\n\n// This could be one of your media query breakpoint variables\n$wide-screen: \"(min-width: #{$max-breakpoint-main}px)\";\n\n// Function\n@function get-vw($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vw; // 100=1, 140=1.4\n}\n\n@function get-vh($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main-height * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vh;\n}\n\n\n// 입력 받은 값의 숫자만 남겨놓고 단위 지우기\n// Remove the unit of a length\n// @param {Number} $number - Number to remove unit from\n// @return {Number} - Unitless number\n@function strip-unit($number) {\n    @if type-of($number) == 'number' and not unitless($number) {\n        @return $number / ($number * 0 + 1);\n    }\n\n    @return $number;\n}\n\n\n// ******************** code comments ********************\n// px를 rem 변환 (2021.03.22 버전) - 기존버전 보다 다양하게 활용할 수 있음 아래 url 참고 바람.\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n//\n// sass 기본 사용법\n// @include rem(font-size, 24px); // Simple\n// @include rem(padding, 5px 10px); // Multiple values\n// @include rem(border-bottom, 1px solid black); // Multiple mixed values\n// @include rem(box-shadow, 0 0 2px #ccc, inset 0 0 5px #eee); // Comma-separated values\n// // Multiple properties\n// @include rem((\n//     margin: 10px 5px,\n//     text-shadow: (1px 1px #eee, -1px -1px #eee) // Parentheses needed because of comma\n// ));\n//\n// css 출력\n// font-size: 24px;\n// font-size: 1.5rem;\n// padding: 5px 10px;\n// padding: 0.3125rem 0.625rem;\n// border-bottom: 1px solid black;\n// border-bottom: 0.0625rem solid black;\n// box-shadow: 0 0 2px #ccc, inset 0 0 5px #eee;\n// box-shadow: 0 0 0.125rem #ccc, inset 0 0 0.3125rem #eee;\n// margin: 10px 5px;\n// margin: 0.625rem 0.3125rem;\n// text-shadow: 1px 1px #eee, -1px -1px #eee;\n// text-shadow: 0.0625rem 0.0625rem #eee, -0.0625rem -0.0625rem #eee;\n//\n// rem line-height 사용법\n// 예) @include rem(font-size, 23px, 33);\n// 가이드) @include rem(font-size, 23px, psd line-height)\n//\n// libsass (v3.5.0.beta.2)\n// https://github.com/pierreburel/sass-rem\n// ******************** code comments ********************\n\n$rem-baseline: $global-font-size !default;\n$rem-fallback: true !default;\n// 하위브라우저 호환 맞춰야 할때 - false: rem만 출력, true: px,rem 둘다 출력\n$rem-px-only: false !default;\n// rem 변환이 필요 없을 때 - false: rem 변환 사용(기본), true: rem 변환 사용 안함(px출력)\n\n@function rem-separator($list, $separator: false) {\n    @if $separator == \"comma\" or $separator == \"space\" {\n        @return append($list, null, $separator);\n    }\n\n    @if function-exists(\"list-separator\") == true {\n        @return list-separator($list);\n    }\n\n    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n    $test-list: ();\n    @each $item in $list {\n        $test-list: append($test-list, $item, space);\n    }\n\n    @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n    font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n    $result: ();\n    $separator: rem-separator($values);\n\n    @each $value in $values {\n        @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\n        } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n            $result: append($result, $value / $rem-baseline + 0rem, $separator);\n        } @else if type-of($value) == \"list\" {\n            $value-separator: rem-separator($value);\n            $value: rem-convert($to, $value...);\n            $value: rem-separator($value, $value-separator);\n            $result: append($result, $value, $separator);\n        } @else {\n            $result: append($result, $value, $separator);\n        }\n    }\n\n    @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n    @if $rem-px-only {\n        @return rem-convert(px, $values...);\n    } @else {\n        @return rem-convert(rem, $values...);\n    }\n}\n\n@mixin rem($properties, $values...) {\n    @if type-of($properties) == \"map\" {\n        @each $property in map-keys($properties) {\n            @include rem($property, map-get($properties, $property));\n        }\n    } @else {\n        @each $property in $properties {\n            @if $rem-fallback or $rem-px-only {\n                #{$property}: rem-convert(px, $values...);\n            }\n            @if not $rem-px-only {\n                #{$property}: rem-convert(rem, $values...);\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// rem 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include rem-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// rem 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3rem);\n// 사용 예제)\n// @include rem-calc(width, 100%, '+', 2px);\n// @include rem-calc(width, 80%, '-', 1px);\n// @include rem-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin rem-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num} #{$sign} #{$calc-px});\n    $calc-rem: rem($calc-px);\n    #{$property}: calc(#{$num} #{$sign} #{$calc-rem});\n}\n\n\n// ******************** code comments ********************\n// px를 em 변환\n//\n// em 기본 사용법\n// @include em(height,51px);\n// @include em(padding, 0 15px);\n// font-size + line-height 사용법\n//\n// em line-height 사용법\n// 예) @include em(font-size, 23px, 33);\n// 가이드) @include em(font-size, 23px, psd line-height)\n//\n// em border 사용법\n// 예) @include em(border, 2px, solid blue);\n// 예) @include em(border-left, 20px, solid blue);\n//\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n// ******************** code comments ********************\n$baseFont : $global-font-size;\n@mixin em($target, $values, $line-height:0, $border-info...) {\n    $mixin-base-font-size: $baseFont ;\n    $px-values: ();\n    $em-values: ();\n\n    @each $value in $values {\n        @if $value == 0 or $value == 0px {\n            $px-values: join($px-values, 0);\n            $em-values: join($em-values, 0);\n        } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n            $new-em-value: $value / $mixin-base-font-size;\n            $px-values: join($px-values, round($value));\n            $em-values: join($em-values, #{$new-em-value}em);\n        } @else {\n            $px-values: join($px-values, round($value * $mixin-base-font-size));\n            $em-values: join($em-values, #{$value}em);\n        }\n    }\n    @if $target == 'font-size' {\n        @if $line-height == 0 {\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n        } @else{\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n            line-height: $line-height / strip-unit($values);\n        }\n    } @else if $target == 'border' & 'border-left' & 'border-right' & 'border-top' & 'border-bottom' {\n        #{$target}: $px-values $line-height $border-info;\n        #{$target}: $em-values $line-height $border-info;\n    } @else {\n        #{$target}: $px-values;\n        #{$target}: $em-values;\n    }\n}\n\n\n// ******************** code comments ********************\n// em 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include em-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// em 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3em);\n// 사용 예제)\n// @include em-calc(width, 100%, '+', 2px);\n// @include em-calc(width, 80%, '-', 1px);\n// @include em-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin em-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-px});\n    $calc-em: em($calc-px);\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-em});\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-position 값 설정\n// ******************** code comments ********************\n@mixin sprite-position-px($sprite) {\n    $sprite-offset-x: nth($sprite, 3);\n    $sprite-offset-y: nth($sprite, 4);\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-rem($sprite) {\n    $sprite-offset-x: rem(nth($sprite, 3));\n    $sprite-offset-y: rem(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-em($sprite) {\n    $sprite-offset-x: em(nth($sprite, 3));\n    $sprite-offset-y: em(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-vw($sprite) {\n    $sprite-offset-x: get-vw(nth($sprite, 3));\n    $sprite-offset-y: get-vw(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-size 값 설정\n// ******************** code comments ********************\n@mixin sprite-background-size-px($sprite) {\n    $sprite-size-width: nth($sprite, 7);\n    $sprite-size-height: nth($sprite, 8);\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-rem($sprite) {\n    $sprite-size-width: rem(nth($sprite, 7));\n    $sprite-size-height: rem(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-em($sprite) {\n    $sprite-size-width: em(nth($sprite, 7));\n    $sprite-size-height: em(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-vw($sprite) {\n    $sprite-size-width: get-vw(nth($sprite, 7));\n    $sprite-size-height: get-vw(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 width 값 설정\n// ******************** code comments ********************\n@mixin sprite-width-px($sprite) {\n    width: nth($sprite, 5);\n}\n@mixin sprite-width-rem($sprite) {\n    width: rem(nth($sprite, 5));\n}\n@mixin sprite-width-em($sprite) {\n    width: em(nth($sprite, 5));\n}\n@mixin sprite-width-vw($sprite) {\n    width: get-vw(nth($sprite, 5));\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 height 값 설정\n// ******************** code comments ********************\n@mixin sprite-height-px($sprite) {\n    height: nth($sprite, 6);\n}\n@mixin sprite-height-rem($sprite) {\n    height: rem(nth($sprite, 6));\n}\n@mixin sprite-height-em($sprite) {\n    height: em(nth($sprite, 6));\n}\n@mixin sprite-height-vw($sprite) {\n    height: get-vw(nth($sprite, 6));\n}\n\n\n// ******************** code comments ********************\n// pc px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 pc 버전\n// @include sprite-custom(rem, $pc-logo-pc-ko);\n// @include sprite-custom(em, $pc-logo-pc-ko);\n// @include sprite-custom(px, $pc-logo-pc-ko);\n// @include sprite-custom(vw, $pc-logo-pc-ko);\n// ******************** code comments ********************\n@mixin sprite-custom($unit, $sprite) {\n    @include sprite-image($sprite);\n\n    @if $unit == px{\n        @include sprite-position-px($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-background-size-px($sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($sprite);\n        @include sprite-position-rem($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-rem($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-rem($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-rem($sprite);\n    } @else if $unit == em {\n        @include sprite-position-px($sprite);\n        @include sprite-position-em($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-em($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-em($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-em($sprite);\n    } @else if $unit == vw {\n        @include sprite-position-vw($sprite);\n        @include sprite-width-vw($sprite);\n        @include sprite-height-vw($sprite);\n        @include sprite-background-size-vw($sprite);\n    }\n}\n\n\n// ******************** code comments ********************\n// mobile px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 mobile 버전\n// @include retina-sprite-custom(rem, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(em, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(px, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(vw, $mobile-logo-pc-ko-group);\n// ******************** code comments ********************\n@mixin retina-sprite-custom($unit, $retina-group) {\n    $normal-sprite: nth($retina-group, 2);\n    $retina-sprite: nth($retina-group, 3);\n    @include sprite-image($retina-sprite);\n    background-repeat: no-repeat;\n\n    @if $unit == px{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-rem($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-rem($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-rem($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-rem($normal-sprite);\n    } @else if $unit == em{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-em($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-em($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-em($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-em($normal-sprite);\n    } @else if $unit == vw{\n        @include sprite-position-vw($normal-sprite);\n        @include sprite-width-vw($normal-sprite);\n        @include sprite-height-vw($normal-sprite);\n        @include sprite-background-size-vw($normal-sprite);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// $title\n// ____________________________________________________________________________\n//\n//    SCSS Unit Conversion v.2.1.2\n//\n//\n//    Links:\n//    GitHub   https://github.com/jakob-e/unitconversion\n//    Codepen  https://codepen.io/jakob-e/pen/AHunv\n// ____________________________________________________________________________\n//\n//   Function               Input units\n//\n//   Absolute length\n//   px(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pt(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pc(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   in(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   mm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   cm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//\n//   Relative length\n//   em(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   rem(input);            px, pt, pc, in, mm, cm, em, rem, number\n//   ex(input);             ex, number\n//   ch(input);             ch, number\n//   vw(input);             vw, number\n//   vh(input);             vh, number\n//   vmin(input);           vmin, number\n//   vmax(input);           vmax, number\n//\n//   Angle\n//   deg(input);            deg, rad, grad, turn, number\n//   rad(input);            deg, rad, grad, turn, number\n//   grad(input);           deg, rad, grad, turn, number\n//   turn(input);           deg, rad, grad, turn, number\n//\n//   Resolution\n//   dpi(input);            dpi, dpcm, dppx, number\n//   dpcm(input);           dpi, dpcm, dppx, number\n//   dppx(input);           dpi, dpcm, dppx, number\n//\n//   Time\n//   s(input);              s, ms, number\n//   ms(input);             s, ms, number\n//\n//   Frequency\n//   hz(input);             hz, khz, number\n//   khz(input);            hz, khz, number\n//\n//   String\n//   str(input);            anything not null\n//\n//   Number, int and uint\n//   num(input);            px, pt, pc, in, mm, cm, em, rem, ex, ch,\n//                          vw, vh, vmin, vmax, deg, rad, grad, turn,\n//                          dpi, dpcm, dppx, s, ms, hz, khz, number\n//   int(input);            as number\n//   uint(input);           as number\n//\n//   ratio                  number to fraction\n//\n//   Aliases\n//   string(input);\n//   number(input);\n//\n// ____________________________________________________________________________\n\n// Base font size in pixel for converting em and rem to absolute lengths.\n$unit-base-font-size: $global-font-size;\n\n\n// Absolute lengths\n@function px($input){ @return to-unit(px, $input); }\n@function pt($input){ @return to-unit(pt, $input); }\n@function pc($input){ @return to-unit(pc, $input); }\n@function in($input){ @return to-unit(in, $input); }\n@function mm($input){ @return to-unit(mm, $input); }\n@function cm($input){ @return to-unit(cm, $input); }\n\n// Angles\n@function deg($input){ @return to-unit(deg, $input); }\n@function rad($input){ @return to-unit(rad, $input); }\n@function grad($input){ @return to-unit(grad, $input); }\n@function turn($input){ @return to-unit(turn, $input); }\n\n// Resolution\n@function dpi($input){ @return to-unit(dpi, $input); }\n@function dpcm($input){ @return to-unit(dpcm, $input); }\n@function dppx($input){ @return to-unit(dppx, $input); }\n\n// Time\n@function ms($input){ @return to-unit(ms, $input); }\n@function s($input){ @return to-unit(s, $input); }\n\n// Frequencies\n@function hz($input){ @return to-unit(hz, $input);}\n@function khz($input){ @return to-unit(khz, $input); }\n\n// Relative lengths\n@function em($input...){\n    $em: to-unit(em, nth($input,1));\n    // Adjust for compounds (visual size)\n    @if length($input) > 1 {\n        @for $i from 2 through length($input){\n            $em: $em / num(em(nth($input,$i)));\n        }\n    }\n    @return $em;\n}\n@function rem($input){ @return to-unit(rem, num(em($input))); }\n\n// Inconvertible relative lengths – depends on font\n@function ex($input){ @return to-unit(ex, $input); }\n@function ch($input){ @return to-unit(ch, $input); }\n\n// Viewport\n@function vw($input){ @return to-unit(vw, $input); }\n@function vh($input){ @return to-unit(vh, $input); }\n@function vmin($input){ @return to-unit(vmin, $input); }\n@function vmax($input){ @return to-unit(vmax, $input); }\n\n// Strings and numbers\n@function str($input){ @return #{$input};  }\n@function num($input){\n    @if type-of($input) != number {\n        @error 'Could not convert `#{$input}` - must be `type-of number`';\n        @return null;\n    }\n    @return $input/($input*0+1);\n}\n@function int($input){\n    $num: num($input);\n    @return if($num<0, ceil($num), floor($num));\n}\n@function uint($input){ @return abs(int($input)); }\n\n// Aliases\n@function string($input){ @return str($input);}\n@function number($input){ @return num($input);}\n\n\n// Conversion function\n@function to-unit($unit, $input){\n    // Test against valid CSS units\n    $to-unit: map-get((\n            px: 0px, pt: 0pt, pc: 0pc, in: 0in, mm: 0mm, cm: 0cm, // absolute length\n            em: 0em, rem: 0rem, ch: 0ch, ex: 0ex,                 // relative length - font based\n            vw: 0vw, vh: 0vh, vmin: 0vmin, vmax: 0vmax,           // relative length - viewport based\n            deg: 0deg, turn: 0turn, grad: 0grad, rad: 0rad,       // angle\n            s: 0s, ms: 0ms,                                       // time\n            hz: 0Hz, khz: 0kHz,                                   // frequency\n            dpi: 0dpi, dpcm: 0dpcm, dppx: 0dppx,                  // resolution\n            pct: 0%, percent: 0%, num: 0, number: 0               // percent or number\n    ), $unit);\n\n    // Error handling – wrong $unit\n    // Incomparable units are caught in convertion\n    @if not $to-unit {\n        @error 'Could not convert to `#{$unit}` – must be a valid CSS unit';\n        @return null;\n    }\n\n    // Number/incomparable conversion\n    @if index(num number ex ch vw vh vmin vmax, $unit) {\n        $value: num($input);\n    }\n\n    // EM/REM convertion using px as base\n    @if index(em rem, unit($input)) {\n        $input: 0px + num($input) * $unit-base-font-size/1px;\n    }\n    @if index(em rem, $unit) and not unitless($input) {\n        $input: 0px + $input;\n        $input: num($input) * 1px/$unit-base-font-size;\n    }\n\n    // Bug fix – resolution units seems to be flipped\n    @if index(dpi dpcm dppx, $unit){\n        $units: (dppx: 0dppx, dpcm: 0dpcm, dpi: 0dpi);\n        $input-unit: map-get($units, unit($input));\n        $input: if(1dppx < 95dpi,num($input-unit + (num($input) + $to-unit)),$input);\n    }\n\n    // Convert\n    @return $to-unit + $input;\n}\n\n//  Convert number to ratio (fraction)\n//  ratio(1.7777778) =>   16/9\n@function ratio($x, $y: null){\n    @if not $y {\n        $n: $x; $y: 1;\n        @while $y < 10 {\n            $x:  $n * 10 - ((10 - $y) * $n);\n            @if $x == round($x){ @return #{$x}/#{$y}; }\n            @else { $y: $y + 1; }\n        }\n        $x: round($n * 1000000); $y: 1000000;\n        @while $x % 10 == 0 { $x: $x/10; $y: $y/10; }\n        @while $x % 5 == 0 { $x: $x/5; $y: $y/5; }\n        @while $x % 2 == 0 { $x: $x/2; $y: $y/2; }\n        @return #{$x}/#{$y};\n    }\n    @else if $x == round($x) and $y == round($y){ @return #{$x}/#{$y}; }\n    @warn 'X and Y must be integers'; @return false;\n}\n\n\n\n@import 'dev/_src/_scss/_sprite/sprite_mobile';\n@import 'dev/_src/_scss/_sprite/sprite_pc';\n"]}