{"version":3,"sources":["css_partials/reset.css","css_partials/reset.scss","_src/_scss/_setting.scss"],"names":[],"mappings":"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","file":"../../dev/css_partials/reset.css","sourcesContent":["@charset \"UTF-8\";\n/*! reset */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  vertical-align: middle; }\n\nhtml {\n  text-size-adjust: 100%;\n  font-size: 10px;\n  font-weight: 400; }\n  html:lang(ko) {\n    font-family: \"Malgun Gothic\", \"맑은 고딕\", Dotum, \"돋움\", arial, verdana, sans-serif; }\n  html:lang(en) {\n    font-family: Helvetica, Arial, sans-serif; }\n  html:lang(ja) {\n    font-family: \"Meiryo\", \"メイリオ\", \"ヒラギノ角ゴ Pro W3\", \"Hiragino Kaku Gothic Pro\", sans-serif; }\n  html:lang(zh) {\n    font-family: Helvetica, Arial, \"Microsoft Yahei\", \"微软雅黑\", STXihei, \"华文细黑\", sans-serif; }\n  html:lang(ko) {\n    line-height: 1.15; }\n  html:lang(en) {\n    line-height: 1.15; }\n  html:lang(ja) {\n    line-height: 1.15; }\n  html:lang(zh) {\n    line-height: 1.15; }\n  html:lang(ko) {\n    word-break: keep-all; }\n  html:lang(en) {\n    word-break: break-all; }\n  html:lang(ja) {\n    word-break: break-all; }\n  html:lang(zh) {\n    word-break: break-all; }\n  html:lang(ko) {\n    word-wrap: break-word; }\n  html:lang(en) {\n    word-wrap: break-word; }\n  html:lang(ja) {\n    word-wrap: break-word; }\n  html:lang(zh) {\n    word-wrap: break-word; }\n  html:lang(ko) {\n    letter-spacing: 0; }\n  html:lang(en) {\n    letter-spacing: 0; }\n  html:lang(ja) {\n    letter-spacing: 0; }\n  html:lang(zh) {\n    letter-spacing: 0; }\n\nbody, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre,\ncode, form, fieldset, legend, input, textarea, p, blockquote, th, td,\narticle, aside, canvas, details, figcaption, figure, footer, header,\nhgroup, nav, section, time, mark, audio, video {\n  margin: 0;\n  padding: 0; }\n\nbody {\n  color: #000000;\n  background-color: #ffffff; }\n\nimg {\n  border: 0;\n  border-style: none; }\n\nbutton {\n  border: 0;\n  background: none;\n  padding: 0;\n  cursor: pointer; }\n\nbutton, input, select, optgroup, textarea {\n  margin: 0;\n  font-size: 100%;\n  font-family: inherit; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\nfieldset {\n  border: 0; }\n\nlegend {\n  color: #000; }\n\naddress, caption, cite, code, dfn, em, strong, th, var {\n  font-style: normal;\n  font-weight: normal; }\n\nol, ul {\n  list-style: none; }\n\ncaption, th {\n  text-align: left; }\n\nh1, h2, h3, h4, h5, h6 {\n  font-size: 100%;\n  font-weight: normal;\n  line-height: 1; }\n\ncaption, hr, legend {\n  width: 0px;\n  height: 0px;\n  font-size: 1px;\n  text-indent: -9999em;\n  line-height: 0; }\n\na {\n  color: inherit;\n  text-decoration: none;\n  background-color: transparent; }\n\na:visited span {\n  border: inherit; }\n\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/*\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block; }\n\n/* Text-level semantics\n  ========================================================================== */\n/*\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */ }\n\n/*\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%; }\n\n/*\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -0.25em; }\n\nsup {\n  top: -0.5em; }\n\n/* Forms\n  ========================================================================== */\n/*\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible; }\n\n/*\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none; }\n\n/*\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; }\n\n/*\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0; }\n\n/*\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText; }\n\n/*\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline; }\n\n/*\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto; }\n\n/*\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\n/*\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */ }\n\n/*\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n/*\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */ }\n\n/* Interactive\n  ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block; }\n\n/* Misc\n  ========================================================================== */\n/*\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none; }\n\n/*\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none; }\n","@charset \"utf-8\";\n\n// 추가 인클루드는 _setting 안에다가 하기 여기 인클루드는 _setting 하나만 나와있게 관리하기\n@import 'dev/_src/_scss/_setting';\n\n/*! reset */\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    vertical-align: middle;\n}\n// html 에 font-size, font-weight 등 설정 이유는\n// 1. rem 코딩을 활용하기 위해\n// 2. 다국어 활용을 위해 (lang 으로 분기 설정)\nhtml{\n    text-size-adjust: 100%;\n    font-size: $global-font-size;\n    font-weight: 400;\n    // -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // -webkit-tap-highlight-color: transparent;\n    @include languages();\n}\n// rem 코딩일때 화면 리사이즈에 rem 값이 자연스럽게 변하는 미디어 쿼리 분기값 (아래 사이트들 참고)\n// rem 단위를 쓰지 않으면 필요 없는 소스\n// https://css-tricks.com/using-a-mixin-to-take-the-math-out-of-responsive-font-sizes/\n// https://css-tricks.com/snippets/css/fluid-typography/\n\n// 모바일 기본 영역 보다 작은 사이즈 대응 영역\n// @media (max-width: 374px) {\n//     html {\n//         font-size: calc(#{$global-font-size - 3} + 10 * ((100vw - 280px) / 374));\n//     }\n// }\n\n// // 모바일 기본 사이즈 대응 영역 (PSD 750 사이즈 기준 세팅)\n// // max-width 에는 PSD 가로 사이즈 적용하기. 그걸 반으로 나눈 것을 min-width 에 적용하기.\n// @media (min-width: 375px) and (max-width: 750px) {\n//     html {\n//         font-size: calc(#{$global-font-size} + 20 * ((100vw - 375px) / 750));\n//     }\n// }\n\n// 기본 영역보다 큰 사이즈 대응 영역 (태블릿 전 단계)\n// @media (min-width: 751px) and (max-width: 1023px) {\n//     html {\n//         font-size: calc(#{$global-font-size} + 13 * ((100vw - 751px) / 1023));\n//     }\n// }\n\n// 태블릿 영역 대응 (아이패드 기준 1024 부터 태블릿 영역으로 정의함)\n// pc 컨텐츠 영역 최소 사이즈에 맞춰서 조정이 필요함\n// 예) 컨텐츠 최소 넓이가 1100px 이라고 한다면 max-width를 1100px 로 변경 해야함\n// @media (min-width: 1024px) and (max-width: 1279px) {\n//     html {\n//         font-size: calc(#{$global-font-size} + 12 * ((100vw - 1024px) / 1279));\n//     }\n// }\n\n// PC 영역\n// @media (min-width: 1024px) {\n//     html {\n//         font-size: $global-font-size;\n//     }\n// }\n\nbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,\ncode,form,fieldset,legend,input,textarea,p,blockquote,th,td,\narticle,aside,canvas,details,figcaption,figure,footer,header,\nhgroup,nav,section,time,mark,audio,video{margin:0;padding:0}\nbody{\n    color:$global-font-color;\n    background-color:$global-background-color;\n}\nimg{border:0;border-style: none;}\n// img{max-width:100%;} 모바일 일때 설정 여부 확인\nbutton{\n    border:0;background:none;padding:0;cursor: pointer;\n}\nbutton,input,select,optgroup,textarea{\n    margin:0;font-size:100%;\n    font-family:inherit;\n}\n\ntable{border-collapse:collapse;border-spacing:0}\nfieldset{border:0}\nlegend{color:#000}\naddress,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:normal}\nol,ul{list-style:none}\ncaption,th{text-align:left}\nh1,h2,h3,h4,h5,h6{font-size:100%;font-weight:normal;line-height:1;}\ncaption,hr,legend{width:0px;height:0px;font-size:1px;text-indent:-9999em;line-height:0}\na{\n    color:inherit;\n    text-decoration:none;\n    background-color: transparent;\n}\n// ios border bug 해결소스\na:visited span {\n    border:inherit;\n}\n\n// @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n//   /* IE10+ CSS styles go here */\n// }\n\n// @supports (-ms-ime-align:auto) {\n//   /* IE Edge 12+ CSS styles go here */\n// }\n\n\n\n\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/*\n * Render the `main` element consistently in IE.\n */\nmain {\n    display: block;\n}\n\n/* Text-level semantics\n  ========================================================================== */\n\n/*\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n}\n\n/*\n * Add the correct font size in all browsers.\n */\nsmall {\n    font-size: 80%;\n}\n\n/*\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\nsub {\n    bottom: -0.25em;\n}\nsup {\n    top: -0.5em;\n}\n\n/* Forms\n  ========================================================================== */\n\n/*\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput { /* 1 */\n    overflow: visible;\n}\n\n/*\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect { /* 1 */\n    text-transform: none;\n}\n\n/*\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n    -webkit-appearance: button;\n}\n\n/*\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\n/*\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n}\n\n/*\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n    vertical-align: baseline;\n}\n\n/*\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n    overflow: auto;\n}\n\n/*\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n/*\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n}\n\n/*\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n/*\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n}\n\n/* Interactive\n  ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n    display: block;\n}\n\n/* Misc\n  ========================================================================== */\n\n/*\n * Add the correct display in IE 10+.\n */\ntemplate {\n    display: none;\n}\n\n/*\n * Add the correct display in IE 10.\n */\n[hidden] {\n    display: none;\n}\n\n\n\n\n\n\n\n\n\n\n// 미디어쿼리 범위 샘플\n// 미디어 쿼리가 필요할 경우 아래 소스를 가져가다 쓴다.\n// 범위에 맞게 수정해서 사용해도 됨.\n// 해당 범위별로 media 쿼리내에 sass 파일을 import 해서 사용한다.\n// 0 ~ 359px - 아이폰4,5 - 320px viewport 대응\n// @media (max-width:359px){\n//   @import 'test_mobile_01';\n// }\n// 360px ~ 374px - 갤럭시노트2,3 갤럭시S3,S5 - 360px viewport 대응\n// @media (min-width:360px) and (max-width:374px){\n//   @import 'test_mobile_02';\n// }\n// 375px ~ 413px - 아이폰6,7,8 - 375px viewport 대응\n// @media (min-width:375px) and (max-width:413px){\n//   @import 'test_mobile_03';\n// }\n// 414px ~ 767px - 아이폰6+,7+,8+ - 414px viewport 대응\n// @media (min-width:414px) and (max-width:767px){\n//   @import 'test_mobile_04';\n// }\n// 768px ~ 1024px - 태블릿 대응\n// @media (min-width:768px) and (max-width:1024px){\n//   @import 'test_tablet_01';\n// }\n// 1025px 이상 - pc 대응\n// @media (min-width:1025px){\n//   @import 'test_pc_01';\n// }\n\n// 마우스를 사용하지 않는 디바이스에서 마우스 오버 효과 적용되지 않도록 하는 미디어쿼리\n// 마우스 오버 효과때문에 디바이스에서 클릭시 링크 이동이 제대로 안될 수 있기 때문\n// 근데 이 소스를 IE에서 사용하면 마우스오버가 되지 않는다. 사용에는 신중히. 소스만 남겨둠\n// @media (hover: hover){\n//\n// }\n\n// 유형별 글꼴 그룹 분류\n// p.serif {\n//   font-family: \"Times New Roman\", Times, serif;\n// }\n// p.sansserif {\n//   font-family: Helvetica, Arial, sans-serif;\n// }\n// p.monospace {\n//   font-family: \"Courier New\", Courier, monospace;\n// }\n// p.cursive {\n//   font-family: Florence, cursive;\n// }\n// p.fantasy {\n//   font-family: Blippo, fantasy;\n// }\n\n\n\n\n// 아래 사이즈외에 더 추가되는 사이즈가 있을 경우는 해당되는 범위 파일안에\n// 미디어 범위를 추가해서 스타일을 추가 해준다\n\n// contents - mobile\n// @media (max-width:1023px){\n// \t// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// \t// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n// \t@import 'category_mobile';\n// }\n\n// contents - tablet\n// @media (min-width:1024px) and (max-width:1280px){\n// \t// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// \t// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n// \t@import 'category_tablet';\n// }\n\n// contents - pc\n// @media (min-width:1281px){\n// \t// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// \t// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n// \t@import 'category_pc';\n// }\n","//$path_00: '/';\n//$path_01: '../';\n//$path_02: '../../';\n//$path_03: '../../../';\n//$path_04: '../../../../';\n//$path_05: '../../../../../';\n//$path_css: 'css/';\n//$path_js: 'js/';\n//$path_font: 'font/';\n//$path_images: 'images/';\n//$path_common: 'common/';\n//$path_html: 'html/';\n//$path_main: 'main/';\n//- 기본 경로 변수 세팅\n\n// ie10 ~ ie11 에만 적용되는 css 를 만들때 사용하는 미디어쿼리 소스\n//@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n//    // IE10+ CSS here\n//    .selectbox{\n//        // 텍스트 수직 중앙정렬을 위해서 ie10 ~ 11 속성 재정의\n//        select{\n//            padding:12px 0 10px 15px;\n//            height:auto;\n//        }\n//    }\n//}\n\n//- 변수 경로 사용하는 방법\n// background:url('#{$currentUrl}images/common/ko_bg_test01.jpg')\n\n\n// ******************** code comments ********************\n// 기본 변수 세팅\n// $global-background-color: #ffffff; - 기본 배경 컬러 설정\n// $global-font-color: #000000; - 기본 폰트 컬러 설정\n// $global-font-size: 10px !default; - 기본 폰트 크기 설정\n// ******************** code comments ********************\n$global-background-color: #ffffff;\n$global-font-color: #000000;\n$global-font-size: 10px !default;\n\n\n// ******************** code comments ********************\n// 언어별 설정 <html lang=\"\">\n// font-familu, line-height, word-break, word-wrap, letter-spacing\n// ******************** code comments ********************\n$global-font-family: (\n    'ko': ('Malgun Gothic', '맑은 고딕', Dotum, '돋움', arial, verdana, sans-serif),\n    'en': (Helvetica, Arial, sans-serif),\n    'ja': ('Meiryo', 'メイリオ', 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', sans-serif),\n    'zh': (Helvetica, Arial, 'Microsoft Yahei','微软雅黑', STXihei, '华文细黑', sans-serif)\n);\n$global-line-height: (\n    'ko': (1.15),\n    'en': (1.15),\n    'ja': (1.15),\n    'zh': (1.15)\n);\n$global-word-break: (\n    'ko': (keep-all),\n    'en': (break-all),\n    'ja': (break-all),\n    'zh': (break-all)\n);\n$global-word-wrap: (\n    'ko': (break-word),\n    'en': (break-word),\n    'ja': (break-word),\n    'zh': (break-word)\n);\n$global-letter-spacing: (\n    'ko': (0),\n    'en': (0),\n    'ja': (0),\n    'zh': (0)\n);\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// 폰트 굵기 참고용\n// Thin 100\n// Light 300\n// Regular 400\n// Medium 500\n// Bold 700\n// Black 900\n// 프로젝트내에서 사용되는 폰트 굵기를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// font size / line-height 참고\n// 24 / 36 - 1.5\n// 26 / 38 - 1.46\n// 28 / 40 - 1.42\n// 30 / 42 - 1.4\n// 32 / 44 - 1.375\n// 34 / 46 - 1.35\n// 42 / 54 - 1.28\n// 48 / 64 - 1.33\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// flex 사용 참고용\n// flex: 1 1 1; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본 값은 없음\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */\n// flex: 1 1 auto; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본값은 자동\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: auto; */\n// flex: 1 1 500px; - 500보다 늘어날 수 있고 500이하로 줄어 들 수 있음, 기본값은 500\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 500px; */\n\n// /* flex-grow: 0; */ /* 기본값 - flex-basis 이상으로 안 늘어남 */\n// /* flex-grow: 1; */ /* flex-basis 보다 늘어남 */\n// flex-shrink: 1; /* 기본값 - flex-basis 크기 보다 줄어듬 */\n// flex-shrink: 0; /* flex-basis 크기를 최소값으로 고정함 */\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// z-index 세팅 및 관리\n// 기본 z-index를 기준으로 +, - 하여 관리 한다\n// 변수명은 되도록 직관적으로 네이밍 한다\n// 프로젝트에서 사용되는 모든 z-index 값은 아래 정리 되어야 한다\n// 단, z-index:1, z-index:2 등의 10이하 단위들은 컨텐츠내 css 에서 관리한다\n// ******************** code comments ********************\n$base-z-index: 100; // 기본 z-index\n$mobile-mode-dimm-container: $base-z-index + 900; // 반응형 미지원 페이지 안내 컨텐츠 컨테이너 z-index 1000\n$popup-zindex: $base-z-index; // 팝업 z-index 100\n$global-dimm-zindex: $base-z-index - 10; // 딤드 영역 z-index 90\n\n\n// ******************** code comments ********************\n// 컬러값 변수 설정\n// 폰트컬러(color), 배경컬러(background-color), 라인컬러(border)으로 구분한다\n// 변수 네이밍에 컬러 코드 값을 사용하여 작성한다\n// 프로젝트 초반에 컬러값이 정리가 되지 않을 경우, 변수를 먼저 세팅하고 나중에 디자인팀에 현재 설정된 변수 컬러값을 전달하여 불필요한 컬러값들을 정리 하도록 한다\n// ******************** code comments ********************\n$font-333333: #333333;\n$bg-333333: #333333;\n$line-333333: #333333;\n\n\n// ******************** code comments ********************\n// box shadow 샘플\n// box-shadow: 8px 8px 8px 0 rgba(0,0,0,0.05);\n// PSD - box-shadow: 거리 거리 크기 스프레드 rgba(컬러,컬러,컬러,불투명도)\n// 박스 inset - 보더대신 서야 할 때\n// box-shadow: inset -1px 1px 0px 0px rgba(221,221,221,1);\n// 프로젝트내에서 사용하는 box shadow 를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// 공통 소스 인클루드 영역\n// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n//@import 'dev/_src/_scss/mixin';\n\n\n// ******************** code comments ********************\n// disabled 속성\n// ******************** code comments ********************\n@mixin ui-disabled(){\n    // disabled 속성 (모던 브라우저)\n    &.disabled{\n        opacity: 0.5;\n        pointer-events: none;\n        position: relative;\n        z-index: -1;\n        // disabled 속성 ie10 대응\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n            /* IE10+ CSS styles go here */\n            &:after{\n                content:'';\n                position: absolute;\n                width:100%;\n                height:100%;\n                top:0;left:0;\n                background:#ffffff;\n                opacity: 0;\n                z-index: 1;\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// 텍스트 말줄임\n// ******************** code comments ********************\n@mixin ellipsis($line: 1) { // 인자 값의 기본 값은 1\n    @if ($line == 1) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    } @else {\n        display: -webkit-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: $line;\n    }\n}\n\n\n// ******************** code comments ********************\n// 언어별 폰트 설정\n// /* 사용 예제 Languages */\n// @include languages();\n// ******************** code comments ********************\n@mixin languages() {\n    @each $type, $font-family in $global-font-family {\n        &:lang(#{$type}) {\n            font-family:$font-family;\n        }\n    }\n    @each $type, $line-height in $global-line-height {\n        &:lang(#{$type}) {\n            line-height:$line-height;\n        }\n    }\n    @each $type, $word-break in $global-word-break {\n        &:lang(#{$type}) {\n            word-break:$word-break;\n        }\n    }\n    @each $type, $word-wrap in $global-word-wrap {\n        &:lang(#{$type}) {\n            word-wrap:$word-wrap;\n        }\n    }\n    @each $type, $letter-spacing in $global-letter-spacing {\n        &:lang(#{$type}) {\n            letter-spacing:$letter-spacing;\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Computes a CSS calc function that betweens a value from\n// * A to B over viewport-width A to viewport-width B.\n// * Requires a media query to cap the value at B.\n// * vw 단위를 활용하여 미디어쿼리 분기의 중간 상태값을\n// * 계산해주는 SASS 함수.\n// * 간격이나 폰트사이즈에 적용하면 자연스러운\n// * 반응형 사이즈 처리가 가능 함.\n// * 참고사이트 http://dohoons.com/blog/1364\n// */\n// 소스 사용예제\n// @media (min-width: $small) {\n// \tpadding: between(16px, 32px, $small, $medium);\n// }\n// @media (min-width: $medium) {\n// \tpadding: between(32px, 90px, $medium, $large);\n// }\n// @media (min-width: $large) {\n// \tpadding: 90px;\n// }\n// ******************** code comments ********************\n$small: 400px;\n$large: 1000px;\n@function between($to, $from, $toWidth, $fromWidth) {\n    $slope: ($to - $from) / ($toWidth - $fromWidth);\n    $base: $from - $slope * $fromWidth;\n\n    @return calc(#{$base} + #{100vw * $slope});\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Read the article: http://sassbreak.com/viewport-relative-headings-with-sass\n// * px 를 vw 로 자동으로 바꿔 줌.\n// * max-breakpoint 를 설정하면 미디어쿼리 브레이크 포인트가 됨.\n// * 그래서 미디어쿼리 브레이크 포인트에 맞춰 px 가 vw 로 변환됨.\n// * 100% 보다 더 크게 적용 하고 싶으면 return 부분을 수정하면됨.\n// * 참고사이트 http://sassbreak.com/viewport-relative-headings-with-sass/\n// */\n// 예) width: get-vw(21px);\n// ******************** code comments ********************\n// Max breakpoint\n$max-breakpoint-main: 1400;\n$max-breakpoint-main-height: 720;\n\n// This could be one of your media query breakpoint variables\n$wide-screen: \"(min-width: #{$max-breakpoint-main}px)\";\n\n// Function\n@function get-vw($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vw; // 100=1, 140=1.4\n}\n\n@function get-vh($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main-height * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vh;\n}\n\n\n// 입력 받은 값의 숫자만 남겨놓고 단위 지우기\n// Remove the unit of a length\n// @param {Number} $number - Number to remove unit from\n// @return {Number} - Unitless number\n@function strip-unit($number) {\n    @if type-of($number) == 'number' and not unitless($number) {\n        @return $number / ($number * 0 + 1);\n    }\n\n    @return $number;\n}\n\n\n// ******************** code comments ********************\n// px를 rem 변환 (2021.03.22 버전) - 기존버전 보다 다양하게 활용할 수 있음 아래 url 참고 바람.\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n//\n// sass 기본 사용법\n// @include rem(font-size, 24px); // Simple\n// @include rem(padding, 5px 10px); // Multiple values\n// @include rem(border-bottom, 1px solid black); // Multiple mixed values\n// @include rem(box-shadow, 0 0 2px #ccc, inset 0 0 5px #eee); // Comma-separated values\n// // Multiple properties\n// @include rem((\n//     margin: 10px 5px,\n//     text-shadow: (1px 1px #eee, -1px -1px #eee) // Parentheses needed because of comma\n// ));\n//\n// css 출력\n// font-size: 24px;\n// font-size: 1.5rem;\n// padding: 5px 10px;\n// padding: 0.3125rem 0.625rem;\n// border-bottom: 1px solid black;\n// border-bottom: 0.0625rem solid black;\n// box-shadow: 0 0 2px #ccc, inset 0 0 5px #eee;\n// box-shadow: 0 0 0.125rem #ccc, inset 0 0 0.3125rem #eee;\n// margin: 10px 5px;\n// margin: 0.625rem 0.3125rem;\n// text-shadow: 1px 1px #eee, -1px -1px #eee;\n// text-shadow: 0.0625rem 0.0625rem #eee, -0.0625rem -0.0625rem #eee;\n//\n// rem line-height 사용법\n// 예) @include rem(font-size, 23px, 33);\n// 가이드) @include rem(font-size, 23px, psd line-height)\n//\n// libsass (v3.5.0.beta.2)\n// https://github.com/pierreburel/sass-rem\n// ******************** code comments ********************\n\n$rem-baseline: $global-font-size !default;\n$rem-fallback: true !default;\n// 하위브라우저 호환 맞춰야 할때 - false: rem만 출력, true: px,rem 둘다 출력\n$rem-px-only: false !default;\n// rem 변환이 필요 없을 때 - false: rem 변환 사용(기본), true: rem 변환 사용 안함(px출력)\n\n@function rem-separator($list, $separator: false) {\n    @if $separator == \"comma\" or $separator == \"space\" {\n        @return append($list, null, $separator);\n    }\n\n    @if function-exists(\"list-separator\") == true {\n        @return list-separator($list);\n    }\n\n    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n    $test-list: ();\n    @each $item in $list {\n        $test-list: append($test-list, $item, space);\n    }\n\n    @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n    font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n    $result: ();\n    $separator: rem-separator($values);\n\n    @each $value in $values {\n        @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\n        } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n            $result: append($result, $value / $rem-baseline + 0rem, $separator);\n        } @else if type-of($value) == \"list\" {\n            $value-separator: rem-separator($value);\n            $value: rem-convert($to, $value...);\n            $value: rem-separator($value, $value-separator);\n            $result: append($result, $value, $separator);\n        } @else {\n            $result: append($result, $value, $separator);\n        }\n    }\n\n    @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n    @if $rem-px-only {\n        @return rem-convert(px, $values...);\n    } @else {\n        @return rem-convert(rem, $values...);\n    }\n}\n\n@mixin rem($properties, $values...) {\n    @if type-of($properties) == \"map\" {\n        @each $property in map-keys($properties) {\n            @include rem($property, map-get($properties, $property));\n        }\n    } @else {\n        @each $property in $properties {\n            @if $rem-fallback or $rem-px-only {\n                #{$property}: rem-convert(px, $values...);\n            }\n            @if not $rem-px-only {\n                #{$property}: rem-convert(rem, $values...);\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// rem 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include rem-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// rem 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3rem);\n// 사용 예제)\n// @include rem-calc(width, 100%, '+', 2px);\n// @include rem-calc(width, 80%, '-', 1px);\n// @include rem-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin rem-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num} #{$sign} #{$calc-px});\n    $calc-rem: rem($calc-px);\n    #{$property}: calc(#{$num} #{$sign} #{$calc-rem});\n}\n\n\n// ******************** code comments ********************\n// px를 em 변환\n//\n// em 기본 사용법\n// @include em(height,51px);\n// @include em(padding, 0 15px);\n// font-size + line-height 사용법\n//\n// em line-height 사용법\n// 예) @include em(font-size, 23px, 33);\n// 가이드) @include em(font-size, 23px, psd line-height)\n//\n// em border 사용법\n// 예) @include em(border, 2px, solid blue);\n// 예) @include em(border-left, 20px, solid blue);\n//\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n// ******************** code comments ********************\n$baseFont : $global-font-size;\n@mixin em($target, $values, $line-height:0, $border-info...) {\n    $mixin-base-font-size: $baseFont ;\n    $px-values: ();\n    $em-values: ();\n\n    @each $value in $values {\n        @if $value == 0 or $value == 0px {\n            $px-values: join($px-values, 0);\n            $em-values: join($em-values, 0);\n        } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n            $new-em-value: $value / $mixin-base-font-size;\n            $px-values: join($px-values, round($value));\n            $em-values: join($em-values, #{$new-em-value}em);\n        } @else {\n            $px-values: join($px-values, round($value * $mixin-base-font-size));\n            $em-values: join($em-values, #{$value}em);\n        }\n    }\n    @if $target == 'font-size' {\n        @if $line-height == 0 {\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n        } @else{\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n            line-height: $line-height / strip-unit($values);\n        }\n    } @else if $target == 'border' & 'border-left' & 'border-right' & 'border-top' & 'border-bottom' {\n        #{$target}: $px-values $line-height $border-info;\n        #{$target}: $em-values $line-height $border-info;\n    } @else {\n        #{$target}: $px-values;\n        #{$target}: $em-values;\n    }\n}\n\n\n// ******************** code comments ********************\n// em 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include em-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// em 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3em);\n// 사용 예제)\n// @include em-calc(width, 100%, '+', 2px);\n// @include em-calc(width, 80%, '-', 1px);\n// @include em-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin em-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-px});\n    $calc-em: em($calc-px);\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-em});\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-position 값 설정\n// ******************** code comments ********************\n@mixin sprite-position-px($sprite) {\n    $sprite-offset-x: nth($sprite, 3);\n    $sprite-offset-y: nth($sprite, 4);\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-rem($sprite) {\n    $sprite-offset-x: rem(nth($sprite, 3));\n    $sprite-offset-y: rem(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-em($sprite) {\n    $sprite-offset-x: em(nth($sprite, 3));\n    $sprite-offset-y: em(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-vw($sprite) {\n    $sprite-offset-x: get-vw(nth($sprite, 3));\n    $sprite-offset-y: get-vw(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-size 값 설정\n// ******************** code comments ********************\n@mixin sprite-background-size-px($sprite) {\n    $sprite-size-width: nth($sprite, 7);\n    $sprite-size-height: nth($sprite, 8);\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-rem($sprite) {\n    $sprite-size-width: rem(nth($sprite, 7));\n    $sprite-size-height: rem(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-em($sprite) {\n    $sprite-size-width: em(nth($sprite, 7));\n    $sprite-size-height: em(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-vw($sprite) {\n    $sprite-size-width: get-vw(nth($sprite, 7));\n    $sprite-size-height: get-vw(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 width 값 설정\n// ******************** code comments ********************\n@mixin sprite-width-px($sprite) {\n    width: nth($sprite, 5);\n}\n@mixin sprite-width-rem($sprite) {\n    width: rem(nth($sprite, 5));\n}\n@mixin sprite-width-em($sprite) {\n    width: em(nth($sprite, 5));\n}\n@mixin sprite-width-vw($sprite) {\n    width: get-vw(nth($sprite, 5));\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 height 값 설정\n// ******************** code comments ********************\n@mixin sprite-height-px($sprite) {\n    height: nth($sprite, 6);\n}\n@mixin sprite-height-rem($sprite) {\n    height: rem(nth($sprite, 6));\n}\n@mixin sprite-height-em($sprite) {\n    height: em(nth($sprite, 6));\n}\n@mixin sprite-height-vw($sprite) {\n    height: get-vw(nth($sprite, 6));\n}\n\n\n// ******************** code comments ********************\n// pc px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 pc 버전\n// @include sprite-custom(rem, $pc-logo-pc-ko);\n// @include sprite-custom(em, $pc-logo-pc-ko);\n// @include sprite-custom(px, $pc-logo-pc-ko);\n// @include sprite-custom(vw, $pc-logo-pc-ko);\n// ******************** code comments ********************\n@mixin sprite-custom($unit, $sprite) {\n    @include sprite-image($sprite);\n\n    @if $unit == px{\n        @include sprite-position-px($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-background-size-px($sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($sprite);\n        @include sprite-position-rem($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-rem($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-rem($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-rem($sprite);\n    } @else if $unit == em {\n        @include sprite-position-px($sprite);\n        @include sprite-position-em($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-em($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-em($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-em($sprite);\n    } @else if $unit == vw {\n        @include sprite-position-vw($sprite);\n        @include sprite-width-vw($sprite);\n        @include sprite-height-vw($sprite);\n        @include sprite-background-size-vw($sprite);\n    }\n}\n\n\n// ******************** code comments ********************\n// mobile px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 mobile 버전\n// @include retina-sprite-custom(rem, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(em, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(px, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(vw, $mobile-logo-pc-ko-group);\n// ******************** code comments ********************\n@mixin retina-sprite-custom($unit, $retina-group) {\n    $normal-sprite: nth($retina-group, 2);\n    $retina-sprite: nth($retina-group, 3);\n    @include sprite-image($retina-sprite);\n    background-repeat: no-repeat;\n\n    @if $unit == px{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-rem($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-rem($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-rem($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-rem($normal-sprite);\n    } @else if $unit == em{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-em($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-em($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-em($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-em($normal-sprite);\n    } @else if $unit == vw{\n        @include sprite-position-vw($normal-sprite);\n        @include sprite-width-vw($normal-sprite);\n        @include sprite-height-vw($normal-sprite);\n        @include sprite-background-size-vw($normal-sprite);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// $title\n// ____________________________________________________________________________\n//\n//    SCSS Unit Conversion v.2.1.2\n//\n//\n//    Links:\n//    GitHub   https://github.com/jakob-e/unitconversion\n//    Codepen  https://codepen.io/jakob-e/pen/AHunv\n// ____________________________________________________________________________\n//\n//   Function               Input units\n//\n//   Absolute length\n//   px(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pt(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pc(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   in(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   mm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   cm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//\n//   Relative length\n//   em(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   rem(input);            px, pt, pc, in, mm, cm, em, rem, number\n//   ex(input);             ex, number\n//   ch(input);             ch, number\n//   vw(input);             vw, number\n//   vh(input);             vh, number\n//   vmin(input);           vmin, number\n//   vmax(input);           vmax, number\n//\n//   Angle\n//   deg(input);            deg, rad, grad, turn, number\n//   rad(input);            deg, rad, grad, turn, number\n//   grad(input);           deg, rad, grad, turn, number\n//   turn(input);           deg, rad, grad, turn, number\n//\n//   Resolution\n//   dpi(input);            dpi, dpcm, dppx, number\n//   dpcm(input);           dpi, dpcm, dppx, number\n//   dppx(input);           dpi, dpcm, dppx, number\n//\n//   Time\n//   s(input);              s, ms, number\n//   ms(input);             s, ms, number\n//\n//   Frequency\n//   hz(input);             hz, khz, number\n//   khz(input);            hz, khz, number\n//\n//   String\n//   str(input);            anything not null\n//\n//   Number, int and uint\n//   num(input);            px, pt, pc, in, mm, cm, em, rem, ex, ch,\n//                          vw, vh, vmin, vmax, deg, rad, grad, turn,\n//                          dpi, dpcm, dppx, s, ms, hz, khz, number\n//   int(input);            as number\n//   uint(input);           as number\n//\n//   ratio                  number to fraction\n//\n//   Aliases\n//   string(input);\n//   number(input);\n//\n// ____________________________________________________________________________\n\n// Base font size in pixel for converting em and rem to absolute lengths.\n$unit-base-font-size: $global-font-size;\n\n\n// Absolute lengths\n@function px($input){ @return to-unit(px, $input); }\n@function pt($input){ @return to-unit(pt, $input); }\n@function pc($input){ @return to-unit(pc, $input); }\n@function in($input){ @return to-unit(in, $input); }\n@function mm($input){ @return to-unit(mm, $input); }\n@function cm($input){ @return to-unit(cm, $input); }\n\n// Angles\n@function deg($input){ @return to-unit(deg, $input); }\n@function rad($input){ @return to-unit(rad, $input); }\n@function grad($input){ @return to-unit(grad, $input); }\n@function turn($input){ @return to-unit(turn, $input); }\n\n// Resolution\n@function dpi($input){ @return to-unit(dpi, $input); }\n@function dpcm($input){ @return to-unit(dpcm, $input); }\n@function dppx($input){ @return to-unit(dppx, $input); }\n\n// Time\n@function ms($input){ @return to-unit(ms, $input); }\n@function s($input){ @return to-unit(s, $input); }\n\n// Frequencies\n@function hz($input){ @return to-unit(hz, $input);}\n@function khz($input){ @return to-unit(khz, $input); }\n\n// Relative lengths\n@function em($input...){\n    $em: to-unit(em, nth($input,1));\n    // Adjust for compounds (visual size)\n    @if length($input) > 1 {\n        @for $i from 2 through length($input){\n            $em: $em / num(em(nth($input,$i)));\n        }\n    }\n    @return $em;\n}\n@function rem($input){ @return to-unit(rem, num(em($input))); }\n\n// Inconvertible relative lengths – depends on font\n@function ex($input){ @return to-unit(ex, $input); }\n@function ch($input){ @return to-unit(ch, $input); }\n\n// Viewport\n@function vw($input){ @return to-unit(vw, $input); }\n@function vh($input){ @return to-unit(vh, $input); }\n@function vmin($input){ @return to-unit(vmin, $input); }\n@function vmax($input){ @return to-unit(vmax, $input); }\n\n// Strings and numbers\n@function str($input){ @return #{$input};  }\n@function num($input){\n    @if type-of($input) != number {\n        @error 'Could not convert `#{$input}` - must be `type-of number`';\n        @return null;\n    }\n    @return $input/($input*0+1);\n}\n@function int($input){\n    $num: num($input);\n    @return if($num<0, ceil($num), floor($num));\n}\n@function uint($input){ @return abs(int($input)); }\n\n// Aliases\n@function string($input){ @return str($input);}\n@function number($input){ @return num($input);}\n\n\n// Conversion function\n@function to-unit($unit, $input){\n    // Test against valid CSS units\n    $to-unit: map-get((\n            px: 0px, pt: 0pt, pc: 0pc, in: 0in, mm: 0mm, cm: 0cm, // absolute length\n            em: 0em, rem: 0rem, ch: 0ch, ex: 0ex,                 // relative length - font based\n            vw: 0vw, vh: 0vh, vmin: 0vmin, vmax: 0vmax,           // relative length - viewport based\n            deg: 0deg, turn: 0turn, grad: 0grad, rad: 0rad,       // angle\n            s: 0s, ms: 0ms,                                       // time\n            hz: 0Hz, khz: 0kHz,                                   // frequency\n            dpi: 0dpi, dpcm: 0dpcm, dppx: 0dppx,                  // resolution\n            pct: 0%, percent: 0%, num: 0, number: 0               // percent or number\n    ), $unit);\n\n    // Error handling – wrong $unit\n    // Incomparable units are caught in convertion\n    @if not $to-unit {\n        @error 'Could not convert to `#{$unit}` – must be a valid CSS unit';\n        @return null;\n    }\n\n    // Number/incomparable conversion\n    @if index(num number ex ch vw vh vmin vmax, $unit) {\n        $value: num($input);\n    }\n\n    // EM/REM convertion using px as base\n    @if index(em rem, unit($input)) {\n        $input: 0px + num($input) * $unit-base-font-size/1px;\n    }\n    @if index(em rem, $unit) and not unitless($input) {\n        $input: 0px + $input;\n        $input: num($input) * 1px/$unit-base-font-size;\n    }\n\n    // Bug fix – resolution units seems to be flipped\n    @if index(dpi dpcm dppx, $unit){\n        $units: (dppx: 0dppx, dpcm: 0dpcm, dpi: 0dpi);\n        $input-unit: map-get($units, unit($input));\n        $input: if(1dppx < 95dpi,num($input-unit + (num($input) + $to-unit)),$input);\n    }\n\n    // Convert\n    @return $to-unit + $input;\n}\n\n//  Convert number to ratio (fraction)\n//  ratio(1.7777778) =>   16/9\n@function ratio($x, $y: null){\n    @if not $y {\n        $n: $x; $y: 1;\n        @while $y < 10 {\n            $x:  $n * 10 - ((10 - $y) * $n);\n            @if $x == round($x){ @return #{$x}/#{$y}; }\n            @else { $y: $y + 1; }\n        }\n        $x: round($n * 1000000); $y: 1000000;\n        @while $x % 10 == 0 { $x: $x/10; $y: $y/10; }\n        @while $x % 5 == 0 { $x: $x/5; $y: $y/5; }\n        @while $x % 2 == 0 { $x: $x/2; $y: $y/2; }\n        @return #{$x}/#{$y};\n    }\n    @else if $x == round($x) and $y == round($y){ @return #{$x}/#{$y}; }\n    @warn 'X and Y must be integers'; @return false;\n}\n\n\n\n@import 'dev/_src/_scss/_sprite/sprite_mobile';\n@import 'dev/_src/_scss/_sprite/sprite_pc';\n"]}