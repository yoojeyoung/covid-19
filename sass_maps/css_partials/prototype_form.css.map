{"version":3,"sources":["css_partials/prototype_form.css","css_partials/prototype_form.scss","_src/_scss/_setting.scss"],"names":[],"mappings":"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","file":"../../dev/css_partials/prototype_form.css","sourcesContent":["@charset \"UTF-8\";\n/*! mobile 버전 - css */\n/*! pc & tablet 버전 - css */\n/*! form - checkbox */\n.input-checkbox {\n  display: inline-block; }\n  .input-checkbox input {\n    border: 0;\n    clip: rect(0 0 0 0);\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute; }\n  .input-checkbox label {\n    display: inline-block;\n    position: relative;\n    min-width: 20px;\n    min-width: 2rem;\n    min-height: 20px;\n    min-height: 2rem;\n    padding-top: 1px;\n    padding-top: 0.1rem;\n    user-select: none; }\n  .input-checkbox .txt {\n    display: inline-block;\n    color: gray;\n    font-size: 16px;\n    font-size: 1.6rem; }\n  .input-checkbox label:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 20px;\n    width: 2rem;\n    height: 20px;\n    height: 2rem;\n    margin-top: -10px;\n    margin-top: -1rem;\n    border: 1px solid gray;\n    text-align: center;\n    transition: all .3s ease-out; }\n  .input-checkbox label:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 5px;\n    left: 0.5rem;\n    margin-top: -4px;\n    margin-top: -0.4rem;\n    width: 9px;\n    width: 0.9rem;\n    height: 6px;\n    height: 0.6rem;\n    border-top: 2px solid gray;\n    border-top: 0.2rem solid gray;\n    border-right: 2px solid gray;\n    border-right: 0.2rem solid gray;\n    transform: rotate(130deg);\n    transition: all .3s ease-out; }\n  .input-checkbox.right label {\n    padding-left: 30px;\n    padding-left: 3rem; }\n  .input-checkbox.left label {\n    padding-right: 30px;\n    padding-right: 3rem; }\n  .input-checkbox.left label:before {\n    left: auto;\n    right: 0; }\n  .input-checkbox.left label:after {\n    left: auto;\n    right: 5px;\n    right: 0.5rem; }\n  .input-checkbox.up label {\n    padding-bottom: 25px;\n    padding-bottom: 2.5rem; }\n  .input-checkbox.up label:before {\n    top: auto;\n    bottom: 0;\n    left: 50%;\n    margin-left: -10px;\n    margin-left: -1rem;\n    margin-top: 0; }\n  .input-checkbox.up label:after {\n    top: auto;\n    bottom: 8px;\n    bottom: 0.8rem;\n    left: 50%;\n    margin-left: -5px;\n    margin-left: -0.5rem;\n    margin-top: 0; }\n  .input-checkbox.down label {\n    padding-top: 25px;\n    padding-top: 2.5rem; }\n  .input-checkbox.down label:before {\n    top: 0;\n    left: 50%;\n    margin-left: -10px;\n    margin-left: -1rem;\n    margin-top: 0; }\n  .input-checkbox.down label:after {\n    top: 6px;\n    top: 0.6rem;\n    left: 50%;\n    margin-left: -5px;\n    margin-left: -0.5rem;\n    margin-top: 0; }\n  .input-checkbox input.checked + label:before,\n  .input-checkbox input:checked + label:before {\n    background-color: blue;\n    border-color: blue; }\n  .input-checkbox input.checked + label:after,\n  .input-checkbox input:checked + label:after {\n    border-color: #ffffff; }\n  .input-checkbox input.checked + label .txt,\n  .input-checkbox input:checked + label .txt {\n    color: gray; }\n  .input-checkbox input.disabled + label:before,\n  .input-checkbox input:disabled + label:before {\n    background-color: lightgray;\n    border-color: gray; }\n  .input-checkbox input.disabled + label:after,\n  .input-checkbox input:disabled + label:after {\n    border-color: #ffffff; }\n\n/*! form - radio */\n.input-radio input {\n  border: 0;\n  clip: rect(0 0 0 0);\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute; }\n\n.input-radio label {\n  display: inline-block;\n  position: relative;\n  min-width: 20px;\n  min-width: 2rem;\n  min-height: 20px;\n  min-height: 2rem;\n  padding-top: 1px;\n  padding-top: 0.1rem;\n  user-select: none; }\n\n.input-radio .txt {\n  display: inline-block;\n  color: #606266;\n  font-size: 14px;\n  font-size: 1.4rem; }\n\n.input-radio label:before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 0;\n  width: 20px;\n  width: 2rem;\n  height: 20px;\n  height: 2rem;\n  margin-top: -10px;\n  margin-top: -1rem;\n  border: 1px solid #dcdfe6;\n  text-align: center;\n  border-radius: 50%;\n  transition: all .3s ease-out; }\n\n.input-radio.right label {\n  padding-left: 30px;\n  padding-left: 3rem; }\n\n.input-radio.left label {\n  padding-right: 30px;\n  padding-right: 3rem; }\n\n.input-radio.left label:before {\n  left: auto;\n  right: 0; }\n\n.input-radio.left label:after {\n  left: auto;\n  right: 6px;\n  right: 0.6rem; }\n\n.input-radio.up label {\n  padding-bottom: 25px;\n  padding-bottom: 2.5rem; }\n\n.input-radio.up label:before {\n  top: auto;\n  bottom: 0;\n  left: 50%;\n  margin-left: -10px;\n  margin-left: -1rem;\n  margin-top: 0; }\n\n.input-radio.up label:after {\n  top: auto;\n  bottom: 6px;\n  bottom: 0.6rem;\n  left: 50%;\n  margin-left: -4px;\n  margin-left: -0.4rem;\n  margin-top: 0; }\n\n.input-radio.down label {\n  padding-top: 25px;\n  padding-top: 2.5rem; }\n\n.input-radio.down label:before {\n  top: 0;\n  left: 50%;\n  margin-left: -10px;\n  margin-left: -1rem;\n  margin-top: 0; }\n\n.input-radio.down label:after {\n  top: 6px;\n  top: 0.6rem;\n  left: 50%;\n  margin-left: -4px;\n  margin-left: -0.4rem;\n  margin-top: 0; }\n\n.input-radio input.checked + label:before,\n.input-radio input:checked + label:before {\n  background-color: #409eff;\n  border-color: #409eff; }\n\n.input-radio input.checked + label:after,\n.input-radio input:checked + label:after {\n  content: '';\n  display: block;\n  position: absolute;\n  top: 50%;\n  background-color: #fff;\n  left: 6px;\n  left: 0.6rem;\n  width: 8px;\n  width: 0.8rem;\n  height: 8px;\n  height: 0.8rem;\n  margin-top: -4px;\n  margin-top: -0.4rem;\n  border-radius: 50%;\n  transition: all .3s ease-out; }\n\n.input-radio input.disabled + label:before,\n.input-radio input:disabled + label:before {\n  background-color: lightgray;\n  border-color: gray; }\n\n.input-radio input.disabled + label:after,\n.input-radio input:disabled + label:after {\n  background-color: #ffffff; }\n\n/*! form - input text */\n.input-txt {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  border: 1px solid #cccccc;\n  background-color: #ffffff; }\n  .input-txt.in-message {\n    margin-bottom: 30px;\n    margin-bottom: 3rem; }\n  .input-txt input {\n    display: inline-block;\n    padding: 0 0 0 15px;\n    width: 100%;\n    font-size: 12px;\n    height: 38px;\n    line-height: 38px;\n    border: none;\n    appearance: none;\n    border-radius: 0; }\n  .input-txt .message {\n    display: block;\n    margin-top: 3px;\n    margin-top: 0.3rem;\n    font-size: 12px;\n    font-size: 1.2rem; }\n    .input-txt .message.pass {\n      color: blue; }\n    .input-txt .message.error {\n      color: red; }\n\n.input-txt input:read-only {\n  opacity: 0.5; }\n\n.input-txt input::placeholder {\n  font-size: 12px;\n  color: gray;\n  background: transparent;\n  opacity: 1; }\n\n.input-txt input:-ms-input-placeholder {\n  position: relative;\n  top: 1px; }\n\n.input-txt input::-ms-input-placeholder {\n  position: relative;\n  top: 1px; }\n\n/*! form - selectbox */\n.selectbox {\n  position: relative;\n  z-index: 0;\n  display: inline-block;\n  width: 100%;\n  overflow: hidden;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px; }\n  .selectbox:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 50%;\n    right: 22px;\n    right: 2.2rem;\n    margin-top: -8px;\n    margin-top: -0.8rem;\n    width: 10px;\n    width: 1rem;\n    height: 10px;\n    height: 1rem;\n    border-top: 2px solid gray;\n    border-top: 0.2rem solid gray;\n    border-right: 2px solid gray;\n    border-right: 0.2rem solid gray;\n    transform: rotate(135deg); }\n  .selectbox select {\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    width: 100%;\n    padding: 0 0 0 20px;\n    padding: 0 0 0 2rem;\n    height: 40px;\n    height: 4rem;\n    line-height: 40px;\n    line-height: 4rem;\n    font-size: 14px;\n    font-size: 1.4rem;\n    color: #c0c4cc;\n    background-color: transparent;\n    border: none;\n    appearance: none;\n    border-radius: 0; }\n  .selectbox select::-ms-expand {\n    display: none; }\n  .selectbox select:disabled {\n    background-color: lightgray;\n    pointer-events: none; }\n\n/*! 파일첨부 스타일 */\n.input-file-type01 {\n  position: relative;\n  padding-right: 60px;\n  padding-right: 6rem; }\n  .input-file-type01 .input-file {\n    position: relative;\n    width: 100%;\n    height: 50px;\n    height: 5rem;\n    z-index: 2;\n    opacity: 0;\n    cursor: pointer; }\n  .input-file-type01 .input-file-label {\n    display: block;\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    cursor: pointer;\n    width: calc(100% - 60px);\n    width: calc(100% - 6rem);\n    padding: 15px 0 15px 20px;\n    padding: 1.5rem 0 1.5rem 2rem;\n    border: 1px solid gray;\n    color: gray;\n    font-size: 16px;\n    font-size: 1.6rem;\n    font-weight: 300;\n    transition: all .3s ease-out; }\n    .input-file-type01 .input-file-label:after {\n      content: '';\n      display: block;\n      width: 50px;\n      width: 5rem;\n      height: 50px;\n      height: 5rem;\n      position: absolute;\n      top: -1px;\n      top: -0.1rem;\n      right: -60px;\n      right: -6rem;\n      background: #f5f5f5 url(\"../images/common/ico_add_file.png\") no-repeat center center; }\n  .input-file-type01 .input-file:hover + .input-file-label,\n  .input-file-type01 .input-file:focus + .input-file-label {\n    border: 1px solid black; }\n\n.input-textarea textarea {\n  width: 100%;\n  height: 152px;\n  margin-top: 8px;\n  border-color: #e4e7ed;\n  border-radius: 4px; }\n","@charset \"utf-8\";\n\n@import 'dev/_src/_scss/_setting';\n\n/*! mobile 버전 - css */\n@media (max-width:1023px){}\n/*! pc & tablet 버전 - css */\n@media (min-width:1024px){}\n\n// ******************** code comments ********************\n// form - checkbox\n// ******************** code comments ********************\n/*! form - checkbox */\n.input-checkbox{\n    display:inline-block;\n    input{\n        border: 0;\n        clip: rect(0 0 0 0);\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n        overflow: hidden;\n        padding: 0;\n        position: absolute;\n    }\n    label{\n        display:inline-block;\n        position: relative;\n        @include rem(min-width, 20px);\n        @include rem(min-height, 20px);\n        @include rem(padding-top, 1px);\n        // 익스에서 위로 조금더 올라 간것 같으면 위 패딩은 미디어쿼리 핵으로 2px 로 분기처리하기\n        user-select: none;\n    }\n    .txt{\n        display:inline-block;\n        color:gray;\n        @include rem(font-size, 16px);\n    }\n    label:before{\n        content:'';\n        position: absolute;\n        top: 50%;\n        left: 0;\n        @include rem(width, 20px);\n        @include rem(height, 20px);\n        @include rem(margin-top, -10px);\n        border: 1px solid gray;\n        text-align: center;\n        transition: all .3s ease-out;\n    }\n    label:after{\n        content:'';\n        display:block;\n        position: absolute;\n        top: 50%;\n        @include rem(left, 5px);\n        @include rem(margin-top, -4px);\n        @include rem(width, 9px);\n        @include rem(height, 6px);\n        @include rem(border-top, 2px solid gray);\n        @include rem(border-right, 2px solid gray);\n        transform: rotate(130deg);\n        transition: all .3s ease-out;\n    }\n    &.right{\n        label{\n            @include rem(padding-left, 30px);\n        }\n    }\n    &.left{\n        label{\n            @include rem(padding-right, 30px);\n        }\n        label:before{\n            left:auto;\n            right:0;\n        }\n        label:after{\n            left:auto;\n            @include rem(right, 5px);\n        }\n    }\n    &.up{\n        label{\n            @include rem(padding-bottom, 25px);\n        }\n        label:before{\n            top:auto;\n            bottom:0;\n            left:50%;\n            @include rem(margin-left, -10px);\n            margin-top:0;\n        }\n        label:after{\n            top:auto;\n            @include rem(bottom, 8px);\n            left:50%;\n            @include rem(margin-left, -5px);\n            margin-top:0;\n        }\n    }\n    &.down{\n        label{\n            @include rem(padding-top, 25px);\n        }\n        label:before{\n            top:0;\n            left:50%;\n            @include rem(margin-left, -10px);\n            margin-top:0;\n        }\n        label:after{\n            @include rem(top, 6px);\n            left:50%;\n            @include rem(margin-left, -5px);\n            margin-top:0;\n        }\n    }\n    // 접근성 소스 필요시 아래 주석 해제\n    // input:hover,\n    // input:focus{\n    // \t& + label:before{\n    // \t\tbox-shadow: 0px 0px 2px 3px rgba(0,180,255,0.5);\n    // \t}\n    // }\n    // checked 됐을때 스타일 변화\n    input.checked,\n    input:checked{\n        & + label:before{\n            background-color:blue;\n            border-color:blue;\n        }\n        & + label:after{\n            border-color:#ffffff;\n        }\n        & + label .txt{\n            color: gray;\n        }\n    }\n    // disabled 됐을때 스타일 변화\n    input.disabled,\n    input:disabled{\n        & + label:before{\n            background-color:lightgray;\n            border-color:gray;\n        }\n        & + label:after{\n            border-color:#ffffff;\n        }\n    }\n}\n\n// ******************** code comments ********************\n// form - radio\n// ******************** code comments ********************\n/*! form - radio */\n.input-radio{\n    // display:inline-block;\n    input{\n        border: 0;\n        clip: rect(0 0 0 0);\n        width: 1px;\n        height: 1px;\n        margin: -1px;\n        overflow: hidden;\n        padding: 0;\n        position: absolute;\n    }\n    label{\n        display:inline-block;\n        position: relative;\n        @include rem(min-width, 20px);\n        @include rem(min-height, 20px);\n        @include rem(padding-top, 1px);\n        // 익스에서 위로 조금더 올라 간것 같으면 위 패딩은 미디어쿼리 핵으로 2px 로 분기처리하기\n        user-select: none;\n    }\n    .txt{\n        display:inline-block;\n        color:#606266;\n        @include rem(font-size, 14px);\n    }\n    label:before{\n        content:'';\n        position: absolute;\n        top: 50%;\n        left: 0;\n        @include rem(width, 20px);\n        @include rem(height, 20px);\n        @include rem(margin-top, -10px);\n        border: 1px solid #dcdfe6;\n        text-align: center;\n        border-radius: 50%;\n        transition: all .3s ease-out;\n    }\n    label:after{\n    }\n    &.right{\n        label{\n            @include rem(padding-left, 30px);\n        }\n    }\n    &.left{\n        label{\n            @include rem(padding-right, 30px);\n        }\n        label:before{\n            left:auto;\n            right:0;\n        }\n        label:after{\n            left:auto;\n            @include rem(right, 6px);\n        }\n    }\n    &.up{\n        label{\n            @include rem(padding-bottom, 25px);\n        }\n        label:before{\n            top:auto;\n            bottom:0;\n            left:50%;\n            @include rem(margin-left, -10px);\n            margin-top:0;\n        }\n        label:after{\n            top:auto;\n            @include rem(bottom, 6px);\n            left:50%;\n            @include rem(margin-left, -4px);\n            margin-top:0;\n        }\n    }\n    &.down{\n        label{\n            @include rem(padding-top, 25px);\n        }\n        label:before{\n            top:0;\n            left:50%;\n            @include rem(margin-left, -10px);\n            margin-top:0;\n        }\n        label:after{\n            @include rem(top, 6px);\n            left:50%;\n            @include rem(margin-left, -4px);\n            margin-top:0;\n        }\n    }\n    // 접근성 소스 필요시 아래 주석 해제\n    // input:hover,\n    // input:focus{\n    // \t& + label:before{\n    // \t\tbox-shadow: 0px 0px 2px 3px rgba(0,180,255,0.5);\n    // \t}\n    // }\n    // checked 됐을때 스타일 변화\n    input.checked,\n    input:checked{\n        & + label:before{\n            background-color:#409eff;\n            border-color:#409eff;\n        }\n        & + label:after{\n            content:'';\n            display:block;\n            position: absolute;\n            top: 50%;\n            background-color: #fff;\n            @include rem(left, 6px);\n            @include rem(width, 8px);\n            @include rem(height, 8px);\n            @include rem(margin-top, -4px);\n            border-radius: 50%;\n            transition: all .3s ease-out;\n        }\n    }\n    // disabled 됐을때 스타일 변화\n    input.disabled,\n    input:disabled{\n        & + label:before{\n            background-color:lightgray;\n            border-color:gray;\n        }\n        & + label:after{\n            background-color:#ffffff;\n        }\n    }\n}\n\n// ******************** code comments ********************\n// form - input text\n// ******************** code comments ********************\n/*! form - input text */\n.input-txt{\n    display:inline-block;position:relative;width:100%;\n    border:1px solid #cccccc;\n    background-color: #ffffff;\n    &.in-message {\n        @include rem(margin-bottom, 30px);\n    }\n    input{\n        display:inline-block;padding:0 0 0 15px; width:100%;font-size:12px;\n        height:38px;line-height:38px;border:none;\n        appearance: none;border-radius: 0;\n    }\n    // 에러 또는 성공 메세지 출력 관련 스타일\n    .message {\n        display: block;\n        @include rem(margin-top,3px);\n        @include rem(font-size, 12px);\n        &.pass {\n            color: blue;\n        }\n        &.error {\n            color: red;\n        }\n    }\n}\n.input-txt input:read-only{opacity:0.5;}\n\n// form - placeholder\n// Chrome, Firefox, Opera, Safari 10.1+\n.input-txt input::placeholder{\n    font-size:12px;color:gray;\n    background:transparent;\n    // 아래 속성은 Firefox 용\n    opacity: 1;\n}\n.input-txt input:-ms-input-placeholder{position:relative;top:1px;}\n.input-txt input::-ms-input-placeholder{position:relative;top:1px;}\n\n// ******************** code comments ********************\n// form - input date\n// ******************** code comments ********************\n// ******************** code comments ********************\n// form - select\n// ******************** code comments ********************\n/*! form - selectbox */\n.selectbox{\n    position:relative;z-index:0;display:inline-block;width:100%;\n    overflow:hidden;border:1px solid #e4e7ed;\n    border-radius: 4px;\n    &:after{\n        content:'';\n        display:block;\n        position:absolute;\n        top:50%;\n        @include rem(right, 22px);\n        @include rem(margin-top, -8px);\n        @include rem(width, 10px);\n        @include rem(height, 10px);\n        @include rem(border-top, 2px solid gray);\n        @include rem(border-right, 2px solid gray);\n        transform: rotate(135deg);\n    }\n    select{\n        cursor: pointer;\n        position: relative;\n        z-index: 1;\n        width:100%;\n        @include rem(padding, 0 0 0 20px);\n        @include rem(height, 40px);\n        @include rem(line-height, 40px);\n        @include rem(font-size, 14px);\n        color: #c0c4cc;\n        background-color:transparent;\n        border:none;appearance:none;\n        border-radius:0;\n    }\n    select::-ms-expand{display:none;}\n    select:disabled{\n        background-color:lightgray;\n        pointer-events: none;\n    }\n}\n\n// ******************** code comments ********************\n// form - file input\n// ******************** code comments ********************\n/*! 파일첨부 스타일 */\n.input-file-type01 {\n    position: relative;\n    @include rem(padding-right, 60px);\n\n    .input-file {\n        position: relative;\n        width: 100%;\n        @include rem(height, 50px);\n        z-index: 2;\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    .input-file-label {\n        display: block;\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n        cursor: pointer;\n        @include rem-calc(width, 100%, '-', 60px);\n        @include rem(padding, 15px 0 15px 20px);\n        border: 1px solid gray;\n        color: gray;\n        @include rem(font-size, 16px);\n        font-weight: 300;\n        transition: all .3s ease-out;\n\n        &:after {\n            content: '';\n            display: block;\n            @include rem(width, 50px);\n            @include rem(height, 50px);\n            position: absolute;\n            @include rem(top, -1px);\n            @include rem(right, -60px);\n            background: #f5f5f5 url('../images/common/ico_add_file.png') no-repeat center center;\n        }\n    }\n\n    .input-file {\n        &:hover + .input-file-label,\n        &:focus + .input-file-label {\n            border: 1px solid black;\n        }\n    }\n}\n\n.input-textarea{\n    textarea{\n        width: 100%;\n        height: 152px;\n        margin-top: 8px;\n        border-color: #e4e7ed;\n        border-radius: 4px;\n    }\n}\n","//$path_00: '/';\n//$path_01: '../';\n//$path_02: '../../';\n//$path_03: '../../../';\n//$path_04: '../../../../';\n//$path_05: '../../../../../';\n//$path_css: 'css/';\n//$path_js: 'js/';\n//$path_font: 'font/';\n//$path_images: 'images/';\n//$path_common: 'common/';\n//$path_html: 'html/';\n//$path_main: 'main/';\n//- 기본 경로 변수 세팅\n\n// ie10 ~ ie11 에만 적용되는 css 를 만들때 사용하는 미디어쿼리 소스\n//@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n//    // IE10+ CSS here\n//    .selectbox{\n//        // 텍스트 수직 중앙정렬을 위해서 ie10 ~ 11 속성 재정의\n//        select{\n//            padding:12px 0 10px 15px;\n//            height:auto;\n//        }\n//    }\n//}\n\n//- 변수 경로 사용하는 방법\n// background:url('#{$currentUrl}images/common/ko_bg_test01.jpg')\n\n\n// ******************** code comments ********************\n// 기본 변수 세팅\n// $global-background-color: #ffffff; - 기본 배경 컬러 설정\n// $global-font-color: #000000; - 기본 폰트 컬러 설정\n// $global-font-size: 10px !default; - 기본 폰트 크기 설정\n// ******************** code comments ********************\n$global-background-color: #ffffff;\n$global-font-color: #000000;\n$global-font-size: 10px !default;\n\n\n// ******************** code comments ********************\n// 언어별 설정 <html lang=\"\">\n// font-familu, line-height, word-break, word-wrap, letter-spacing\n// ******************** code comments ********************\n$global-font-family: (\n    'ko': ('Malgun Gothic', '맑은 고딕', Dotum, '돋움', arial, verdana, sans-serif),\n    'en': (Helvetica, Arial, sans-serif),\n    'ja': ('Meiryo', 'メイリオ', 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', sans-serif),\n    'zh': (Helvetica, Arial, 'Microsoft Yahei','微软雅黑', STXihei, '华文细黑', sans-serif)\n);\n$global-line-height: (\n    'ko': (1.15),\n    'en': (1.15),\n    'ja': (1.15),\n    'zh': (1.15)\n);\n$global-word-break: (\n    'ko': (keep-all),\n    'en': (break-all),\n    'ja': (break-all),\n    'zh': (break-all)\n);\n$global-word-wrap: (\n    'ko': (break-word),\n    'en': (break-word),\n    'ja': (break-word),\n    'zh': (break-word)\n);\n$global-letter-spacing: (\n    'ko': (0),\n    'en': (0),\n    'ja': (0),\n    'zh': (0)\n);\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// 폰트 굵기 참고용\n// Thin 100\n// Light 300\n// Regular 400\n// Medium 500\n// Bold 700\n// Black 900\n// 프로젝트내에서 사용되는 폰트 굵기를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// font size / line-height 참고\n// 24 / 36 - 1.5\n// 26 / 38 - 1.46\n// 28 / 40 - 1.42\n// 30 / 42 - 1.4\n// 32 / 44 - 1.375\n// 34 / 46 - 1.35\n// 42 / 54 - 1.28\n// 48 / 64 - 1.33\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// flex 사용 참고용\n// flex: 1 1 1; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본 값은 없음\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */\n// flex: 1 1 auto; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본값은 자동\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: auto; */\n// flex: 1 1 500px; - 500보다 늘어날 수 있고 500이하로 줄어 들 수 있음, 기본값은 500\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 500px; */\n\n// /* flex-grow: 0; */ /* 기본값 - flex-basis 이상으로 안 늘어남 */\n// /* flex-grow: 1; */ /* flex-basis 보다 늘어남 */\n// flex-shrink: 1; /* 기본값 - flex-basis 크기 보다 줄어듬 */\n// flex-shrink: 0; /* flex-basis 크기를 최소값으로 고정함 */\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// z-index 세팅 및 관리\n// 기본 z-index를 기준으로 +, - 하여 관리 한다\n// 변수명은 되도록 직관적으로 네이밍 한다\n// 프로젝트에서 사용되는 모든 z-index 값은 아래 정리 되어야 한다\n// 단, z-index:1, z-index:2 등의 10이하 단위들은 컨텐츠내 css 에서 관리한다\n// ******************** code comments ********************\n$base-z-index: 100; // 기본 z-index\n$mobile-mode-dimm-container: $base-z-index + 900; // 반응형 미지원 페이지 안내 컨텐츠 컨테이너 z-index 1000\n$popup-zindex: $base-z-index; // 팝업 z-index 100\n$global-dimm-zindex: $base-z-index - 10; // 딤드 영역 z-index 90\n\n\n// ******************** code comments ********************\n// 컬러값 변수 설정\n// 폰트컬러(color), 배경컬러(background-color), 라인컬러(border)으로 구분한다\n// 변수 네이밍에 컬러 코드 값을 사용하여 작성한다\n// 프로젝트 초반에 컬러값이 정리가 되지 않을 경우, 변수를 먼저 세팅하고 나중에 디자인팀에 현재 설정된 변수 컬러값을 전달하여 불필요한 컬러값들을 정리 하도록 한다\n// ******************** code comments ********************\n$font-333333: #333333;\n$bg-333333: #333333;\n$line-333333: #333333;\n\n\n// ******************** code comments ********************\n// box shadow 샘플\n// box-shadow: 8px 8px 8px 0 rgba(0,0,0,0.05);\n// PSD - box-shadow: 거리 거리 크기 스프레드 rgba(컬러,컬러,컬러,불투명도)\n// 박스 inset - 보더대신 서야 할 때\n// box-shadow: inset -1px 1px 0px 0px rgba(221,221,221,1);\n// 프로젝트내에서 사용하는 box shadow 를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// 공통 소스 인클루드 영역\n// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n//@import 'dev/_src/_scss/mixin';\n\n\n// ******************** code comments ********************\n// disabled 속성\n// ******************** code comments ********************\n@mixin ui-disabled(){\n    // disabled 속성 (모던 브라우저)\n    &.disabled{\n        opacity: 0.5;\n        pointer-events: none;\n        position: relative;\n        z-index: -1;\n        // disabled 속성 ie10 대응\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n            /* IE10+ CSS styles go here */\n            &:after{\n                content:'';\n                position: absolute;\n                width:100%;\n                height:100%;\n                top:0;left:0;\n                background:#ffffff;\n                opacity: 0;\n                z-index: 1;\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// 텍스트 말줄임\n// ******************** code comments ********************\n@mixin ellipsis($line: 1) { // 인자 값의 기본 값은 1\n    @if ($line == 1) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    } @else {\n        display: -webkit-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: $line;\n    }\n}\n\n\n// ******************** code comments ********************\n// 언어별 폰트 설정\n// /* 사용 예제 Languages */\n// @include languages();\n// ******************** code comments ********************\n@mixin languages() {\n    @each $type, $font-family in $global-font-family {\n        &:lang(#{$type}) {\n            font-family:$font-family;\n        }\n    }\n    @each $type, $line-height in $global-line-height {\n        &:lang(#{$type}) {\n            line-height:$line-height;\n        }\n    }\n    @each $type, $word-break in $global-word-break {\n        &:lang(#{$type}) {\n            word-break:$word-break;\n        }\n    }\n    @each $type, $word-wrap in $global-word-wrap {\n        &:lang(#{$type}) {\n            word-wrap:$word-wrap;\n        }\n    }\n    @each $type, $letter-spacing in $global-letter-spacing {\n        &:lang(#{$type}) {\n            letter-spacing:$letter-spacing;\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Computes a CSS calc function that betweens a value from\n// * A to B over viewport-width A to viewport-width B.\n// * Requires a media query to cap the value at B.\n// * vw 단위를 활용하여 미디어쿼리 분기의 중간 상태값을\n// * 계산해주는 SASS 함수.\n// * 간격이나 폰트사이즈에 적용하면 자연스러운\n// * 반응형 사이즈 처리가 가능 함.\n// * 참고사이트 http://dohoons.com/blog/1364\n// */\n// 소스 사용예제\n// @media (min-width: $small) {\n// \tpadding: between(16px, 32px, $small, $medium);\n// }\n// @media (min-width: $medium) {\n// \tpadding: between(32px, 90px, $medium, $large);\n// }\n// @media (min-width: $large) {\n// \tpadding: 90px;\n// }\n// ******************** code comments ********************\n$small: 400px;\n$large: 1000px;\n@function between($to, $from, $toWidth, $fromWidth) {\n    $slope: ($to - $from) / ($toWidth - $fromWidth);\n    $base: $from - $slope * $fromWidth;\n\n    @return calc(#{$base} + #{100vw * $slope});\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Read the article: http://sassbreak.com/viewport-relative-headings-with-sass\n// * px 를 vw 로 자동으로 바꿔 줌.\n// * max-breakpoint 를 설정하면 미디어쿼리 브레이크 포인트가 됨.\n// * 그래서 미디어쿼리 브레이크 포인트에 맞춰 px 가 vw 로 변환됨.\n// * 100% 보다 더 크게 적용 하고 싶으면 return 부분을 수정하면됨.\n// * 참고사이트 http://sassbreak.com/viewport-relative-headings-with-sass/\n// */\n// 예) width: get-vw(21px);\n// ******************** code comments ********************\n// Max breakpoint\n$max-breakpoint-main: 1400;\n$max-breakpoint-main-height: 720;\n\n// This could be one of your media query breakpoint variables\n$wide-screen: \"(min-width: #{$max-breakpoint-main}px)\";\n\n// Function\n@function get-vw($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vw; // 100=1, 140=1.4\n}\n\n@function get-vh($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main-height * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vh;\n}\n\n\n// 입력 받은 값의 숫자만 남겨놓고 단위 지우기\n// Remove the unit of a length\n// @param {Number} $number - Number to remove unit from\n// @return {Number} - Unitless number\n@function strip-unit($number) {\n    @if type-of($number) == 'number' and not unitless($number) {\n        @return $number / ($number * 0 + 1);\n    }\n\n    @return $number;\n}\n\n\n// ******************** code comments ********************\n// px를 rem 변환 (2021.03.22 버전) - 기존버전 보다 다양하게 활용할 수 있음 아래 url 참고 바람.\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n//\n// sass 기본 사용법\n// @include rem(font-size, 24px); // Simple\n// @include rem(padding, 5px 10px); // Multiple values\n// @include rem(border-bottom, 1px solid black); // Multiple mixed values\n// @include rem(box-shadow, 0 0 2px #ccc, inset 0 0 5px #eee); // Comma-separated values\n// // Multiple properties\n// @include rem((\n//     margin: 10px 5px,\n//     text-shadow: (1px 1px #eee, -1px -1px #eee) // Parentheses needed because of comma\n// ));\n//\n// css 출력\n// font-size: 24px;\n// font-size: 1.5rem;\n// padding: 5px 10px;\n// padding: 0.3125rem 0.625rem;\n// border-bottom: 1px solid black;\n// border-bottom: 0.0625rem solid black;\n// box-shadow: 0 0 2px #ccc, inset 0 0 5px #eee;\n// box-shadow: 0 0 0.125rem #ccc, inset 0 0 0.3125rem #eee;\n// margin: 10px 5px;\n// margin: 0.625rem 0.3125rem;\n// text-shadow: 1px 1px #eee, -1px -1px #eee;\n// text-shadow: 0.0625rem 0.0625rem #eee, -0.0625rem -0.0625rem #eee;\n//\n// rem line-height 사용법\n// 예) @include rem(font-size, 23px, 33);\n// 가이드) @include rem(font-size, 23px, psd line-height)\n//\n// libsass (v3.5.0.beta.2)\n// https://github.com/pierreburel/sass-rem\n// ******************** code comments ********************\n\n$rem-baseline: $global-font-size !default;\n$rem-fallback: true !default;\n// 하위브라우저 호환 맞춰야 할때 - false: rem만 출력, true: px,rem 둘다 출력\n$rem-px-only: false !default;\n// rem 변환이 필요 없을 때 - false: rem 변환 사용(기본), true: rem 변환 사용 안함(px출력)\n\n@function rem-separator($list, $separator: false) {\n    @if $separator == \"comma\" or $separator == \"space\" {\n        @return append($list, null, $separator);\n    }\n\n    @if function-exists(\"list-separator\") == true {\n        @return list-separator($list);\n    }\n\n    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n    $test-list: ();\n    @each $item in $list {\n        $test-list: append($test-list, $item, space);\n    }\n\n    @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n    font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n    $result: ();\n    $separator: rem-separator($values);\n\n    @each $value in $values {\n        @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\n        } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n            $result: append($result, $value / $rem-baseline + 0rem, $separator);\n        } @else if type-of($value) == \"list\" {\n            $value-separator: rem-separator($value);\n            $value: rem-convert($to, $value...);\n            $value: rem-separator($value, $value-separator);\n            $result: append($result, $value, $separator);\n        } @else {\n            $result: append($result, $value, $separator);\n        }\n    }\n\n    @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n    @if $rem-px-only {\n        @return rem-convert(px, $values...);\n    } @else {\n        @return rem-convert(rem, $values...);\n    }\n}\n\n@mixin rem($properties, $values...) {\n    @if type-of($properties) == \"map\" {\n        @each $property in map-keys($properties) {\n            @include rem($property, map-get($properties, $property));\n        }\n    } @else {\n        @each $property in $properties {\n            @if $rem-fallback or $rem-px-only {\n                #{$property}: rem-convert(px, $values...);\n            }\n            @if not $rem-px-only {\n                #{$property}: rem-convert(rem, $values...);\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// rem 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include rem-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// rem 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3rem);\n// 사용 예제)\n// @include rem-calc(width, 100%, '+', 2px);\n// @include rem-calc(width, 80%, '-', 1px);\n// @include rem-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin rem-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num} #{$sign} #{$calc-px});\n    $calc-rem: rem($calc-px);\n    #{$property}: calc(#{$num} #{$sign} #{$calc-rem});\n}\n\n\n// ******************** code comments ********************\n// px를 em 변환\n//\n// em 기본 사용법\n// @include em(height,51px);\n// @include em(padding, 0 15px);\n// font-size + line-height 사용법\n//\n// em line-height 사용법\n// 예) @include em(font-size, 23px, 33);\n// 가이드) @include em(font-size, 23px, psd line-height)\n//\n// em border 사용법\n// 예) @include em(border, 2px, solid blue);\n// 예) @include em(border-left, 20px, solid blue);\n//\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n// ******************** code comments ********************\n$baseFont : $global-font-size;\n@mixin em($target, $values, $line-height:0, $border-info...) {\n    $mixin-base-font-size: $baseFont ;\n    $px-values: ();\n    $em-values: ();\n\n    @each $value in $values {\n        @if $value == 0 or $value == 0px {\n            $px-values: join($px-values, 0);\n            $em-values: join($em-values, 0);\n        } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n            $new-em-value: $value / $mixin-base-font-size;\n            $px-values: join($px-values, round($value));\n            $em-values: join($em-values, #{$new-em-value}em);\n        } @else {\n            $px-values: join($px-values, round($value * $mixin-base-font-size));\n            $em-values: join($em-values, #{$value}em);\n        }\n    }\n    @if $target == 'font-size' {\n        @if $line-height == 0 {\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n        } @else{\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n            line-height: $line-height / strip-unit($values);\n        }\n    } @else if $target == 'border' & 'border-left' & 'border-right' & 'border-top' & 'border-bottom' {\n        #{$target}: $px-values $line-height $border-info;\n        #{$target}: $em-values $line-height $border-info;\n    } @else {\n        #{$target}: $px-values;\n        #{$target}: $em-values;\n    }\n}\n\n\n// ******************** code comments ********************\n// em 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include em-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// em 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3em);\n// 사용 예제)\n// @include em-calc(width, 100%, '+', 2px);\n// @include em-calc(width, 80%, '-', 1px);\n// @include em-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin em-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-px});\n    $calc-em: em($calc-px);\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-em});\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-position 값 설정\n// ******************** code comments ********************\n@mixin sprite-position-px($sprite) {\n    $sprite-offset-x: nth($sprite, 3);\n    $sprite-offset-y: nth($sprite, 4);\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-rem($sprite) {\n    $sprite-offset-x: rem(nth($sprite, 3));\n    $sprite-offset-y: rem(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-em($sprite) {\n    $sprite-offset-x: em(nth($sprite, 3));\n    $sprite-offset-y: em(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-vw($sprite) {\n    $sprite-offset-x: get-vw(nth($sprite, 3));\n    $sprite-offset-y: get-vw(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-size 값 설정\n// ******************** code comments ********************\n@mixin sprite-background-size-px($sprite) {\n    $sprite-size-width: nth($sprite, 7);\n    $sprite-size-height: nth($sprite, 8);\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-rem($sprite) {\n    $sprite-size-width: rem(nth($sprite, 7));\n    $sprite-size-height: rem(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-em($sprite) {\n    $sprite-size-width: em(nth($sprite, 7));\n    $sprite-size-height: em(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-vw($sprite) {\n    $sprite-size-width: get-vw(nth($sprite, 7));\n    $sprite-size-height: get-vw(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 width 값 설정\n// ******************** code comments ********************\n@mixin sprite-width-px($sprite) {\n    width: nth($sprite, 5);\n}\n@mixin sprite-width-rem($sprite) {\n    width: rem(nth($sprite, 5));\n}\n@mixin sprite-width-em($sprite) {\n    width: em(nth($sprite, 5));\n}\n@mixin sprite-width-vw($sprite) {\n    width: get-vw(nth($sprite, 5));\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 height 값 설정\n// ******************** code comments ********************\n@mixin sprite-height-px($sprite) {\n    height: nth($sprite, 6);\n}\n@mixin sprite-height-rem($sprite) {\n    height: rem(nth($sprite, 6));\n}\n@mixin sprite-height-em($sprite) {\n    height: em(nth($sprite, 6));\n}\n@mixin sprite-height-vw($sprite) {\n    height: get-vw(nth($sprite, 6));\n}\n\n\n// ******************** code comments ********************\n// pc px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 pc 버전\n// @include sprite-custom(rem, $pc-logo-pc-ko);\n// @include sprite-custom(em, $pc-logo-pc-ko);\n// @include sprite-custom(px, $pc-logo-pc-ko);\n// @include sprite-custom(vw, $pc-logo-pc-ko);\n// ******************** code comments ********************\n@mixin sprite-custom($unit, $sprite) {\n    @include sprite-image($sprite);\n\n    @if $unit == px{\n        @include sprite-position-px($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-background-size-px($sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($sprite);\n        @include sprite-position-rem($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-rem($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-rem($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-rem($sprite);\n    } @else if $unit == em {\n        @include sprite-position-px($sprite);\n        @include sprite-position-em($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-em($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-em($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-em($sprite);\n    } @else if $unit == vw {\n        @include sprite-position-vw($sprite);\n        @include sprite-width-vw($sprite);\n        @include sprite-height-vw($sprite);\n        @include sprite-background-size-vw($sprite);\n    }\n}\n\n\n// ******************** code comments ********************\n// mobile px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 mobile 버전\n// @include retina-sprite-custom(rem, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(em, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(px, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(vw, $mobile-logo-pc-ko-group);\n// ******************** code comments ********************\n@mixin retina-sprite-custom($unit, $retina-group) {\n    $normal-sprite: nth($retina-group, 2);\n    $retina-sprite: nth($retina-group, 3);\n    @include sprite-image($retina-sprite);\n    background-repeat: no-repeat;\n\n    @if $unit == px{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-rem($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-rem($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-rem($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-rem($normal-sprite);\n    } @else if $unit == em{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-em($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-em($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-em($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-em($normal-sprite);\n    } @else if $unit == vw{\n        @include sprite-position-vw($normal-sprite);\n        @include sprite-width-vw($normal-sprite);\n        @include sprite-height-vw($normal-sprite);\n        @include sprite-background-size-vw($normal-sprite);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// $title\n// ____________________________________________________________________________\n//\n//    SCSS Unit Conversion v.2.1.2\n//\n//\n//    Links:\n//    GitHub   https://github.com/jakob-e/unitconversion\n//    Codepen  https://codepen.io/jakob-e/pen/AHunv\n// ____________________________________________________________________________\n//\n//   Function               Input units\n//\n//   Absolute length\n//   px(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pt(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pc(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   in(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   mm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   cm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//\n//   Relative length\n//   em(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   rem(input);            px, pt, pc, in, mm, cm, em, rem, number\n//   ex(input);             ex, number\n//   ch(input);             ch, number\n//   vw(input);             vw, number\n//   vh(input);             vh, number\n//   vmin(input);           vmin, number\n//   vmax(input);           vmax, number\n//\n//   Angle\n//   deg(input);            deg, rad, grad, turn, number\n//   rad(input);            deg, rad, grad, turn, number\n//   grad(input);           deg, rad, grad, turn, number\n//   turn(input);           deg, rad, grad, turn, number\n//\n//   Resolution\n//   dpi(input);            dpi, dpcm, dppx, number\n//   dpcm(input);           dpi, dpcm, dppx, number\n//   dppx(input);           dpi, dpcm, dppx, number\n//\n//   Time\n//   s(input);              s, ms, number\n//   ms(input);             s, ms, number\n//\n//   Frequency\n//   hz(input);             hz, khz, number\n//   khz(input);            hz, khz, number\n//\n//   String\n//   str(input);            anything not null\n//\n//   Number, int and uint\n//   num(input);            px, pt, pc, in, mm, cm, em, rem, ex, ch,\n//                          vw, vh, vmin, vmax, deg, rad, grad, turn,\n//                          dpi, dpcm, dppx, s, ms, hz, khz, number\n//   int(input);            as number\n//   uint(input);           as number\n//\n//   ratio                  number to fraction\n//\n//   Aliases\n//   string(input);\n//   number(input);\n//\n// ____________________________________________________________________________\n\n// Base font size in pixel for converting em and rem to absolute lengths.\n$unit-base-font-size: $global-font-size;\n\n\n// Absolute lengths\n@function px($input){ @return to-unit(px, $input); }\n@function pt($input){ @return to-unit(pt, $input); }\n@function pc($input){ @return to-unit(pc, $input); }\n@function in($input){ @return to-unit(in, $input); }\n@function mm($input){ @return to-unit(mm, $input); }\n@function cm($input){ @return to-unit(cm, $input); }\n\n// Angles\n@function deg($input){ @return to-unit(deg, $input); }\n@function rad($input){ @return to-unit(rad, $input); }\n@function grad($input){ @return to-unit(grad, $input); }\n@function turn($input){ @return to-unit(turn, $input); }\n\n// Resolution\n@function dpi($input){ @return to-unit(dpi, $input); }\n@function dpcm($input){ @return to-unit(dpcm, $input); }\n@function dppx($input){ @return to-unit(dppx, $input); }\n\n// Time\n@function ms($input){ @return to-unit(ms, $input); }\n@function s($input){ @return to-unit(s, $input); }\n\n// Frequencies\n@function hz($input){ @return to-unit(hz, $input);}\n@function khz($input){ @return to-unit(khz, $input); }\n\n// Relative lengths\n@function em($input...){\n    $em: to-unit(em, nth($input,1));\n    // Adjust for compounds (visual size)\n    @if length($input) > 1 {\n        @for $i from 2 through length($input){\n            $em: $em / num(em(nth($input,$i)));\n        }\n    }\n    @return $em;\n}\n@function rem($input){ @return to-unit(rem, num(em($input))); }\n\n// Inconvertible relative lengths – depends on font\n@function ex($input){ @return to-unit(ex, $input); }\n@function ch($input){ @return to-unit(ch, $input); }\n\n// Viewport\n@function vw($input){ @return to-unit(vw, $input); }\n@function vh($input){ @return to-unit(vh, $input); }\n@function vmin($input){ @return to-unit(vmin, $input); }\n@function vmax($input){ @return to-unit(vmax, $input); }\n\n// Strings and numbers\n@function str($input){ @return #{$input};  }\n@function num($input){\n    @if type-of($input) != number {\n        @error 'Could not convert `#{$input}` - must be `type-of number`';\n        @return null;\n    }\n    @return $input/($input*0+1);\n}\n@function int($input){\n    $num: num($input);\n    @return if($num<0, ceil($num), floor($num));\n}\n@function uint($input){ @return abs(int($input)); }\n\n// Aliases\n@function string($input){ @return str($input);}\n@function number($input){ @return num($input);}\n\n\n// Conversion function\n@function to-unit($unit, $input){\n    // Test against valid CSS units\n    $to-unit: map-get((\n            px: 0px, pt: 0pt, pc: 0pc, in: 0in, mm: 0mm, cm: 0cm, // absolute length\n            em: 0em, rem: 0rem, ch: 0ch, ex: 0ex,                 // relative length - font based\n            vw: 0vw, vh: 0vh, vmin: 0vmin, vmax: 0vmax,           // relative length - viewport based\n            deg: 0deg, turn: 0turn, grad: 0grad, rad: 0rad,       // angle\n            s: 0s, ms: 0ms,                                       // time\n            hz: 0Hz, khz: 0kHz,                                   // frequency\n            dpi: 0dpi, dpcm: 0dpcm, dppx: 0dppx,                  // resolution\n            pct: 0%, percent: 0%, num: 0, number: 0               // percent or number\n    ), $unit);\n\n    // Error handling – wrong $unit\n    // Incomparable units are caught in convertion\n    @if not $to-unit {\n        @error 'Could not convert to `#{$unit}` – must be a valid CSS unit';\n        @return null;\n    }\n\n    // Number/incomparable conversion\n    @if index(num number ex ch vw vh vmin vmax, $unit) {\n        $value: num($input);\n    }\n\n    // EM/REM convertion using px as base\n    @if index(em rem, unit($input)) {\n        $input: 0px + num($input) * $unit-base-font-size/1px;\n    }\n    @if index(em rem, $unit) and not unitless($input) {\n        $input: 0px + $input;\n        $input: num($input) * 1px/$unit-base-font-size;\n    }\n\n    // Bug fix – resolution units seems to be flipped\n    @if index(dpi dpcm dppx, $unit){\n        $units: (dppx: 0dppx, dpcm: 0dpcm, dpi: 0dpi);\n        $input-unit: map-get($units, unit($input));\n        $input: if(1dppx < 95dpi,num($input-unit + (num($input) + $to-unit)),$input);\n    }\n\n    // Convert\n    @return $to-unit + $input;\n}\n\n//  Convert number to ratio (fraction)\n//  ratio(1.7777778) =>   16/9\n@function ratio($x, $y: null){\n    @if not $y {\n        $n: $x; $y: 1;\n        @while $y < 10 {\n            $x:  $n * 10 - ((10 - $y) * $n);\n            @if $x == round($x){ @return #{$x}/#{$y}; }\n            @else { $y: $y + 1; }\n        }\n        $x: round($n * 1000000); $y: 1000000;\n        @while $x % 10 == 0 { $x: $x/10; $y: $y/10; }\n        @while $x % 5 == 0 { $x: $x/5; $y: $y/5; }\n        @while $x % 2 == 0 { $x: $x/2; $y: $y/2; }\n        @return #{$x}/#{$y};\n    }\n    @else if $x == round($x) and $y == round($y){ @return #{$x}/#{$y}; }\n    @warn 'X and Y must be integers'; @return false;\n}\n\n\n\n@import 'dev/_src/_scss/_sprite/sprite_mobile';\n@import 'dev/_src/_scss/_sprite/sprite_pc';\n"]}