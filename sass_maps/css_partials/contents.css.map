{"version":3,"sources":["css_partials/contents.css","css_partials/contents.scss","_src/_scss/_setting.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACIhB,0BAAA;AAEA;EAAW,kBAAiB,EAAA;;AAC5B;EAAa,YAAW;EAAC,iBAAgB;EAAC,qBAAoB;EAAC,eAAc;EAAC,gBAAe,EAAA;;AAE7F,OAAA;AACA;EAAe,WAAU;EAAC,cAAa;EAAC,8BAAqB;UAArB,sBAAqB;EAAC,SAAQ;EAAC,yBAAwB;EAAC,eAAc;EAAC,gBAAe;EAAC,kBAAkB,EAAA;;AAGjJ;EAA0C,yBAAwB,EAAA;;AAClE;EAAuC,yBAAwB,EAAA;;AAC/D;EAAqC,yBAAwB,EAAA;;AAC7D;EAAsC,yBAAwB,EAAA;;AAC9D;EAAkC,yBAAwB,EAAA;;AAC1D;EACyB,mBAAkB;EAAC,qBAAoB;EAAC,WAAU,EAAA;;AAD3E;;EACyB,mBAAkB;EAAC,qBAAoB;EAAC,WAAU,EAAA;;AAC3E;EAAuB,kBAAiB,EAAA;;AAExC,UAAA;AACA;EAAY,aAAY;EAAC,eAAc;EAAC,MAAK;EAAC,OAAM;EAAC,gBAAe;EAAC,gBAAe;EAAC,WAAU;EAAC,YAAW;EAAC,aAAY;EAAC,+BAA0B,EAAA;;AACnJ;EAAa,cAAa;EAAC,WAAU;EAAC,YAAW;EAAC,mBAAmB,EAAA;;AACrE;EAAa,mBAAkB;EAAC,sBAAsB;EAAC,aAAY,EAAA;;AACnE;EAAW,gBAAe;EAAC,gBAAe;EAAC,kBAAiB;EAAC,cAAa;EAAC,8BAAqB;UAArB,sBAAqB,EAAA;;AAChG;EAAmB,aAAY,EAAA;;AAC/B;ECyYgB,oBDzY+B;EC4Y/B,wBD5Y+B,EAAA;;AAC/C;EAAW,eAAc;EAAC,gBAAe;EAAC,cAAa;EAAC,gBAAe,EAAA;;AACvE;EAAY,kBAAiB;EAAC,gBAAe;EAAC,gBAAe,EAAA;;AAC7D;EACC,kBAAiB,EAAA;EADlB;ICsYgB,gBDnYc;ICsYd,kBAjCkD,EAAA;IDxWlE;MCsYgB,eDjYc;MCoYd,iBAjCkD;MDlW/D,cACD,EAAA;EAPF;ICsYgB,eD5Xa;IC+Xb,iBAjCkD,EAAA;IDxWlE;MCsYgB,gBD3XyB;MC8XzB,kBAjCkD,EAAA;;AD1VlE;ECwXgB,gBDvXa;EC0Xb,kBAjCkD,EAAA;ED1VlE;ICwXgB,gBDtXqB;ICyXrB,kBAjCkD,EAAA;;ADtVlE;EAAqB,kBAAiB,EAAA;;AACtC;EAAqB,kBAAiB,EAAA;;AACtC;EAAqB,aAAY,EAAA;;AACjC;EAAgB,cAAa;EAAC,WAAU;EAAC,YAAW;EAAC,kBAAiB;EAAC,SAAQ;EAAC,WAAU,EAAA;;AAC1F;;EACsB,cAAa;EAAC,WAAU;EAAC,UAAS;EAAC,YAAW;EAAC,mBAAkB;EAAC,kBAAiB;EAAC,QAAO;EAAC,SAAQ;EAAC,sBAAqB;EAC5I,wBAAwB;EAAC,gCAAgC;EAAC,4BAA4B;EAAC,6BAA6B,EAAA;;AAIxH;EAAuB,gCAA+B;EAAC,wBAAuB;EAAC,6BAA4B;EAAC,4BAA2B,EAAA;;AACvI;EAAsB,iCAAgC;EAAC,yBAAwB;EAAC,8BAA6B;EAAC,6BAA4B,EAAA;;AAE1I;EAAY,6BAA4B;EAAC,cAAa;EAAC,eAAc;EAAC,kBAAiB;EAAC,YAAW;EAAC,cAAa,EAAA;;AACjH;EAAgB,aAAY,EAAA;;AAC5B;EAAsB,6BAA4B;EAAC,cAAa;EAAC,eAAc;EAAC,YAAW;EAAC,cAAa,EAAA;;AACzG;EAAU,qBAAoB;EAAC,yBAAwB;EAAE,oBAAmB;EAAC,eAAc;EAAC,kBAAiB;EAAC,mBAAkB;EAAC,oBAAmB;EAAC,aAAY,EAAA;;AACjK;EAAS,eAAc;EAAC,cAAa;EAAC,cAAa;EAAC,cAAa,EAAA;;AACjE;EAAgB,mBAAkB;EAAC,qBAAoB,EAAA;;AACvD;EAAyB,WAAU,EAAA;;AACnC;EAAU,kBAAiB;EAAC,gBAAe,EAAA;;AAC3C;EAAiB,cAAa;EAAC,WAAU;EAAC,WAAU;EAAC,YAAW;EAAC,6DAA4D;EAAC,mBAAkB,EAAA;;AAChJ;EAAa,eAAc;EAAC,cAAa;EAAC,gBAAe,EAAA;;AACzD;EAAa,eAAc;EAAC,cAAa;EAAC,gBAAe,EAAA;;AACzD;EAAiB,eAAc;EAAC,cAAa,EAAA;;AAC7C;EAAY,iBAAgB,EAAA;;AAC5B;EAAwB,mBAAkB,EAAA;;AAC1C;EAAqC,gBAAe,EAAA;;AACpD;EAAS,cAAa;EAAC,gBAAe;EAAC,eAAc;EAAC,mBAAkB;EAAC,gBAAe,EAAA;;AACxF;EAAgB,cAAa,EAAA;;AAE7B,eAAA;AAEA;EACC,uBAAuB,EAAA;;AAGxB,WAAA;AACA;EAAU,kBAAiB;EAAC,YAAW;EAAC,cAAa;EAAC,gBAAe,EAAA;;AACrE;EAAY,qBAAoB;EAAC,WAAU;EAAC,YAAW;EAAC,4BAA2B;EAAC,wBAAuB;EAAC,sBAAsB;EAAC,yBAAwB;EAAC,cAAa,EAAA;;AACzK;EAAqB,yDAAwD,EAAA;;AAC7E;EAAoB,wDAAuD,EAAA;;AAC3E;EAAoB,wDAAuD,EAAA;;AAC3E;EAAqB,yDAAwD,EAAA;;AAC7E;EAAa,qBAAoB;EAAC,eAAc,EAAA;;AAChD;EAAkB,qBAAoB;EAAC,aAAY,EAAA;;AAEnD;EAAiC,gBAAe;EAAC,cAAa;EAAC,eAAc;EAAC,gBAAe;EAAC,iBAAgB,EAAA;;AAC9G;EAAQ,qBAAoB;EAAC,WAAU;EAAC,cAAa;EAAC,YAAW;EAAC,iBAAgB;EAAC,mBAAkB;EAAC,kBAAiB;EAAC,sBAAsB;EAAC,eAAc;EAAC,cAAa;EAAC,8BAAqB;UAArB,sBAAqB,EAAA;;AAGjM,mBAAA;AACA;EAAO,qBAAoB;EAAC,kBAAiB;EAAC,YAAW;EAAC,cAAa,EAAA;;AACvE;EAAQ,gBAAe;EAAC,QAAO;EAAC,SAAQ;EAAC,YAAW;EAAC,UAAS;EAAC,gBAAgB;EAAE,qBAAqB;EAAE,YAAA;EAAc,wBAAwB;EAAE,sBAAA,EAAuB;;AACvK;EAAW,qBAAoB;EAAC,kBAAiB;EAAC,qBAAoB;EAAC,gBAAe;EAAC,eAAc;EAAC,cAAa;EAAC,gBAAe;EAAC,eAAc,EAAA;;AAClJ;EAAkB,cAAa;EAAC,WAAU;EAAC,WAAU;EAAC,YAAW;EAAC,kBAAiB;EAAC,MAAK;EAAC,OAAM;EAAC,4DAA2D,EAAA;;AAC5J;EAA+C,8DAA6D,EAAA;;AAC5G;EAAoC,4BAA2B,EAAA;;AAC/D;EAAqC,wBAAuB,EAAA;;AAC5D;EAA8B,WAAU,EAAA;;AACxC;EAAe,YAAW;EAAC,cAAa;EAAC,WAAU;EAAC,YAAW,EAAA;;AAC/D;EAA0B,UAAS;EAAC,WAAU;EAAC,YAAW;EAAC,aAAY;EAAC,YAAW;EAAC,cAAa,EAAA;;AACjG;EAAc,aAAY;EAAC,cAAa;EAAC,eAAc;EAAC,gBAAe;EAAC,gBAAe;EAAC,iBAAgB,EAAA;;AACxG;EAAoB,eAAc,EAAA;;AAClC;EAAe,qBAAoB,EAAA;;AAEnC,WAAA;AACA;EAAU,qBAAoB;EAAC,eAAc;EAAC,cAAa;EAAC,cAAa;EAAC,mBAAmB;EAAC,yBAAwB;EAAC,sBAAsB;EAAC,iBAAgB;EAAC,oBAAmB,EAAA;;AAClL;EAAU,qBAAoB;EAAC,eAAc;EAAC,sBAAsB;EAAC,yBAAwB;EAAC,iBAAgB;EAAC,YAAW;EAAC,mBAAmB;EAAC,eAAc;EAAC,yBAAwB;EAAC,8BAAqB;UAArB,sBAAqB;EAAC,WAAU;EAAC,kBAAiB,EAAA;;AACzO;EAAiB,mBAAkB;EAAC,qBAAoB,EAAA;;AACxD;EAAiB,mBAAkB;EAAC,qBAAoB,EAAA;;AACxD;EAAiB,mBAAkB;EAAC,qBAAoB;EAAC,cAAa,EAAA;;AAEtE;EAAgB,gBAAe;EAAC,qBAAoB;EAAC,cAAa,EAAA;;AAClE;EAAiB,gBAAe;EAAC,qBAAoB;EAAC,cAAa,EAAA;;AACnE;EAAiB,gBAAe;EAAC,qBAAoB;EAAC,cAAa,EAAA;;AACnE;EAAiB,gBAAe;EAAC,qBAAoB;EAAC,cAAa,EAAA;;AACnE;EAAe,kBAAiB,EAAA;;AAEhC;EAAgB,iBAAgB;EAAC,YAAW;EAAC,eAAc,EAAA;;AAC3D;EAAiB,iBAAgB;EAAC,YAAW;EAAC,cAAa;EAAC,eAAc,EAAA;;AAE1E;EAAqB,kBAAiB;EAAC,6BAA4B;EAAC,mBAAkB,EAAA;;AACtF;EAAa,cAAa;EAAC,WAAU;EAAC,YAAW;EAAC,cAAa,EAAA;;AAC/D;EAAa,mBAAkB,EAAA;;AAC/B;EAAmB,cAAa;EAAC,WAAU;EAAC,WAAU,EAAA;;AAEtD;EAAiB,kBAAiB,EAAA;;AAClC;EAA8B,eAAc,EAAA;;AAC5C;EAAwB,iBAAgB,EAAA;;AACxC;EAAwB,mBAAkB,EAAA;;AAC1C;EAA2B,gBAAe,EAAA;;AAC1C;EAAY,eAAc;EAAC,cAAa;EAAC,mBAAkB;EAAC,yBAAwB;EAAC,oBAAmB;EAAC,uBAAsB;EAAC,gBAAe;EAAC,qBAAoB;EAAC,kBAAiB;EAAC,cAAa,EAAA;;AACpM;EAAkB,gBAAe,EAAA;;AACjC;EAAkB,mBAAkB;EAAC,WAAU;EAAC,qBAAoB,EAAA;;AAEpE,aAAA;AACA;EAAa,cAAa;EAAC,WAAU,EAAA;;AACrC;EAAW,kBAAiB,EAAA;;AAC5B;EAAa,oBAAmB,EAAA;;AAChC;EAAqC,iBAAgB,EAAA;;AACrD;EAAqB,UAAS;EAAC,sBAAqB,EAAA;;AAGpD;EAAS,qBAAoB;EAAC,eAAc;EAAC,cAAa;EAAC,gBAAe;EAAC,mBAAmB,EAAA;;AAC9F;EAAS,cAAa;EAAC,WAAU,EAAA;;AACjC;EAAS,mBAAkB;EAAC,sBAAsB,EAAA;;AAElD;EAAoB,iBAAgB,EAAA;;AACpC;EAAwC,mBAAkB,EAAA;;AAC1D;EAAU,kBAAiB;EAAC,eAAc;EAAC,cAAa;EAAC,mBAAkB,EAAA;;AAC3E;EAAa,gBAAe,EAAA;;AAC5B;EAAmB,gBAAe,EAAA;;AAClC;EACC,cAAa;EACb,eAAc;EACd,WAAU;EACV,gBAAe;EACf,kBAAiB;EACjB,uBAAsB;EACtB,mBAAmB;EACnB,mBAAkB,EAAA;EARnB;IASW,mBAAmB,EAAA;EAT9B;IAUe,eAAe;IAAC,mBAAmB,EAAA;;AAElD;EAAe,iBAAgB;EAAC,gBAAe,EAAA;;AAC/C;EAAqB,gBAAe,EAAA;;AACpC;EACC,kBAAkB;EAClB,qBAAoB;EACpB,eAAc;EACd,cAAa,EAAA;EAJd;IAKoB,mBAAmB;IAAE,kBAAkB,EAAA;EAL3D;IAOE,WAAW;IACX,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,cAAc;IACd,UAAU;IACV,YAAY;IACZ,cAAc;IACd,mBAAmB,EAAA;;AAIrB,UAAA;AACA;EAAY,6BAA4B,EAAA;;AAExC;EAAU,WAAU,EAAA;;AACpB;;EACmB,kBAAiB;EAAC,eAAc;EAAC,uBAAsB,EAAA;;AAC1E;;EACuB,YAAW;EAAC,cAAa;EAAC,UAAS,EAAA;;AAC1D;EAAoB,UAAS,EAAA;;AAC7B;EAAmB,6BAA4B;EAAC,cAAa,EAAA;;AAC7D;EAAmB,gCAA+B;EAAC,cAAa,EAAA;;AAChE;EAAwC,mBAAkB,EAAA;;AAC1D;EAA6B,2BAA0B,EAAA;;AACvD;EAA6B,mBAAkB,EAAA;;AAC/C;EAAyB,cAAa,EAAA;;AACtC;EAA2B,cAAa,EAAA;;AAKxC;EAA2B,YAAW;EAAC,cAAa,EAAA;;AACpD;EAAQ,yBAAwB,EAAA;;AAChC;EAAW,qBAAoB;EAAC,cAAa;EAAC,kBAAiB;EAAC,gBAAe,EAAA;;AAC/E;EAAY,qBAAoB;EAAC,cAAa;EAAC,kBAAiB;EAAC,gBAAe,EAAA;;AAChF;EAAqB,mBAAkB;EAAC,eAAc,EAAA;;AACtD;EAA2B,cAAa;EAAC,WAAU;EAAC,WAAU;EAAC,YAAW;EAAC,mEAAkE;EAAC,kBAAiB;EAAC,QAAO;EAAC,QAAO,EAAA;;AAC/K;EAAmC,4BAA2B,EAAA;;AAC9D;EAAqC,4BAA2B,EAAA;;AAEhE;EAAoB,UAAS;EAAC,eAAe,EAAA;;AAC7C;EAA0B,aAAY,EAAA;;AAGtC,qBAAA","file":"../../dev/css_partials/contents.css","sourcesContent":["@charset \"UTF-8\";\n/*! pc & tablet 버전 - css */\n.gbutton_w {\n  padding: 0 0 100px; }\n\n.gbutton_w a {\n  height: 50px;\n  line-height: 50px;\n  display: inline-block;\n  padding: 0 20px;\n  background: #ddd; }\n\n/* 공통 */\ninput.form_int {\n  width: 100%;\n  line-height: 1;\n  box-sizing: border-box;\n  border: 0;\n  border: 1px solid #bbbbbb;\n  font-size: 14px;\n  min-height: 56px;\n  padding: 19px 24px; }\n\ninput.form_int::-webkit-input-placeholder {\n  color: #999999 !important; }\n\ninput.form_int::-moz-input-placeholder {\n  color: #999999 !important; }\n\ninput.form_int:-ms-input-placeholder {\n  color: #999999 !important; }\n\ninput.form_int::-ms-input-placeholder {\n  color: #999999 !important; }\n\ninput.form_int::input-placeholder {\n  color: #999999 !important; }\n\ninput.form_int:disabled,\ninput.form_int:read-only {\n  background: #f8f8f8;\n  border-color: #d4d4d4;\n  opacity: .5; }\n\ninput.form_int.fatype2 {\n  text-align: center; }\n\n/* 레이어팝업 */\n.dimlayer_z {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.75); }\n\n.dimlayer_tb {\n  display: table;\n  width: 100%;\n  height: 100%;\n  table-layout: fixed; }\n\n.dimlayer_td {\n  display: table-cell;\n  vertical-align: middle;\n  padding: 30px; }\n\n.layer_box {\n  max-width: 500px;\n  background: #fff;\n  position: relative;\n  margin: 0 auto;\n  box-sizing: border-box; }\n\n.layer_box.sztype2 {\n  width: 1020px; }\n\n.layer_tit_low {\n  padding: 12px 16px 0;\n  padding: 1.2rem 1.6rem 0; }\n\n.layer_tit {\n  font-size: 15px;\n  line-height: 1.3;\n  color: #303103;\n  text-align: left; }\n\n.layer_cont {\n  position: relative;\n  overflow: hidden;\n  overflow-y: auto; }\n\n.layer_cont_in {\n  padding: 50px 20px; }\n  .layer_cont_in .content-txt {\n    margin-top: 18px;\n    margin-top: 1.8rem; }\n    .layer_cont_in .content-txt .txt {\n      font-size: 14px;\n      font-size: 1.4rem;\n      color: #909399; }\n  .layer_cont_in.form-group {\n    padding: 0 16px;\n    padding: 0 1.6rem; }\n    .layer_cont_in.form-group .input-txt {\n      margin-top: 16px;\n      margin-top: 1.6rem; }\n\n.layer_box .btn-group {\n  margin-top: 32px;\n  margin-top: 3.2rem; }\n  .layer_box .btn-group.mt-25 {\n    margin-top: 25px;\n    margin-top: 2.5rem; }\n\n.layer_cont_in.type2 {\n  padding: 20px 30px; }\n\n.layer_cont_in.type4 {\n  padding: 30px 30px; }\n\n.layer_cont_in.type3 {\n  padding: 20px; }\n\n.btn_layerclose {\n  display: block;\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  top: 10px;\n  right: 20px; }\n\n.btn_layerclose:before,\n.btn_layerclose:after {\n  display: block;\n  content: '';\n  width: 1px;\n  height: 20px;\n  background: #646464;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -10px 0 0 -1px;\n  transform: translateZ(0);\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  -moz-transform: translateZ(0); }\n\n.btn_layerclose:before {\n  -webkit-transform: rotate(45deg);\n  transform: rotate(45deg);\n  -moz-transform: rotate(45deg);\n  -ms-transform: rotate(45deg); }\n\n.btn_layerclose:after {\n  -webkit-transform: rotate(-45deg);\n  transform: rotate(-45deg);\n  -moz-transform: rotate(-45deg);\n  -ms-transform: rotate(-45deg); }\n\n.btn_lysm_w {\n  border-top: 1px solid #d4d4d4;\n  margin: 0 20px;\n  padding: 20px 0;\n  text-align: center;\n  font-size: 0;\n  line-height: 0; }\n\n.btn_lysm_w > * {\n  margin: 0 3px; }\n\n.btn_both_tb_w.lysm_w {\n  border-top: 1px solid #d4d4d4;\n  margin: 0 20px;\n  padding: 20px 0;\n  font-size: 0;\n  line-height: 0; }\n\n.btn_lysm {\n  display: inline-block;\n  border: 1px solid #828282;\n  border-radius: 100px;\n  min-width: 98px;\n  padding: 12px 25px;\n  background: #fafafa;\n  border-radius: 100px;\n  margin: 0 3px; }\n\n.lysm_in {\n  font-size: 15px;\n  color: #1b1b1b;\n  line-height: 1;\n  display: block; }\n\n.btn_lysm.type2 {\n  background: #511bb4;\n  border-color: #511bb4; }\n\n.btn_lysm.type2 .lysm_in {\n  color: #fff; }\n\n.lyment_w {\n  text-align: center;\n  line-height: 1.4; }\n\n.lyment_w:before {\n  display: block;\n  content: '';\n  width: 38px;\n  height: 38px;\n  background: url(\"../images/admin/ico_warn.png\") no-repeat 0 0;\n  margin: 0 auto 20px; }\n\n.lyment_main {\n  font-size: 14px;\n  color: #000000;\n  line-height: 1.3; }\n\n.lyment_csym {\n  font-size: 12px;\n  color: #a675fe;\n  margin-top: 10px; }\n\n.lyment_para_nor {\n  font-size: 14px;\n  color: #1b1b1b; }\n\n.lyc_form_w {\n  min-height: 150px; }\n\n.lyc_form_w > .form_int {\n  margin-bottom: 10px; }\n\n.lyc_form_w > .form_int:last-of-type {\n  margin-bottom: 0; }\n\n.lcyment {\n  color: #a675fe;\n  text-align: left;\n  font-size: 12px;\n  margin: 20px 20px 0;\n  line-height: 1.5; }\n\n.lcyment.ctype2 {\n  color: #1b1b1b; }\n\n/* 팝업 딤 없는 버전 */\n.dimlayer_z.type02 {\n  background: transparent; }\n\n/* paging */\n.paging_w {\n  text-align: center;\n  font-size: 0;\n  line-height: 0;\n  margin-top: 40px; }\n\n.pn_control {\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  background-repeat: no-repeat;\n  background-position: 0 0;\n  vertical-align: middle;\n  border: 1px solid #848484;\n  margin: 0 -1px; }\n\n.pn_control.pn_prev2 {\n  background-image: url(\"../images/admin/btn_pn_prev2.png\"); }\n\n.pn_control.pn_prev {\n  background-image: url(\"../images/admin/btn_pn_prev.png\"); }\n\n.pn_control.pn_next {\n  background-image: url(\"../images/admin/btn_pn_next.png\"); }\n\n.pn_control.pn_next2 {\n  background-image: url(\"../images/admin/btn_pn_next2.png\"); }\n\n.pn_num_list {\n  display: inline-block;\n  padding: 0 22px; }\n\n.pn_num_list > li {\n  display: inline-block;\n  margin: 0 4px; }\n\n.pn_num_list > li.active .pn_num {\n  background: #fff;\n  color: #409eff;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 21px; }\n\n.pn_num {\n  display: inline-block;\n  width: 21px;\n  color: #6d6c6c;\n  height: 21px;\n  line-height: 21px;\n  border-radius: 100%;\n  text-align: center;\n  vertical-align: middle;\n  font-size: 12px;\n  color: #6d6c6c;\n  box-sizing: border-box; }\n\n/* radio checkbox */\n.fitem {\n  display: inline-block;\n  position: relative;\n  font-size: 0;\n  line-height: 0; }\n\n.frdchk {\n  overflow: hidden;\n  width: 0;\n  height: 0;\n  font-size: 0;\n  opacity: 0;\n  appearance: none;\n  -moz-appearance: none;\n  /* Firefox */\n  -webkit-appearance: none;\n  /* Safari and Chrome */ }\n\n.fitem_lab {\n  display: inline-block;\n  position: relative;\n  padding: 2px 0 0 22px;\n  min-height: 15px;\n  font-size: 12px;\n  color: #444444;\n  line-height: 1.3;\n  cursor: pointer; }\n\n.fitem_lab:before {\n  display: block;\n  content: '';\n  width: 17px;\n  height: 17px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: url(\"../images/admin/ico_chk.png\") no-repeat 0 0; }\n\ninput[type=\"radio\"].frdchk + .fitem_lab:before {\n  background-image: url(\"../images/admin/ico_rd.png\") !important; }\n\n.frdchk:checked + .fitem_lab:before {\n  background-position: 0 -17px; }\n\n.frdchk:disabled + .fitem_lab:before {\n  background-position: 0 0; }\n\n.frdchk:disabled + .fitem_lab {\n  opacity: .5; }\n\n.fitem.oneitem {\n  font-size: 0;\n  line-height: 0;\n  width: 17px;\n  height: 17px; }\n\n.fitem.oneitem .fitem_lab {\n  padding: 0;\n  width: 17px;\n  height: 17px;\n  min-height: 0;\n  font-size: 0;\n  line-height: 0; }\n\n.infwarn_para {\n  margin-top: 0;\n  color: #ff0000;\n  font-size: 12px;\n  line-height: 1.3;\n  margin-top: -5px;\n  text-align: right; }\n\n.infwarn_para.type2 {\n  margin-top: 5px; }\n\n.form_int.warn {\n  border-color: #ff0000; }\n\n/* button */\n.btn_cbox {\n  display: inline-block;\n  font-size: 14px;\n  color: #515151;\n  line-height: 1;\n  white-space: nowrap;\n  border: 1px solid #b4b4b4;\n  vertical-align: middle;\n  padding: 7px 15px;\n  border-radius: 100px; }\n\n.btn_ctxt {\n  display: inline-block;\n  font-size: 12px;\n  vertical-align: middle;\n  border: 1px solid #a675fe;\n  line-height: 38px;\n  height: 38px;\n  white-space: nowrap;\n  padding: 0 20px;\n  background-color: #a675fe;\n  box-sizing: border-box;\n  color: #fff;\n  border-radius: 2px; }\n\n.btn_ctxt.dtype2 {\n  background: #dd4b39;\n  border-color: #dd4b39; }\n\n.btn_ctxt.dtype3 {\n  background: #13d5aa;\n  border-color: #13d5aa; }\n\n.btn_ctxt.dtype4 {\n  background: #f1f1f1;\n  border-color: #bbbbbb;\n  color: #6b6b6b; }\n\n.btn_ctxt.ltype {\n  background: #fff;\n  border-color: #a675fe;\n  color: #a675fe; }\n\n.btn_ctxt.ltype2 {\n  background: #fff;\n  border-color: #dd4b39;\n  color: #dd4b39; }\n\n.btn_ctxt.ltype3 {\n  background: #fff;\n  border-color: #13d5aa;\n  color: #0bcaa0; }\n\n.btn_ctxt.ltype4 {\n  background: #fff;\n  border-color: #bbbbbb;\n  color: #525252; }\n\n.btn_ctxt span {\n  position: relative; }\n\n.btn_ctxt.small {\n  line-height: 29px;\n  height: 28px;\n  padding: 0 15px; }\n\n.btn_ctxt.xsmall {\n  line-height: 18px;\n  height: 19px;\n  padding: 0 5px;\n  font-size: 10px; }\n\n.btn_both_tb_w.type2 {\n  margin: 50px 0 0 0;\n  border-top: 1px solid #e4e4e4;\n  padding: 30px 0 0 0; }\n\n.btn_both_tb {\n  display: table;\n  width: 100%;\n  font-size: 0;\n  line-height: 0; }\n\n.btn_both_td {\n  display: table-cell; }\n\n.btn_both_td:after {\n  display: block;\n  content: '';\n  clear: both; }\n\n.btn_both_td > * {\n  margin-right: 10px; }\n\n.btn_both_td > *:last-of-type {\n  margin-right: 0; }\n\n.btn_both_td.both_right {\n  text-align: right; }\n\n.btn_both_tb_w.btop_pos {\n  margin-bottom: 15px; }\n\n.btn_both_tb_w.formbot_pos {\n  margin-top: 25px; }\n\n.btn_cbotxt {\n  font-size: 16px;\n  color: #1b1b1b;\n  background: #fafafa;\n  border: 1px solid #828282;\n  border-radius: 100px;\n  padding: 14px 20px 13px;\n  min-width: 130px;\n  display: inline-block;\n  text-align: center;\n  line-height: 1; }\n\nbutton.btn_cbotxt {\n  min-width: 152px; }\n\n.btn_cbotxt.type2 {\n  background: #511bb4;\n  color: #fff;\n  border-color: #511bb4; }\n\n/* login ui */\n.cform_field {\n  display: table;\n  width: 100%; }\n\n.cform_ftr {\n  display: table-row; }\n\n.cform_fcell {\n  padding-bottom: 25px; }\n\n.cform_ftr:last-of-type .cform_fcell {\n  padding-bottom: 0; }\n\n.cform_fcell.has_lab {\n  width: 1px;\n  padding: 11px 15px 0 0; }\n\n.cfc_lab {\n  display: inline-block;\n  font-size: 14px;\n  color: #1b1b1b;\n  line-height: 1.3;\n  white-space: nowrap; }\n\n.cfin_tb {\n  display: table;\n  width: 100%; }\n\n.cfin_td {\n  display: table-cell;\n  vertical-align: middle; }\n\n.cfin_td.cfin_right {\n  text-align: right; }\n\n.cform_field.type2 .cform_fcell.has_lab {\n  padding-right: 20px; }\n\n.cft_ment {\n  text-align: center;\n  font-size: 14px;\n  color: #000000;\n  margin-bottom: 55px; }\n\n.btn_cfmsm_w {\n  margin-top: 25px; }\n\n.btn_cfmsm_w.type2 {\n  margin-top: 55px; }\n\n.btn_cfmsm {\n  display: block;\n  font-size: 14px;\n  color: #fff;\n  min-height: 56px;\n  text-align: center;\n  padding: 21px 30px 19px;\n  white-space: nowrap;\n  background: #8d4dff; }\n  .btn_cfmsm.btn-web {\n    background: #2883c5; }\n  .btn_cfmsm.btn-certifi {\n    margin-top: 8px;\n    background: #283356; }\n\n.btn_cfmelse_w {\n  text-align: right;\n  margin-top: 20px; }\n\n.btn_cfmelse_w.type2 {\n  text-align: left; }\n\n.btn_cfmelse {\n  position: relative;\n  display: inline-block;\n  font-size: 14px;\n  color: #515151; }\n  .btn_cfmelse:not(:last-child) {\n    padding-right: 20px;\n    margin-right: 10px; }\n  .btn_cfmelse:not(:last-child)::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: -5px;\n    display: block;\n    width: 1px;\n    height: 100%;\n    margin: 0 10px;\n    background: #606060; }\n\n/* table */\n.data_htb_w {\n  border-top: 1px solid #000000; }\n\n.data_htb {\n  width: 100%; }\n\n.data_htb thead th,\n.data_htb tbody td {\n  text-align: center;\n  font-size: 12px;\n  padding: 20px 10px 17px; }\n\n.data_htb th.has_notxt,\n.data_htb td.has_notxt {\n  font-size: 0;\n  line-height: 0;\n  padding: 0; }\n\n.data_htb td.ptype2 {\n  padding: 0; }\n\n.data_htb thead th {\n  border-bottom: 1px solid #000;\n  color: #2b2b2b; }\n\n.data_htb tbody td {\n  border-bottom: 1px solid #d9d9d9;\n  color: #4e4e4e; }\n\n.data_htb tbody tr:nth-of-type(even) td {\n  background: #fdfdfd; }\n\n.data_htb tbody td.nodata_td {\n  background: none !important; }\n\n.data_htb tbody tr.active td {\n  background: #fafffe; }\n\n.data_htb tbody tr.type2 {\n  color: #999999; }\n\n.data_htb tbody tr.type2 * {\n  color: #999999; }\n\n.data_htb tbody td.has_ico {\n  font-size: 0;\n  line-height: 0; }\n\n.txtsym {\n  color: #511bb4 !important; }\n\n.dt_thwpsp {\n  display: inline-block;\n  color: #2b2b2b;\n  position: relative;\n  line-height: 1.3; }\n\n.data_ctext {\n  display: inline-block;\n  color: #4e4e4e;\n  position: relative;\n  line-height: 1.3; }\n\n.has_sort .dt_thwpsp {\n  padding: 0 15px 0 0;\n  cursor: pointer; }\n\n.has_sort .dt_thwpsp:after {\n  display: block;\n  content: '';\n  width: 12px;\n  height: 12px;\n  background: url(\"../images/admin/ico_sort_allow.png\") no-repeat 0 0;\n  position: absolute;\n  top: 1px;\n  right: 0; }\n\n.has_sort.sort_up .dt_thwpsp:after {\n  background-position: 0 -24px; }\n\n.has_sort.sort_down .dt_thwpsp:after {\n  background-position: 0 -12px; }\n\n.no_sort .dt_thwpsp {\n  padding: 0;\n  cursor: default; }\n\n.no_sort .dt_thwpsp:after {\n  display: none; }\n\n/*! mobile 버전 - css */\n","@charset \"utf-8\";\n\n@import 'dev/_src/_scss/_setting';\n\n/*! pc & tablet 버전 - css */\n\n.gbutton_w{padding:0 0 100px;}\n.gbutton_w a{height:50px;line-height:50px;display:inline-block;padding:0 20px;background:#ddd;}\n\n/* 공통 */\ninput.form_int{width:100%;line-height:1;box-sizing:border-box;border:0;border:1px solid #bbbbbb;font-size:14px;min-height:56px;padding: 19px 24px;}\ninput.form_int.sm{}\ninput.form_int:focus{}\ninput.form_int::-webkit-input-placeholder{color:#999999 !important;}\ninput.form_int::-moz-input-placeholder{color:#999999 !important;}\ninput.form_int:-ms-input-placeholder{color:#999999 !important;}\ninput.form_int::-ms-input-placeholder{color:#999999 !important;}\ninput.form_int::input-placeholder{color:#999999 !important;}\ninput.form_int:disabled,\ninput.form_int:read-only{background:#f8f8f8;border-color:#d4d4d4;opacity:.5;}\ninput.form_int.fatype2{text-align:center;}\n\n/* 레이어팝업 */\n.dimlayer_z{display:none;position:fixed;top:0;left:0;overflow:hidden;overflow-y:auto;width:100%;height:100%;z-index:1000;background:rgba(0,0,0,.75);}\n.dimlayer_tb{display:table;width:100%;height:100%;table-layout: fixed;}\n.dimlayer_td{display:table-cell;vertical-align: middle;padding:30px;}\n.layer_box{max-width:500px;background:#fff;position:relative;margin:0 auto;box-sizing:border-box;}\n.layer_box.sztype2{width:1020px;}\n.layer_tit_low{@include rem(padding,12px 16px 0);}\n.layer_tit{font-size:15px;line-height:1.3;color:#303103;text-align:left;}\n.layer_cont{position:relative;overflow:hidden;overflow-y:auto;}\n.layer_cont_in{\n\tpadding:50px 20px;\n\t.content-txt{\n\t\t@include rem(margin-top,18px);\n\t\t.txt{\n\t\t\t@include rem(font-size,14px);\n\t\t\tcolor: #909399\n\t\t}\n\t}\n\t&.form-group{\n\t\t@include rem(padding,0 16px);\n\t\t.input-txt{@include rem(margin-top,16px);}\n\t}\n}\n.layer_box .btn-group{\n\t@include rem(margin-top,32px);\n\t&.mt-25{@include rem(margin-top,25px);}\n}\n.layer_cont_in.type2{padding:20px 30px;}\n.layer_cont_in.type4{padding:30px 30px;}\n.layer_cont_in.type3{padding:20px;}\n.btn_layerclose{display:block;width:30px;height:30px;position:absolute;top:10px;right:20px;}\n.btn_layerclose:before,\n.btn_layerclose:after{display:block;content:'';width:1px;height:20px;background:#646464;position:absolute;top:50%;left:50%;margin:-10px 0 0 -1px;\n    transform: translateZ(0);-webkit-transform: translateZ(0);-ms-transform: translateZ(0);-moz-transform: translateZ(0);\n}\n\n\n.btn_layerclose:before{-webkit-transform:rotate(45deg);transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);}\n.btn_layerclose:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);}\n\n.btn_lysm_w{border-top:1px solid #d4d4d4;margin:0 20px;padding:20px 0;text-align:center;font-size:0;line-height:0;}\n.btn_lysm_w > *{margin:0 3px;}\n.btn_both_tb_w.lysm_w{border-top:1px solid #d4d4d4;margin:0 20px;padding:20px 0;font-size:0;line-height:0;}\n.btn_lysm{display:inline-block;border:1px solid #828282; border-radius:100px;min-width:98px;padding:12px 25px;background:#fafafa;border-radius:100px;margin:0 3px;}\n.lysm_in{font-size:15px;color:#1b1b1b;line-height:1;display:block;}\n.btn_lysm.type2{background:#511bb4;border-color:#511bb4;}\n.btn_lysm.type2 .lysm_in{color:#fff;}\n.lyment_w{text-align:center;line-height:1.4;}\n.lyment_w:before{display:block;content:'';width:38px;height:38px;background:url(\"../images/admin/ico_warn.png\") no-repeat 0 0;margin:0 auto 20px;}\n.lyment_main{font-size:14px;color:#000000;line-height:1.3;}\n.lyment_csym{font-size:12px;color:#a675fe;margin-top:10px;}\n.lyment_para_nor{font-size:14px;color:#1b1b1b;}\n.lyc_form_w{min-height:150px;}\n.lyc_form_w > .form_int{margin-bottom:10px;}\n.lyc_form_w > .form_int:last-of-type{margin-bottom:0;}\n.lcyment{color:#a675fe;text-align:left;font-size:12px;margin:20px 20px 0;line-height:1.5;}\n.lcyment.ctype2{color:#1b1b1b}\n\n/* 팝업 딤 없는 버전 */\n\n.dimlayer_z.type02{\n\tbackground: transparent;\n}\n\n/* paging */\n.paging_w{text-align:center;font-size:0;line-height:0;margin-top:40px;}\n.pn_control{display:inline-block;width:28px;height:28px;background-repeat:no-repeat;background-position:0 0;vertical-align: middle;border:1px solid #848484;margin:0 -1px;}\n.pn_control.pn_prev2{background-image:url(\"../images/admin/btn_pn_prev2.png\");}\n.pn_control.pn_prev{background-image:url(\"../images/admin/btn_pn_prev.png\");}\n.pn_control.pn_next{background-image:url(\"../images/admin/btn_pn_next.png\");}\n.pn_control.pn_next2{background-image:url(\"../images/admin/btn_pn_next2.png\");}\n.pn_num_list{display:inline-block;padding:0 22px;}\n.pn_num_list > li{display:inline-block;margin:0 4px;}\n.pn_num_list > li.active{}\n.pn_num_list > li.active .pn_num{background:#fff;color:#409eff;font-size:14px;font-weight:700;line-height:21px;}\n.pn_num{display:inline-block;width:21px;color:#6d6c6c;height:21px;line-height:21px;border-radius:100%;text-align:center;vertical-align: middle;font-size:12px;color:#6d6c6c;box-sizing:border-box;}\n\n\n/* radio checkbox */\n.fitem{display:inline-block;position:relative;font-size:0;line-height:0;}\n.frdchk{overflow:hidden;width:0;height:0;font-size:0;opacity:0;appearance: none; -moz-appearance: none; /* Firefox */ -webkit-appearance: none; /* Safari and Chrome */}\n.fitem_lab{display:inline-block;position:relative;padding:2px 0 0 22px;min-height:15px;font-size:12px;color:#444444;line-height:1.3;cursor:pointer;}\n.fitem_lab:before{display:block;content:'';width:17px;height:17px;position:absolute;top:0;left:0;background:url(\"../images/admin/ico_chk.png\") no-repeat 0 0;}\ninput[type=\"radio\"].frdchk + .fitem_lab:before{background-image:url(\"../images/admin/ico_rd.png\") !important}\n.frdchk:checked + .fitem_lab:before{background-position:0 -17px;}\n.frdchk:disabled + .fitem_lab:before{background-position:0 0;}\n.frdchk:disabled + .fitem_lab{opacity:.5;}\n.fitem.oneitem{font-size:0;line-height:0;width:17px;height:17px;}\n.fitem.oneitem .fitem_lab{padding:0;width:17px;height:17px;min-height:0;font-size:0;line-height:0;}\n.infwarn_para{margin-top:0;color:#ff0000;font-size:12px;line-height:1.3;margin-top:-5px;text-align:right;}\n.infwarn_para.type2{margin-top:5px;;}\n.form_int.warn{border-color:#ff0000;}\n\n/* button */\n.btn_cbox{display:inline-block;font-size:14px;color:#515151;line-height:1;white-space: nowrap;border:1px solid #b4b4b4;vertical-align: middle;padding:7px 15px;border-radius:100px;}\n.btn_ctxt{display:inline-block;font-size:12px;vertical-align: middle;border:1px solid #a675fe;line-height:38px;height:38px;white-space: nowrap;padding:0 20px;background-color:#a675fe;box-sizing:border-box;color:#fff;border-radius:2px;}\n.btn_ctxt.dtype2{background:#dd4b39;border-color:#dd4b39;}\n.btn_ctxt.dtype3{background:#13d5aa;border-color:#13d5aa;}\n.btn_ctxt.dtype4{background:#f1f1f1;border-color:#bbbbbb;color:#6b6b6b;}\n\n.btn_ctxt.ltype{background:#fff;border-color:#a675fe;color:#a675fe}\n.btn_ctxt.ltype2{background:#fff;border-color:#dd4b39;color:#dd4b39}\n.btn_ctxt.ltype3{background:#fff;border-color:#13d5aa;color:#0bcaa0}\n.btn_ctxt.ltype4{background:#fff;border-color:#bbbbbb;color:#525252}\n.btn_ctxt span{position:relative;}\n\n.btn_ctxt.small{line-height:29px;height:28px;padding:0 15px;}\n.btn_ctxt.xsmall{line-height:18px;height:19px;padding:0 5px;font-size:10px;}\n\n.btn_both_tb_w.type2{margin:50px 0 0 0;border-top:1px solid #e4e4e4;padding:30px 0 0 0;}\n.btn_both_tb{display:table;width:100%;font-size:0;line-height:0;}\n.btn_both_td{display:table-cell;}\n.btn_both_td:after{display:block;content:'';clear:both;}\n.btn_both_td.both_left{}\n.btn_both_td > *{margin-right:10px;}\n.btn_both_td > *:last-of-type{margin-right:0;}\n.btn_both_td.both_right{text-align:right;}\n.btn_both_tb_w.btop_pos{margin-bottom:15px;}\n.btn_both_tb_w.formbot_pos{margin-top:25px;}\n.btn_cbotxt{font-size:16px;color:#1b1b1b;background:#fafafa;border:1px solid #828282;border-radius:100px;padding:14px 20px 13px;min-width:130px;display:inline-block;text-align:center;line-height:1;}\nbutton.btn_cbotxt{min-width:152px}\n.btn_cbotxt.type2{background:#511bb4;color:#fff;border-color:#511bb4;}\n\n/* login ui */\n.cform_field{display:table;width:100%;}\n.cform_ftr{display:table-row;}\n.cform_fcell{padding-bottom:25px;}\n.cform_ftr:last-of-type .cform_fcell{padding-bottom:0;}\n.cform_fcell.has_lab{width:1px;padding:11px 15px 0 0;}\n.cform_fcell.has_fcont{}\n.cform_fcell.has_fcont .form_int{}\n.cfc_lab{display:inline-block;font-size:14px;color:#1b1b1b;line-height:1.3;white-space: nowrap;}\n.cfin_tb{display:table;width:100%;}\n.cfin_td{display:table-cell;vertical-align: middle;}\n.cfin_td.cfin_left{}\n.cfin_td.cfin_right{text-align:right;}\n.cform_field.type2 .cform_fcell.has_lab{padding-right:20px;}\n.cft_ment{text-align:center;font-size:14px;color:#000000;margin-bottom:55px;}\n.btn_cfmsm_w{margin-top:25px;}\n.btn_cfmsm_w.type2{margin-top:55px;}\n.btn_cfmsm{\n\tdisplay:block;\n\tfont-size:14px;\n\tcolor:#fff;\n\tmin-height:56px;\n\ttext-align:center;\n\tpadding:21px 30px 19px;\n\twhite-space: nowrap;\n\tbackground:#8d4dff;\n\t&.btn-web{background: #2883c5;}\n\t&.btn-certifi{margin-top: 8px;background: #283356;}\n}\n.btn_cfmelse_w{text-align:right;margin-top:20px;}\n.btn_cfmelse_w.type2{text-align:left;}\n.btn_cfmelse{\n\tposition: relative;\n\tdisplay:inline-block;\n\tfont-size:14px;\n\tcolor:#515151;\n\t&:not(:last-child){padding-right: 20px; margin-right: 10px;}\n\t&:not(:last-child)::after{\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: -5px;\n\t\tdisplay: block;\n\t\twidth: 1px;\n\t\theight: 100%;\n\t\tmargin: 0 10px;\n\t\tbackground: #606060;\n\t}\n}\n\n/* table */\n.data_htb_w{border-top:1px solid #000000;}\n.prz_cbox_low > .data_htb_w{}\n.data_htb{width:100%;}\n.data_htb thead th,\n.data_htb tbody td{text-align:center;font-size:12px;padding:20px 10px 17px;}\n.data_htb th.has_notxt,\n.data_htb td.has_notxt{font-size:0;line-height:0;padding:0;}\n.data_htb td.ptype2{padding:0;}\n.data_htb thead th{border-bottom:1px solid #000;color:#2b2b2b;}\n.data_htb tbody td{border-bottom:1px solid #d9d9d9;color:#4e4e4e;}\n.data_htb tbody tr:nth-of-type(even) td{background:#fdfdfd;}\n.data_htb tbody td.nodata_td{background:none !important;}\n.data_htb tbody tr.active td{background:#fafffe;}\n.data_htb tbody tr.type2{color:#999999;}\n.data_htb tbody tr.type2 *{color:#999999;}\n.data_htb thead th:last-of-type,\n.data_htb tbody td:last-of-type{}\n.data_htb thead th:last-of-type{}\n.data_htb tbody td:last-of-type{}\n.data_htb tbody td.has_ico{font-size:0;line-height:0;}\n.txtsym{color:#511bb4 !important;}\n.dt_thwpsp{display:inline-block;color:#2b2b2b;position:relative;line-height:1.3;}\n.data_ctext{display:inline-block;color:#4e4e4e;position:relative;line-height:1.3;}\n.has_sort .dt_thwpsp{padding:0 15px 0 0;cursor:pointer;}\n.has_sort .dt_thwpsp:after{display:block;content:'';width:12px;height:12px;background:url(\"../images/admin/ico_sort_allow.png\") no-repeat 0 0;position:absolute;top:1px;right:0;}\n.has_sort.sort_up .dt_thwpsp:after{background-position:0 -24px;}\n.has_sort.sort_down .dt_thwpsp:after{background-position:0 -12px;}\n\n.no_sort .dt_thwpsp{padding:0;cursor: default;}\n.no_sort .dt_thwpsp:after{display:none;}\n\n\n/*! mobile 버전 - css */\n@media (max-width:1023px){} ","//$path_00: '/';\n//$path_01: '../';\n//$path_02: '../../';\n//$path_03: '../../../';\n//$path_04: '../../../../';\n//$path_05: '../../../../../';\n//$path_css: 'css/';\n//$path_js: 'js/';\n//$path_font: 'font/';\n//$path_images: 'images/';\n//$path_common: 'common/';\n//$path_html: 'html/';\n//$path_main: 'main/';\n//- 기본 경로 변수 세팅\n\n// ie10 ~ ie11 에만 적용되는 css 를 만들때 사용하는 미디어쿼리 소스\n//@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n//    // IE10+ CSS here\n//    .selectbox{\n//        // 텍스트 수직 중앙정렬을 위해서 ie10 ~ 11 속성 재정의\n//        select{\n//            padding:12px 0 10px 15px;\n//            height:auto;\n//        }\n//    }\n//}\n\n//- 변수 경로 사용하는 방법\n// background:url('#{$currentUrl}images/common/ko_bg_test01.jpg')\n\n\n// ******************** code comments ********************\n// 기본 변수 세팅\n// $global-background-color: #ffffff; - 기본 배경 컬러 설정\n// $global-font-color: #000000; - 기본 폰트 컬러 설정\n// $global-font-size: 10px !default; - 기본 폰트 크기 설정\n// ******************** code comments ********************\n$global-background-color: #ffffff;\n$global-font-color: #000000;\n$global-font-size: 10px !default;\n\n\n// ******************** code comments ********************\n// 언어별 설정 <html lang=\"\">\n// font-familu, line-height, word-break, word-wrap, letter-spacing\n// ******************** code comments ********************\n$global-font-family: (\n    'ko': ('Malgun Gothic', '맑은 고딕', Dotum, '돋움', arial, verdana, sans-serif),\n    'en': (Helvetica, Arial, sans-serif),\n    'ja': ('Meiryo', 'メイリオ', 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', sans-serif),\n    'zh': (Helvetica, Arial, 'Microsoft Yahei','微软雅黑', STXihei, '华文细黑', sans-serif)\n);\n$global-line-height: (\n    'ko': (1.15),\n    'en': (1.15),\n    'ja': (1.15),\n    'zh': (1.15)\n);\n$global-word-break: (\n    'ko': (keep-all),\n    'en': (break-all),\n    'ja': (break-all),\n    'zh': (break-all)\n);\n$global-word-wrap: (\n    'ko': (break-word),\n    'en': (break-word),\n    'ja': (break-word),\n    'zh': (break-word)\n);\n$global-letter-spacing: (\n    'ko': (0),\n    'en': (0),\n    'ja': (0),\n    'zh': (0)\n);\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// 폰트 굵기 참고용\n// Thin 100\n// Light 300\n// Regular 400\n// Medium 500\n// Bold 700\n// Black 900\n// 프로젝트내에서 사용되는 폰트 굵기를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// 프로젝트 별로 세팅 하기\n// font size / line-height 참고\n// 24 / 36 - 1.5\n// 26 / 38 - 1.46\n// 28 / 40 - 1.42\n// 30 / 42 - 1.4\n// 32 / 44 - 1.375\n// 34 / 46 - 1.35\n// 42 / 54 - 1.28\n// 48 / 64 - 1.33\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// flex 사용 참고용\n// flex: 1 1 1; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본 값은 없음\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 0%; */\n// flex: 1 1 auto; - 자동으로 더 커지게 하고 자동으로 더 줄어들게 하고 기본값은 자동\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: auto; */\n// flex: 1 1 500px; - 500보다 늘어날 수 있고 500이하로 줄어 들 수 있음, 기본값은 500\n// /* flex-grow: 1; flex-shrink: 1; flex-basis: 500px; */\n\n// /* flex-grow: 0; */ /* 기본값 - flex-basis 이상으로 안 늘어남 */\n// /* flex-grow: 1; */ /* flex-basis 보다 늘어남 */\n// flex-shrink: 1; /* 기본값 - flex-basis 크기 보다 줄어듬 */\n// flex-shrink: 0; /* flex-basis 크기를 최소값으로 고정함 */\n// ******************** code comments ********************\n\n\n// ******************** code comments ********************\n// z-index 세팅 및 관리\n// 기본 z-index를 기준으로 +, - 하여 관리 한다\n// 변수명은 되도록 직관적으로 네이밍 한다\n// 프로젝트에서 사용되는 모든 z-index 값은 아래 정리 되어야 한다\n// 단, z-index:1, z-index:2 등의 10이하 단위들은 컨텐츠내 css 에서 관리한다\n// ******************** code comments ********************\n$base-z-index: 100; // 기본 z-index\n$mobile-mode-dimm-container: $base-z-index + 900; // 반응형 미지원 페이지 안내 컨텐츠 컨테이너 z-index 1000\n$popup-zindex: $base-z-index; // 팝업 z-index 100\n$global-dimm-zindex: $base-z-index - 10; // 딤드 영역 z-index 90\n\n\n// ******************** code comments ********************\n// 컬러값 변수 설정\n// 폰트컬러(color), 배경컬러(background-color), 라인컬러(border)으로 구분한다\n// 변수 네이밍에 컬러 코드 값을 사용하여 작성한다\n// 프로젝트 초반에 컬러값이 정리가 되지 않을 경우, 변수를 먼저 세팅하고 나중에 디자인팀에 현재 설정된 변수 컬러값을 전달하여 불필요한 컬러값들을 정리 하도록 한다\n// ******************** code comments ********************\n$font-333333: #333333;\n$bg-333333: #333333;\n$line-333333: #333333;\n\n\n// ******************** code comments ********************\n// box shadow 샘플\n// box-shadow: 8px 8px 8px 0 rgba(0,0,0,0.05);\n// PSD - box-shadow: 거리 거리 크기 스프레드 rgba(컬러,컬러,컬러,불투명도)\n// 박스 inset - 보더대신 서야 할 때\n// box-shadow: inset -1px 1px 0px 0px rgba(221,221,221,1);\n// 프로젝트내에서 사용하는 box shadow 를 모아놓고 관리한다\n// ******************** code comments ********************\n\n\n// 공통 소스 인클루드 영역\n// sass 에서 _를 넣지 않아도 컴파일을 한다.\n// visual studio code 에서 cmd + click 해서 파일로 이동할때 import 파일이름에 _를 넣으면 오류가 난다.\n//@import 'dev/_src/_scss/mixin';\n\n\n// ******************** code comments ********************\n// disabled 속성\n// ******************** code comments ********************\n@mixin ui-disabled(){\n    // disabled 속성 (모던 브라우저)\n    &.disabled{\n        opacity: 0.5;\n        pointer-events: none;\n        position: relative;\n        z-index: -1;\n        // disabled 속성 ie10 대응\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n            /* IE10+ CSS styles go here */\n            &:after{\n                content:'';\n                position: absolute;\n                width:100%;\n                height:100%;\n                top:0;left:0;\n                background:#ffffff;\n                opacity: 0;\n                z-index: 1;\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// 텍스트 말줄임\n// ******************** code comments ********************\n@mixin ellipsis($line: 1) { // 인자 값의 기본 값은 1\n    @if ($line == 1) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    } @else {\n        display: -webkit-box;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: $line;\n    }\n}\n\n\n// ******************** code comments ********************\n// 언어별 폰트 설정\n// /* 사용 예제 Languages */\n// @include languages();\n// ******************** code comments ********************\n@mixin languages() {\n    @each $type, $font-family in $global-font-family {\n        &:lang(#{$type}) {\n            font-family:$font-family;\n        }\n    }\n    @each $type, $line-height in $global-line-height {\n        &:lang(#{$type}) {\n            line-height:$line-height;\n        }\n    }\n    @each $type, $word-break in $global-word-break {\n        &:lang(#{$type}) {\n            word-break:$word-break;\n        }\n    }\n    @each $type, $word-wrap in $global-word-wrap {\n        &:lang(#{$type}) {\n            word-wrap:$word-wrap;\n        }\n    }\n    @each $type, $letter-spacing in $global-letter-spacing {\n        &:lang(#{$type}) {\n            letter-spacing:$letter-spacing;\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Computes a CSS calc function that betweens a value from\n// * A to B over viewport-width A to viewport-width B.\n// * Requires a media query to cap the value at B.\n// * vw 단위를 활용하여 미디어쿼리 분기의 중간 상태값을\n// * 계산해주는 SASS 함수.\n// * 간격이나 폰트사이즈에 적용하면 자연스러운\n// * 반응형 사이즈 처리가 가능 함.\n// * 참고사이트 http://dohoons.com/blog/1364\n// */\n// 소스 사용예제\n// @media (min-width: $small) {\n// \tpadding: between(16px, 32px, $small, $medium);\n// }\n// @media (min-width: $medium) {\n// \tpadding: between(32px, 90px, $medium, $large);\n// }\n// @media (min-width: $large) {\n// \tpadding: 90px;\n// }\n// ******************** code comments ********************\n$small: 400px;\n$large: 1000px;\n@function between($to, $from, $toWidth, $fromWidth) {\n    $slope: ($to - $from) / ($toWidth - $fromWidth);\n    $base: $from - $slope * $fromWidth;\n\n    @return calc(#{$base} + #{100vw * $slope});\n}\n\n\n// ******************** code comments ********************\n// /**\n// * Read the article: http://sassbreak.com/viewport-relative-headings-with-sass\n// * px 를 vw 로 자동으로 바꿔 줌.\n// * max-breakpoint 를 설정하면 미디어쿼리 브레이크 포인트가 됨.\n// * 그래서 미디어쿼리 브레이크 포인트에 맞춰 px 가 vw 로 변환됨.\n// * 100% 보다 더 크게 적용 하고 싶으면 return 부분을 수정하면됨.\n// * 참고사이트 http://sassbreak.com/viewport-relative-headings-with-sass/\n// */\n// 예) width: get-vw(21px);\n// ******************** code comments ********************\n// Max breakpoint\n$max-breakpoint-main: 1400;\n$max-breakpoint-main-height: 720;\n\n// This could be one of your media query breakpoint variables\n$wide-screen: \"(min-width: #{$max-breakpoint-main}px)\";\n\n// Function\n@function get-vw($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vw; // 100=1, 140=1.4\n}\n\n@function get-vh($target) {\n    // 1 vw is equal to 1% of the viewport width\n    $vw-context: ($max-breakpoint-main-height * .01) * 1px; // 1% viewport width\n    @return ($target/$vw-context) * 1vh;\n}\n\n\n// 입력 받은 값의 숫자만 남겨놓고 단위 지우기\n// Remove the unit of a length\n// @param {Number} $number - Number to remove unit from\n// @return {Number} - Unitless number\n@function strip-unit($number) {\n    @if type-of($number) == 'number' and not unitless($number) {\n        @return $number / ($number * 0 + 1);\n    }\n\n    @return $number;\n}\n\n\n// ******************** code comments ********************\n// px를 rem 변환 (2021.03.22 버전) - 기존버전 보다 다양하게 활용할 수 있음 아래 url 참고 바람.\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n//\n// sass 기본 사용법\n// @include rem(font-size, 24px); // Simple\n// @include rem(padding, 5px 10px); // Multiple values\n// @include rem(border-bottom, 1px solid black); // Multiple mixed values\n// @include rem(box-shadow, 0 0 2px #ccc, inset 0 0 5px #eee); // Comma-separated values\n// // Multiple properties\n// @include rem((\n//     margin: 10px 5px,\n//     text-shadow: (1px 1px #eee, -1px -1px #eee) // Parentheses needed because of comma\n// ));\n//\n// css 출력\n// font-size: 24px;\n// font-size: 1.5rem;\n// padding: 5px 10px;\n// padding: 0.3125rem 0.625rem;\n// border-bottom: 1px solid black;\n// border-bottom: 0.0625rem solid black;\n// box-shadow: 0 0 2px #ccc, inset 0 0 5px #eee;\n// box-shadow: 0 0 0.125rem #ccc, inset 0 0 0.3125rem #eee;\n// margin: 10px 5px;\n// margin: 0.625rem 0.3125rem;\n// text-shadow: 1px 1px #eee, -1px -1px #eee;\n// text-shadow: 0.0625rem 0.0625rem #eee, -0.0625rem -0.0625rem #eee;\n//\n// rem line-height 사용법\n// 예) @include rem(font-size, 23px, 33);\n// 가이드) @include rem(font-size, 23px, psd line-height)\n//\n// libsass (v3.5.0.beta.2)\n// https://github.com/pierreburel/sass-rem\n// ******************** code comments ********************\n\n$rem-baseline: $global-font-size !default;\n$rem-fallback: true !default;\n// 하위브라우저 호환 맞춰야 할때 - false: rem만 출력, true: px,rem 둘다 출력\n$rem-px-only: false !default;\n// rem 변환이 필요 없을 때 - false: rem 변환 사용(기본), true: rem 변환 사용 안함(px출력)\n\n@function rem-separator($list, $separator: false) {\n    @if $separator == \"comma\" or $separator == \"space\" {\n        @return append($list, null, $separator);\n    }\n\n    @if function-exists(\"list-separator\") == true {\n        @return list-separator($list);\n    }\n\n    // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n    $test-list: ();\n    @each $item in $list {\n        $test-list: append($test-list, $item, space);\n    }\n\n    @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n    font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n    $result: ();\n    $separator: rem-separator($values);\n\n    @each $value in $values {\n        @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n            $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\n        } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n            $result: append($result, $value / $rem-baseline + 0rem, $separator);\n        } @else if type-of($value) == \"list\" {\n            $value-separator: rem-separator($value);\n            $value: rem-convert($to, $value...);\n            $value: rem-separator($value, $value-separator);\n            $result: append($result, $value, $separator);\n        } @else {\n            $result: append($result, $value, $separator);\n        }\n    }\n\n    @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n    @if $rem-px-only {\n        @return rem-convert(px, $values...);\n    } @else {\n        @return rem-convert(rem, $values...);\n    }\n}\n\n@mixin rem($properties, $values...) {\n    @if type-of($properties) == \"map\" {\n        @each $property in map-keys($properties) {\n            @include rem($property, map-get($properties, $property));\n        }\n    } @else {\n        @each $property in $properties {\n            @if $rem-fallback or $rem-px-only {\n                #{$property}: rem-convert(px, $values...);\n            }\n            @if not $rem-px-only {\n                #{$property}: rem-convert(rem, $values...);\n            }\n        }\n    }\n}\n\n\n// ******************** code comments ********************\n// rem 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include rem-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// rem 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3rem);\n// 사용 예제)\n// @include rem-calc(width, 100%, '+', 2px);\n// @include rem-calc(width, 80%, '-', 1px);\n// @include rem-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin rem-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num} #{$sign} #{$calc-px});\n    $calc-rem: rem($calc-px);\n    #{$property}: calc(#{$num} #{$sign} #{$calc-rem});\n}\n\n\n// ******************** code comments ********************\n// px를 em 변환\n//\n// em 기본 사용법\n// @include em(height,51px);\n// @include em(padding, 0 15px);\n// font-size + line-height 사용법\n//\n// em line-height 사용법\n// 예) @include em(font-size, 23px, 33);\n// 가이드) @include em(font-size, 23px, psd line-height)\n//\n// em border 사용법\n// 예) @include em(border, 2px, solid blue);\n// 예) @include em(border-left, 20px, solid blue);\n//\n// reset.css 의 기본 폰트와는 별개로 정해짐. psd 가이드에 맞게 $global-font-size 수정함.\n// ******************** code comments ********************\n$baseFont : $global-font-size;\n@mixin em($target, $values, $line-height:0, $border-info...) {\n    $mixin-base-font-size: $baseFont ;\n    $px-values: ();\n    $em-values: ();\n\n    @each $value in $values {\n        @if $value == 0 or $value == 0px {\n            $px-values: join($px-values, 0);\n            $em-values: join($em-values, 0);\n        } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n            $new-em-value: $value / $mixin-base-font-size;\n            $px-values: join($px-values, round($value));\n            $em-values: join($em-values, #{$new-em-value}em);\n        } @else {\n            $px-values: join($px-values, round($value * $mixin-base-font-size));\n            $em-values: join($em-values, #{$value}em);\n        }\n    }\n    @if $target == 'font-size' {\n        @if $line-height == 0 {\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n        } @else{\n            #{$target}: $px-values;\n            #{$target}: $em-values;\n            line-height: $line-height / strip-unit($values);\n        }\n    } @else if $target == 'border' & 'border-left' & 'border-right' & 'border-top' & 'border-bottom' {\n        #{$target}: $px-values $line-height $border-info;\n        #{$target}: $em-values $line-height $border-info;\n    } @else {\n        #{$target}: $px-values;\n        #{$target}: $em-values;\n    }\n}\n\n\n// ******************** code comments ********************\n// em 으로 calc 사용 할때\n// 주의사항 단위가 없는 숫자는 사용 불가. 예) @include em-calc(width, 100%, '/', 2);\n// 위와 같은 경우는 width:calc(100% / 2); 기본형식으로 사용 하면 됨.\n// em 단위를 사용할때 식이 복잡한 경우는 아직 구현되지 않았기 때문에 아래와 같이 사용 합니다.\n// width:calc(100% / 2 - 3em);\n// 사용 예제)\n// @include em-calc(width, 100%, '+', 2px);\n// @include em-calc(width, 80%, '-', 1px);\n// @include em-calc(width, 1vw, '-', 1px);\n// ******************** code comments ********************\n@mixin em-calc($property, $num, $sign, $calc-px){\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-px});\n    $calc-em: em($calc-px);\n    #{$property}: calc(#{$num}, #{$sign}, #{$calc-em});\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-position 값 설정\n// ******************** code comments ********************\n@mixin sprite-position-px($sprite) {\n    $sprite-offset-x: nth($sprite, 3);\n    $sprite-offset-y: nth($sprite, 4);\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-rem($sprite) {\n    $sprite-offset-x: rem(nth($sprite, 3));\n    $sprite-offset-y: rem(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-em($sprite) {\n    $sprite-offset-x: em(nth($sprite, 3));\n    $sprite-offset-y: em(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n@mixin sprite-position-vw($sprite) {\n    $sprite-offset-x: get-vw(nth($sprite, 3));\n    $sprite-offset-y: get-vw(nth($sprite, 4));\n    background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 background-size 값 설정\n// ******************** code comments ********************\n@mixin sprite-background-size-px($sprite) {\n    $sprite-size-width: nth($sprite, 7);\n    $sprite-size-height: nth($sprite, 8);\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-rem($sprite) {\n    $sprite-size-width: rem(nth($sprite, 7));\n    $sprite-size-height: rem(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-em($sprite) {\n    $sprite-size-width: em(nth($sprite, 7));\n    $sprite-size-height: em(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n@mixin sprite-background-size-vw($sprite) {\n    $sprite-size-width: get-vw(nth($sprite, 7));\n    $sprite-size-height: get-vw(nth($sprite, 8));\n    background-size: $sprite-size-width  $sprite-size-height;\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 width 값 설정\n// ******************** code comments ********************\n@mixin sprite-width-px($sprite) {\n    width: nth($sprite, 5);\n}\n@mixin sprite-width-rem($sprite) {\n    width: rem(nth($sprite, 5));\n}\n@mixin sprite-width-em($sprite) {\n    width: em(nth($sprite, 5));\n}\n@mixin sprite-width-vw($sprite) {\n    width: get-vw(nth($sprite, 5));\n}\n\n\n// ******************** code comments ********************\n// pc, mobile = px & rem & em & vw 전용 스프라이트 믹스인 영역\n// pc, mobile = px & rem & em & vw 전용 이미지 height 값 설정\n// ******************** code comments ********************\n@mixin sprite-height-px($sprite) {\n    height: nth($sprite, 6);\n}\n@mixin sprite-height-rem($sprite) {\n    height: rem(nth($sprite, 6));\n}\n@mixin sprite-height-em($sprite) {\n    height: em(nth($sprite, 6));\n}\n@mixin sprite-height-vw($sprite) {\n    height: get-vw(nth($sprite, 6));\n}\n\n\n// ******************** code comments ********************\n// pc px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 pc 버전\n// @include sprite-custom(rem, $pc-logo-pc-ko);\n// @include sprite-custom(em, $pc-logo-pc-ko);\n// @include sprite-custom(px, $pc-logo-pc-ko);\n// @include sprite-custom(vw, $pc-logo-pc-ko);\n// ******************** code comments ********************\n@mixin sprite-custom($unit, $sprite) {\n    @include sprite-image($sprite);\n\n    @if $unit == px{\n        @include sprite-position-px($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-background-size-px($sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($sprite);\n        @include sprite-position-rem($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-rem($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-rem($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-rem($sprite);\n    } @else if $unit == em {\n        @include sprite-position-px($sprite);\n        @include sprite-position-em($sprite);\n        @include sprite-width-px($sprite);\n        @include sprite-width-em($sprite);\n        @include sprite-height-px($sprite);\n        @include sprite-height-em($sprite);\n        @include sprite-background-size-px($sprite);\n        @include sprite-background-size-em($sprite);\n    } @else if $unit == vw {\n        @include sprite-position-vw($sprite);\n        @include sprite-width-vw($sprite);\n        @include sprite-height-vw($sprite);\n        @include sprite-background-size-vw($sprite);\n    }\n}\n\n\n// ******************** code comments ********************\n// mobile px & rem & em & vw 전용 이미지 스프라이트 믹스인 (위 설정값을 가져옴)\n// 사용예 mobile 버전\n// @include retina-sprite-custom(rem, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(em, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(px, $mobile-logo-pc-ko-group);\n// @include retina-sprite-custom(vw, $mobile-logo-pc-ko-group);\n// ******************** code comments ********************\n@mixin retina-sprite-custom($unit, $retina-group) {\n    $normal-sprite: nth($retina-group, 2);\n    $retina-sprite: nth($retina-group, 3);\n    @include sprite-image($retina-sprite);\n    background-repeat: no-repeat;\n\n    @if $unit == px{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n    } @else if $unit == rem{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-rem($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-rem($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-rem($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-rem($normal-sprite);\n    } @else if $unit == em{\n        @include sprite-position-px($normal-sprite);\n        @include sprite-position-em($normal-sprite);\n        @include sprite-width-px($normal-sprite);\n        @include sprite-width-em($normal-sprite);\n        @include sprite-height-px($normal-sprite);\n        @include sprite-height-em($normal-sprite);\n        @include sprite-background-size-px($normal-sprite);\n        @include sprite-background-size-em($normal-sprite);\n    } @else if $unit == vw{\n        @include sprite-position-vw($normal-sprite);\n        @include sprite-width-vw($normal-sprite);\n        @include sprite-height-vw($normal-sprite);\n        @include sprite-background-size-vw($normal-sprite);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// $title\n// ____________________________________________________________________________\n//\n//    SCSS Unit Conversion v.2.1.2\n//\n//\n//    Links:\n//    GitHub   https://github.com/jakob-e/unitconversion\n//    Codepen  https://codepen.io/jakob-e/pen/AHunv\n// ____________________________________________________________________________\n//\n//   Function               Input units\n//\n//   Absolute length\n//   px(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pt(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   pc(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   in(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   mm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   cm(input);             px, pt, pc, in, mm, cm, em, rem, number\n//\n//   Relative length\n//   em(input);             px, pt, pc, in, mm, cm, em, rem, number\n//   rem(input);            px, pt, pc, in, mm, cm, em, rem, number\n//   ex(input);             ex, number\n//   ch(input);             ch, number\n//   vw(input);             vw, number\n//   vh(input);             vh, number\n//   vmin(input);           vmin, number\n//   vmax(input);           vmax, number\n//\n//   Angle\n//   deg(input);            deg, rad, grad, turn, number\n//   rad(input);            deg, rad, grad, turn, number\n//   grad(input);           deg, rad, grad, turn, number\n//   turn(input);           deg, rad, grad, turn, number\n//\n//   Resolution\n//   dpi(input);            dpi, dpcm, dppx, number\n//   dpcm(input);           dpi, dpcm, dppx, number\n//   dppx(input);           dpi, dpcm, dppx, number\n//\n//   Time\n//   s(input);              s, ms, number\n//   ms(input);             s, ms, number\n//\n//   Frequency\n//   hz(input);             hz, khz, number\n//   khz(input);            hz, khz, number\n//\n//   String\n//   str(input);            anything not null\n//\n//   Number, int and uint\n//   num(input);            px, pt, pc, in, mm, cm, em, rem, ex, ch,\n//                          vw, vh, vmin, vmax, deg, rad, grad, turn,\n//                          dpi, dpcm, dppx, s, ms, hz, khz, number\n//   int(input);            as number\n//   uint(input);           as number\n//\n//   ratio                  number to fraction\n//\n//   Aliases\n//   string(input);\n//   number(input);\n//\n// ____________________________________________________________________________\n\n// Base font size in pixel for converting em and rem to absolute lengths.\n$unit-base-font-size: $global-font-size;\n\n\n// Absolute lengths\n@function px($input){ @return to-unit(px, $input); }\n@function pt($input){ @return to-unit(pt, $input); }\n@function pc($input){ @return to-unit(pc, $input); }\n@function in($input){ @return to-unit(in, $input); }\n@function mm($input){ @return to-unit(mm, $input); }\n@function cm($input){ @return to-unit(cm, $input); }\n\n// Angles\n@function deg($input){ @return to-unit(deg, $input); }\n@function rad($input){ @return to-unit(rad, $input); }\n@function grad($input){ @return to-unit(grad, $input); }\n@function turn($input){ @return to-unit(turn, $input); }\n\n// Resolution\n@function dpi($input){ @return to-unit(dpi, $input); }\n@function dpcm($input){ @return to-unit(dpcm, $input); }\n@function dppx($input){ @return to-unit(dppx, $input); }\n\n// Time\n@function ms($input){ @return to-unit(ms, $input); }\n@function s($input){ @return to-unit(s, $input); }\n\n// Frequencies\n@function hz($input){ @return to-unit(hz, $input);}\n@function khz($input){ @return to-unit(khz, $input); }\n\n// Relative lengths\n@function em($input...){\n    $em: to-unit(em, nth($input,1));\n    // Adjust for compounds (visual size)\n    @if length($input) > 1 {\n        @for $i from 2 through length($input){\n            $em: $em / num(em(nth($input,$i)));\n        }\n    }\n    @return $em;\n}\n@function rem($input){ @return to-unit(rem, num(em($input))); }\n\n// Inconvertible relative lengths – depends on font\n@function ex($input){ @return to-unit(ex, $input); }\n@function ch($input){ @return to-unit(ch, $input); }\n\n// Viewport\n@function vw($input){ @return to-unit(vw, $input); }\n@function vh($input){ @return to-unit(vh, $input); }\n@function vmin($input){ @return to-unit(vmin, $input); }\n@function vmax($input){ @return to-unit(vmax, $input); }\n\n// Strings and numbers\n@function str($input){ @return #{$input};  }\n@function num($input){\n    @if type-of($input) != number {\n        @error 'Could not convert `#{$input}` - must be `type-of number`';\n        @return null;\n    }\n    @return $input/($input*0+1);\n}\n@function int($input){\n    $num: num($input);\n    @return if($num<0, ceil($num), floor($num));\n}\n@function uint($input){ @return abs(int($input)); }\n\n// Aliases\n@function string($input){ @return str($input);}\n@function number($input){ @return num($input);}\n\n\n// Conversion function\n@function to-unit($unit, $input){\n    // Test against valid CSS units\n    $to-unit: map-get((\n            px: 0px, pt: 0pt, pc: 0pc, in: 0in, mm: 0mm, cm: 0cm, // absolute length\n            em: 0em, rem: 0rem, ch: 0ch, ex: 0ex,                 // relative length - font based\n            vw: 0vw, vh: 0vh, vmin: 0vmin, vmax: 0vmax,           // relative length - viewport based\n            deg: 0deg, turn: 0turn, grad: 0grad, rad: 0rad,       // angle\n            s: 0s, ms: 0ms,                                       // time\n            hz: 0Hz, khz: 0kHz,                                   // frequency\n            dpi: 0dpi, dpcm: 0dpcm, dppx: 0dppx,                  // resolution\n            pct: 0%, percent: 0%, num: 0, number: 0               // percent or number\n    ), $unit);\n\n    // Error handling – wrong $unit\n    // Incomparable units are caught in convertion\n    @if not $to-unit {\n        @error 'Could not convert to `#{$unit}` – must be a valid CSS unit';\n        @return null;\n    }\n\n    // Number/incomparable conversion\n    @if index(num number ex ch vw vh vmin vmax, $unit) {\n        $value: num($input);\n    }\n\n    // EM/REM convertion using px as base\n    @if index(em rem, unit($input)) {\n        $input: 0px + num($input) * $unit-base-font-size/1px;\n    }\n    @if index(em rem, $unit) and not unitless($input) {\n        $input: 0px + $input;\n        $input: num($input) * 1px/$unit-base-font-size;\n    }\n\n    // Bug fix – resolution units seems to be flipped\n    @if index(dpi dpcm dppx, $unit){\n        $units: (dppx: 0dppx, dpcm: 0dpcm, dpi: 0dpi);\n        $input-unit: map-get($units, unit($input));\n        $input: if(1dppx < 95dpi,num($input-unit + (num($input) + $to-unit)),$input);\n    }\n\n    // Convert\n    @return $to-unit + $input;\n}\n\n//  Convert number to ratio (fraction)\n//  ratio(1.7777778) =>   16/9\n@function ratio($x, $y: null){\n    @if not $y {\n        $n: $x; $y: 1;\n        @while $y < 10 {\n            $x:  $n * 10 - ((10 - $y) * $n);\n            @if $x == round($x){ @return #{$x}/#{$y}; }\n            @else { $y: $y + 1; }\n        }\n        $x: round($n * 1000000); $y: 1000000;\n        @while $x % 10 == 0 { $x: $x/10; $y: $y/10; }\n        @while $x % 5 == 0 { $x: $x/5; $y: $y/5; }\n        @while $x % 2 == 0 { $x: $x/2; $y: $y/2; }\n        @return #{$x}/#{$y};\n    }\n    @else if $x == round($x) and $y == round($y){ @return #{$x}/#{$y}; }\n    @warn 'X and Y must be integers'; @return false;\n}\n\n\n\n@import 'dev/_src/_scss/_sprite/sprite_mobile';\n@import 'dev/_src/_scss/_sprite/sprite_pc';\n"]}